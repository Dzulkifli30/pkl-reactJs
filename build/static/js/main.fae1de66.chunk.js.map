{"version":3,"sources":["../node_modules/typescript/lib sync","serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","components/ModalComponent/ModalComponent.js","kumpulanUrl.js","components/LapPeriode/LapPeriode.jsx","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/AppMenuItem.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/components/ImportScript/ImportScript.js","layouts/Main/Main.js","assets/img_master_backup/bg_login.jpg","layouts/Minimal/Minimal.js","views/Dashboard/Dashboard.js","layouts/MinimalUser/MinimalUser.js","views/NotFound/NotFound.js","views/SignIn/SignIn.js","views/Dashboard/components/UsersByDevice/UsersByDevice.js","views/Signout/Signout.js","views/SignUp/SignUp.js","views/Profile/components/ProfileAddModi/ProfileAddModi.js","views/Profile/Profile.jsx","views/Dashboard/components/VisitorUser/VisitorUser.js","views/ProvinsiList/components/ProvinsisTable/ProvinsisTable.jsx","views/ProvinsiList/components/ProvinsiAddModi/ProvinsiAddModi.js","views/ProvinsiList/components/ProvinsisToolbar/ProvinsisToolbar.js","components/LeafletComponent/context.js","components/LeafletComponent/MapControl.js","components/LeafletComponent/AttributionControl.js","components/LeafletComponent/MapEvented.js","components/LeafletComponent/MapComponent.js","components/LeafletComponent/MapLayer.js","components/LeafletComponent/Path.js","components/LeafletComponent/utils/pick.js","components/LeafletComponent/utils/updateClassName.js","components/LeafletComponent/Circle.js","components/LeafletComponent/CircleMarker.js","components/LeafletComponent/DivOverlay.js","components/LeafletComponent/GridLayer.js","components/LeafletComponent/FeatureGroup.js","components/LeafletComponent/GeoJSON.js","components/LeafletComponent/ImageOverlay.js","components/LeafletComponent/LayerGroup.js","components/LeafletComponent/LayersControl.js","components/LeafletComponent/utils/omit.js","components/LeafletComponent/Marker.js","components/LeafletComponent/Map.js","components/LeafletComponent/Pane.js","components/LeafletComponent/Popup.js","components/LeafletComponent/Polygon.js","components/LeafletComponent/Polyline.js","components/LeafletComponent/Rectangle.js","components/LeafletComponent/ScaleControl.js","components/LeafletComponent/SVGOverlay.js","components/LeafletComponent/TileLayer.js","components/LeafletComponent/Tooltip.js","components/LeafletComponent/VideoOverlay.js","components/LeafletComponent/WMSTileLayer.js","components/LeafletComponent/ZoomControl.js","views/ProvinsiList/dataPropinsi.js","views/ProvinsiList/components/ViewMap/ViewMap.js","views/ProvinsiList/dataSettingprovinsi.js","views/ProvinsiList/ProvinsiList.js","views/KelurahanList/components/KelurahansTable/KelurahansTable.jsx","views/KelurahanList/components/KelurahanAddModi/KelurahanAddModi.js","views/KelurahanList/dataSettingkelurahan.js","views/KelurahanList/KelurahanList.js","views/LaporanKabupaten/components/LaporanKabupatenTable/LaporanKabupatenTable.jsx","views/LaporanKabupaten/components/KabupatenSearchModi/KabupatenSearchModi.jsx","views/LaporanKabupaten/LaporanKabupaten.jsx","views/LaporanPerKabupaten/components/LaporanPerKabupatenTable/LaporanPerKabupatenTable.jsx","views/LaporanPerKabupaten/components/PerKabupatenSearchModi/PerKabupatenSearchModi.jsx","views/LaporanPerKabupaten/LaporanPerKabupaten.jsx","views/LaporanPerKecamatan/components/LaporanPerKecamatanTable/LaporanPerKecamatanTable.jsx","views/LaporanPerKecamatan/components/PerKecamatanSearchModi/PerKecamatanSearchModi.jsx","views/LaporanPerKecamatan/LaporanPerKecamatan.jsx","views/LaporanKecamatan/components/LaporanKecamatanTable/LaporanKecamatanTable.jsx","views/LaporanKecamatan/components/KecamatanSearchModi/KecamatanSearchModi.jsx","views/LaporanKecamatan/LaporanKecamatan.jsx","views/LaporanKelurahan/components/LaporanKelurahanTable/LaporanKelurahanTable.jsx","views/LaporanKelurahan/components/KelurahanSearchModi/KelurahanSearchModi.jsx","views/LaporanKelurahan/LaporanKelurahan.jsx","views/LaporanPerKelurahan/components/PerKelurahanTable/PerKelurahanTable.jsx","views/LaporanPerKelurahan/components/PerKelurahanSearchModi/PerKelurahanSearchModi.jsx","views/LaporanPerKelurahan/LaporanPerKelurahan.jsx","views/LaporanSensusPerKelurahan/components/SensusKelurahanTable/SensusKelurahanTable.jsx","views/LaporanSensusPerKelurahan/components/SensusPerKelurahanSearchModi/SensusPerKelurahanSearchModi.jsx","views/LaporanSensusPerKelurahan/LaporanSensusPerKelurahan.jsx","views/LaporanSensusPerKecamatan/components/SensusKecamatanTable/SensusKecamatanTable.jsx","views/LaporanSensusPerKecamatan/components/SensusPerKecamatanSearchModi/SensusPerKecamatanSearchModi.jsx","views/LaporanSensusPerKecamatan/LaporanSensusPerKecamatan.jsx","views/KecamatanList/components/KecamatanTable/KecamatanTable.jsx","views/KecamatanList/components/KecamatanAddModi/KecamatanAddModi.jsx","views/KecamatanList/KecamatanList.jsx","views/KabupatenList/components/KabupatenTable/KabupatenTable.jsx","views/KabupatenList/components/KabupatenAddModi/KabupatenAddModi.jsx","views/KabupatenList/KabupatenList.jsx","views/LaporanProvID/components/ProvinsiIDTable/ProvinsiIDTable.jsx","views/LaporanProvID/LaporanProvID.jsx","views/LaporanPerProv/components/LaporanPerProvTable/LaporanPerProvtable.jsx","views/LaporanPerProv/components/ComboProv/ComboProv.jsx","views/LaporanPerProv/LaporanPerProvList.jsx","views/RtList/components/RtTable/RtTable.jsx","views/RtList/components/RtAddModi/RtAddModi.jsx","views/RtList/RtList.jsx","views/RwList/components/RwTable/RwTable.jsx","views/RwList/components/RwAddModi/RwAddModi.jsx","views/RwList/RwList.jsx","views/VuserList/components/VuserTable/VuserTable.jsx","views/VuserList/components/VuserAddModi/VuserAddModi.jsx","views/VuserList/VuserList.jsx","views/SettingList/components/SettingTable/SettingTable.jsx","views/SettingList/components/SettingAddModi/SettingAddModi.jsx","views/SettingList/SettingList.jsx","views/KelompokDataList/components/KelompokDataTable/KelompokDataTable.jsx","views/KelompokDataList/components/KelompokDataAddModi/KelompokDataAddModi.jsx","views/KelompokDataList/KelompokDataList.jsx","views/LaporanSensusID/components/LaporanSensusIDTable/LaporanSensusIDTable.jsx","views/LaporanSensusID/components/PencarianLaporan/PencarianLaporan.jsx","views/LaporanSensusID/LaporanSensusID.jsx","views/TargetKkList/components/TargetKkTable/TargetKkTable.jsx","views/TargetKkList/components/TargetKkAddModi/TargetKkAddModi.jsx","views/TargetKkList/TargetKkList.jsx","views/LaporanSensusPerKab/components/LaporanSensusPerKabTable/LaporanSensusPerKab.jsx","views/LaporanSensusPerKab/components/PencarianLaporan/PencarianLaporan.jsx","views/LaporanSensusPerKab/LaporanSensusPerKab.jsx","views/LaporanSensusPerProv/components/LaporanSensusPerProvTable/LaporanSensusPerProvTable.jsx","views/LaporanSensusPerProv/components/PencarianLaporan/PencarianLaporan.jsx","views/LaporanSensusPerProv/LaporanSensusPerProv.jsx","views/UserAccessSurveyList/components/UserAccessSurveyTable/UserAccessSurveyTable.jsx","views/UserAccessSurveyList/components/UserAccessSurveyModi/UserAccessSurveyModi.jsx","views/UserAccessSurveyList/UserAccessSurveyList.jsx","views/LaporanTargetRealisasiID/components/LaporanTargetTable/LaporanTargetTable.jsx","views/LaporanTargetRealisasiID/LaporanTargetRealisasiID.jsx","views/LaporanTargetRealisasiPerprov/components/LaporanTargetSearch/LaporanTargetSearch.jsx","views/LaporanTargetRealisasiPerprov/components/LaporanTargetPerprovTable/LaporanTargetPerprovTable.jsx","views/LaporanTargetRealisasiPerprov/LaporanTargetRealisasiPerprov.jsx","views/LaporanTargetRealisasiPerkab/components/LaporanTargetSearch/LaporanTargetSearch.jsx","views/LaporanTargetRealisasiPerkab/components/LaporanTargetPerkabTable/LaporanTargetPerkabTable.jsx","views/LaporanTargetRealisasiPerkab/LaporanTargetRealisasiPerkab.jsx","views/LaporanKbId/components/LaporanKbIdTable/LaporanKbIdTable.jsx","views/LaporanKbId/LaporanKbId.jsx","views/LaporanKbPerProv/components/LaporanKbSearch/LaporanKbSearch.jsx","views/LaporanKbPerProv/components/LaporanKbPerprovTable/LaporanKbPerprovTable.jsx","views/LaporanKbPerProv/LaporanKbPerProv.jsx","views/LaporanKbPerkab/components/LaporanKbSearch/LaporanKbSearch.jsx","views/LaporanKbPerkab/components/LaporanKbPerkabTable/LaporanKbPerkabTable.jsx","views/LaporanKbPerkab/LaporanKbPerkab.jsx","Routes.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","green","red","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","info","warning","orange","error","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","paddingBottom","paddingTop","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","useStyles","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","SearchInput","props","className","textfind","onChange","style","rest","classes","Paper","clsx","Input","disableUnderline","flexShrink","sm","md","lg","neutral","danger","StatusBullet","size","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","modal","justifyContent","overflow","border","shadows","ModalComponent","datas","handleChange","getProv","getDataBackend","setData2","setData","setRowSelect","users","groups","roles","open","setOpen","title","rowSelect","ComponenAddModi","handleClose","ViewMap","AnggotaKK","setAnggotaKK","auditTrailsfind","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","urlport","urlPostLogin","urlAddVuser","urlEditVuser","urlGetVuser","urlAddSetting","urlEditSetting","urlGetSetting","urlDeleteSetting","urlAddKelompokData","urlEditKelompokData","urlGetKelompokData","urlDeleteKelompokData","urlShowTargetKkPerProv","urlAddTargetKk","urlEditTargetKk","urlGetTargetKk","urlProv","urlAddProv","urlEditProv","urlDeleteProv","urlLaporanProv","urlLaporanPerProv","urlKec","urlAddKec","urlEditKec","urlShowKec","urlShowKecs","urlLaporanKec","urlShowPerKec","urlKel","urlAddKel","urlEditKel","urlShowKel","urlDeleteKel","urlLaporanKel","urlLaporanPerKel","urlShowKab","urlShowsKab","urlKab","urlAddKab","urlEditKab","urlLaporanPerKab","urlShowRw","urlRw","urlAddRw","urlEditRw","urlShowRt","urlRt","urlAddRt","urlEditRt","urlShowLaporanSensusID","urlShowLaporanSensusPerProv","urlShowLaporanSensusPerKab","urlShowLaporanSensusPerKec","urlShowLaporanSensusPerKel","urlGetUserAccessSurvey","urlshowKKPerprov","urlshowRealisasiID","urlRealisasiPerprov","urlRealisasiPerkab","urlRealisasiKBID","urlRealisasiKBPerProv","urlRealisasiKBPerKab","buttonSuccess","marginTop","buttonCancel","LapPeriode","schema","useState","isValid","values","touched","errors","formState","setFormState","useEffect","validate","console","log","TextField","fullWidth","label","margin","name","select","variant","Periode_Sensus","tmp","periode_sensus","localStorage","getItem","option","push","map","handling","flexDirection","minHeight","avatar","PropTypes","string","isRequired","array","createStyles","menuItem","menuItemIcon","AppMenuItem","href","items","level","key","isExpandable","length","React","MenuItemChildren","role","item","MenuItemRoot","data-toggle","fontWeightMedium","active","SidebarNav","pages","page","media","textAlign","content","actions","breakpoints","up","backgroundImage","backgroundRepeat","backgroundSize","resizeMode","nav","Sidebar","onClose","signOutButton","marginLeft","ImportScript","resourceUrl","script","document","createElement","src","async","body","appendChild","removeChild","shiftContent","paddingLeft","Main","children","useTheme","useMediaQuery","defaultMatches","type","data-target","replace","Minimal","animationIn","animationOut","isVisible","Dashboard","transparent","history","image","maxWidth","NotFound","Grid","container","justify","xs","Typography","alt","chartContainer","position","stats","device","deviceIcon","user_name","presence","allowEmpty","maximum","password","grid","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","sugestion","textField","signInButton","withRouter","event","persist","target","hasError","field","onSubmit","a","requestOptions","method","mode","headers","JSON","stringify","fetch","then","res","json","data","Swal","fire","showConfirmButton","timer","setItem","UserName","NamaLengkap","roleName","Jabatan","Alamat","NIK","Email","Foto","data2","value_setting","data3","data4","alatKB","catch","alert","swal","preventDefault","getData","find","user","userName","userPassword","md5","verticalAlign","helperText","Button","disabled","quoteContainer","down","quote","backgroundPosition","quoteInner","quoteText","socialButtons","socialIcon","clear","firstName","lastName","email","policy","policyCheckbox","signUpButton","person","IconButton","onClick","goBack","Checkbox","policyText","Link","RouterLink","to","underline","FormHelperText","KodeDepdagri","nama_provinsi","IsActive","ProfileAddModi","getMockData","Card","autoComplete","noValidate","CardHeader","subheader","Divider","CardContent","defaultValue","Password","confirmPassword","CardActions","varJson","LastModifiedBy","tester","reload","Profile","DialogContent","trigger","difference","differenceIcon","differenceValue","inner","minWidth","nameContainer","importButton","ProvinsisTable","handleOpenViewMap","handleDelete","filteredItems","provinsifind","order","orderBy","SettingProvinsi","provinsisExport","handleOpen","downloadCSV","selectedProvinsis","setSelectedProvinsis","Export","convertArrayOfObjectsToCSV","filterText","resetPaginationToggle","columns","selector","sortable","cell","row","subHeaderComponentMemo","useMemo","class","searchInput","placeholder","customStyles","header","borderTopStyle","borderTopWidth","borderTopsColor","rows","borderTopColor","borderBottomStyle","borderBottomWidth","borderBottomColor","headRow","borderBott0mColor","headCells","borderLeftStyle","borderLeftWidth","borderLeftColor","borderRightStyle","borderRightWidth","borderRightColor","cells","keyField","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","selectableRows","persistTableHead","dense","spacer","exportButton","ProvinsiAddModi","id_provinsi","undefined","url","CreatedBy","leafletContext","createContext","LeafletConsumer","Consumer","LeafletProvider","Provider","withLeaflet","WrappedComponent","WithLeafletComponent","ref","leaflet","displayName","LeafletComponent","forwardRef","hoistNonReactStatics","MapControl","leafletElement","createLeafletElement","_props","fromProps","toProps","setPosition","addTo","prevProps","updateLeafletElement","remove","Control","Attribution","EVENTS_RE","MapEvented","_leafletEvents","extractLeafletEvents","bindLeafletEvents","_prevProps","el","Object","forEach","ev","off","reduce","prop","test","p","toLowerCase","next","prev","on","diff","MapComponent","pane","MapLayer","layerContainer","_fromProps","_toProps","addLayer","attribution","attributionControl","removeAttribution","addAttribution","removeLayer","contextValue","OPTIONS","Path","popupContainer","setStyleIfChanged","object","obj","setStyle","nextStyle","getPathOptions","isEqual","splitClassName","center","LeafletCircle","getOptions","setLatLng","setRadius","LeafletCircleMarker","split","filter","addClassName","cls","DomUtil","addClass","removeClassName","removeClass","prevClassName","nextClassName","DivOverlay","onOpen","forceUpdate","updateClassName","_container","isOpen","update","onRender","_contentNode","createPortal","GridLayer","LeafletFeatureGroup","LeafletGeoJSON","LeafletGridLayer","opacity","setOpacity","setZIndex","maxZoom","minZoom","LeafletImageOverlay","bounds","setUrl","setBounds","latLngBounds","LeafletLayerGroup","ControlledLayer","layer","removeLayerControl","BaseLayer","addBaseLayer","bind","Overlay","addOverlay","LayersControlExport","controlProps","Layers","collapsed","collapse","expand","setTimeout","Children","child","cloneElement","omit","keysToOmit","acc","LeafletMarker","setIcon","zIndexOffset","setZIndexOffset","draggable","dragging","enable","disable","idCounter","LEAFLET_PANES","PANE_RE","paneStyles","Popup","state","context","getPane","createPane","removePane","isDefault","isLeafletPane","getParentPane","setState","_panes","_paneRenderers","LeafletPolygon","positions","setLatLngs","LeafletPolyline","onPopupOpen","popup","onPopupClose","autoPan","_map","_panAnim","_adjustPan","LeafletPopup","popupopen","popupclose","bindPopup","openOn","LeafletRectangle","Scale","setAttribute","removeAttribute","createElementNS","preserveAspectRatio","viewBox","LeafletSVGOverlay","LeafletTileLayer","Tooltip","onTooltipOpen","tooltip","onTooltipClose","LeafletTooltip","tooltipopen","tooltipclose","bindTooltip","unbindTooltip","VideoOverlay","LeafletVideoOverlay","play","getElement","pause","WMSTileLayer","params","TileLayer","WMS","prevUrl","prevParams","setParams","superOptions","ZoomControl","Zoom","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","iconSize","TitleModule","HeaderData","flagDisplay","mockData","mock","yogi","ProvinsiList","setFilteredItems","provinsis","resJson","setProvinsis","deleteProv","deleteProvinsi","selectedProvinsis_string","join","provinsis3","entry","toUpperCase","setProvinsifind","result","ctr","rowProvinsisSelect","setRowProvinsisSelect","setTitle","mockDataSettingProvinsi","componenPopup","field1","value1","field2","value2","nmProvinsi","kdProvinsi","status","keyId","MessageButton","provinsis4","Array","isArray","rowProvinsi","onExport","csv","encodeURI","click","KelurahansTable","SettingKelurahan","selectedKelurahans","setSelectedKelurahans","nama_kelurahan","KelurahanAddModi","kabupaten","setKabupaten","kecamatan","setKecamatan","provinsi","setProvinsi","showKab","showKecamatan","id_kabupaten","id_kelurahan","nama_kabupaten","id_kecamatan","nama_kecamatan","KelurahanList","getKel","kelurahans","setKelurahans","deleteKel","rowKelurahansSelect","setRowKelurahanSelect","kelurahansExport","setKelurahanfind","mockDataSettingKelurahan","nmKelurahan","kdKelurahan","kelurahans4","rowKelurahan","fontFamily","LaporanKabupatenTable","kab","setKab","kabupatenfind","selectedkabupaten","setselectedkabupaten","onChangeFind","setProv","font","KecamatanAddModi","setkabupaten","prov","nama","pencarian","paramProv","id_prov","LaporanKabupaten","rowkabupatenSelect","setRowkabupatenSelect","setSelectedkabupaten","kabupatenExport","setkabupatenfind","KabupatenSearchModi","rowKabupaten","kabupaten4","Nama_Kabupaten","LaporanPerKabupatenTable","kecamatanfind","kecamatanExport","selectedkecamatan","setselectedkecamatan","PerKabupatenSearchModi","paramKab","id_kab","LaporanPerKabupaten","getPerKab","perKabupaten","setPerKabupaten","rowPerKabupatenSelect","setRowPerKabupatenSelect","setSelectedPerKabupaten","kecamatan4","LaporanPerKecamatanTable","PerKecamatanSearchModi","setKec","paramKec","id_kec","showKec","LaporanPerKecamatan","getPerKec","perKecamatan","setPerKecamatan","rowPerKecamatanSelect","kec","setRowPerKecamatanSelect","selectedPerKecamatan","LaporanKecamatanTable","KecamatanSearchModi","LaporanKecamatan","getKec","setkecamatan","rowkecamatanSelect","setRowkecamatanSelect","setSelectedkecamatan","LaporanKelurahanTable","kelurahanfind","kelurahanExport","selectedkelurahan","setselectedkelurahan","KelurahanSearchModi","LaporanKelurahan","kelurahan","setkelurahan","rowkelurahanSelect","setRowkelurahanSelect","setSelectedkelurahan","kelurahan4","PerKelurahanTable","Perkelurahanfind","PerkelurahanExport","selectedPerkelurahan","setselectedPerkelurahan","setKel","kel","PerKelurahanSearchModi","id_kel","showKel","LaporanPerKelurahan","Perkelurahan","setPerkelurahan","rowPerkelurahanSelect","urlgetKel","setRowPerkelurahanSelect","setSelectedPerkelurahan","Perkelurahan4","SensusKelurahanTable","SensusPerKelurahanSearchModi","showTargetKkPerProv","LaporanSensusPerKelurahan","SensusKecamatanTable","SensusPerKecamatanSearchModi","LaporanSensusPerKecamatan","KecamatanTable","KecamatanList","deleteKec","KabupatenTable","KabupatenAddModi","KabupatenList","getKab","deleteKab","ProvinsiIDTable","laporanProvID","LaporanPerProvTable","dataProv","ComboProv","LaporanPerProvList","RtTable","rtfind","selectedrt","setselectedrt","KodeRT","nama_rt","RtAddModi","rw","setRw","showRw","id_rt","id_rw","nama_rw","RtList","getRt","rt","setrt","deleteRt","rowrtSelect","setRowrtSelect","setSelectedrt","rtExport","setrtfind","rt4","RwTable","rwfind","selectedrw","setselectedrw","RwAddModi","setKelurahan","RwList","getRw","setrw","deleteRw","rowrwSelect","setRowrwSelect","setSelectedrw","rwExport","setrwfind","nmRw","kdRw","rw4","RwExport","rowRw","VuserTable","Vuserfind","SettingVuser","VuserExport","selectedVuser","setSelectedVuser","VuserAddModi","VuserList","getVuser","Vuser","setVuser","deleteUser","deleteVuser","selectedVuser_string","Vuser3","setVuserfind","rowVuserSelect","setRowVuserSelect","nmVuser","kdVuser","Vuser4","rowVuser","SettingTable","SettingAddModi","kelompokData","setKelompokData","getKelData","Id_kelompok_data","nama_kelompok_data","id_setting","getSetting","deleteSetting","KelompokDataTable","KelompokDataAddModi","KelompokDataList","getKelompokData","deleteKelompokData","LaporanSensusID","sensusID","setSensusID","PencarianLaporan","showTargetKK","rowsensusIDSelect","setRowsensusIDSelect","selectedsensusID","setSelectedsensusID","sensusIDExport","sensusIDfind","setSensusIDfind","LaporanSensusIDTable","sensusID4","Nama_sensusID","rowsensusID","TargetKkTable","parseInt","Target_KK","TargetKkAddModi","setRt","showRt","id_rt_old","Periode_Sensus_old","getTargetKk","deleteTargetKk","RowVuserSelect","LaporanSensusPerKab","sensus","setSensus","showLaporanSensusPerKab","rowsensusSelect","setRowsensusSelect","selectedsensus","setSelectedsensus","sensusExport","sensusfind","setSensusfind","sensus4","Nama_sensus","rowsensus","LaporanSensusPerProvTable","LaporanSensusPerProv","UserAccessSurveyTable","id_user","UserAccessSurveyModi","getUser","setUser","getProvinsi","UserAccessSurveyList","getUAS","uas","setUAS","deleteUAS","rowuasSelect","setRowuasSelect","selecteduas","setSelecteduas","uasExport","uasfind","setUASfind","uas4","nama_uas","rowuas","LaporanTargetTable","Periode","LaporanTargetRealisasiID","showRealisasiID","Nama_Provinsi","LaporanTargetSearch","LaporanTargetPerProvTable","LaporanTargetRealisasiPerprov","LaporanTargetPerprovTable","LaporanTargetRealisasiPerkab","LaporanTargetPerkabTable","Nama_Kecamatan","LaporanKbIdTable","parse","alat_kb","LaporanKbId","LaporanKbSearch","LaporanKbPerProvTable","LaporanKbPerProv","LaporanKbPerprovTable","LaporanKbPerKab","LaporanKbPerkabTable","Routes","exact","from","SettingListView","MainLayout","path","ProfileView","SignInView","MinimalLayout","KelompokDataListView","DashboardView","TargetKkListView","VuserListView","ProvinsiListView","KabupatenListView","KecamatanListView","KelurahanListView","RtListView","RwListView","UserAccessSurveyListView","LaporanProvIDView","LaporanPerProvView","LaporanKabupatenView","LaporanPerKabupatenView","LaporanPerKecamatanView","LaporanKecamatanView","LaporanKelurahanView","LaporanPerKelurahanView","LaporanSensusIDView","LaporanSensusPerKabVIew","LaporanSensusPerProvView","LaporanSensusPerKelurahanView","LaporanSensusPerKecamatanView","LaporanTargetRealisasiIDView","LaporanTargetRealisasiPerprovView","LaporanTargetRealisasiPerkabView","LaporanKbIdView","LaporanKbProvView","LaporanKbKabView","SignoutView","NotFoundView","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fae1de66.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 475;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default {\r\n  draw\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white='#FFFFFF';\r\nconst black='#000000';\r\nconst green='#4caf50';\r\nconst red='#f44336';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  green,\r\n  red,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.green[900],//'#000000',\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    // fontFamily:'Poppins',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    // fontFamily:'Poppins',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`,\r\n    paddingBottom: '4px',\r\n    paddingTop: '4px',\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n  if (value !== true) {\r\n    return options.message || 'must be checked';\r\n  }\r\n};\r\n\r\nexport default {\r\n  checked\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input, TextField } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput=props => {\r\n  const { className, textfind, onChange, style, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n\r\n      <SearchIcon className={classes.icon} />\r\n\r\n      <Input\r\n\r\n        className={classes.input}\r\n        disableUnderline\r\n        onChange={onChange}\r\n        value={textfind}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet=props => {\r\n  const { className, size, color, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes={\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps={\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouteWithLayout=props => {\r\n  const { layout: Layout, component: Component, ...rest }=props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout className=\"font-poppins\">\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes={\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    left: '10%',\r\n    justifyContent: \"center\",\r\n    overflow: 'scroll',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"80%\",\r\n    height: \"90%\",\r\n    overflow: 'scroll'\r\n  }\r\n}));\r\n\r\n\r\nconst ModalComponent=props => {\r\n  const { datas,\r\n    handleChange, getProv, getDataBackend, setData2, setData,\r\n    setRowSelect, users, groups, roles, className, style, open, setOpen, title, rowSelect,\r\n    ComponenAddModi, ViewMap, handleClose, AnggotaKK, setAnggotaKK,\r\n    auditTrailsfind, ...rest }=props;\r\n  const classes=useStyles();\r\n  //alert(\"open=\"+open);\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={open}\r\n      //onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        {/* */}\r\n\r\n        <div className={classes.paper}>\r\n          <h2 id=\"transition-modal-title\">&nbsp;</h2>\r\n          <ComponenAddModi getProv={getProv} getDataBackend={getDataBackend}\r\n            setData2={setData2}\r\n            handleChange={handleChange} setData={setData}\r\n            setOpen={setOpen} setAnggotaKK={setAnggotaKK} \r\n            AnggotaKK={AnggotaKK}\r\n            setRowSelect={setRowSelect} datas={datas} users={users} groups={groups}\r\n            roles={roles} rowSelect={rowSelect} title={title} handleClose={handleClose}\r\n            auditTrailsfind={auditTrailsfind}\r\n          ></ComponenAddModi>\r\n\r\n          {/*}          <UserAddModi rowUsersSelect={rowUsersSelect} title={title} handleClose={handleClose}></UserAddModi>\r\n\r\n{*/}        </div>\r\n\r\n        {/**/}\r\n\r\n\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\nModalComponent.propTypes={\r\n  className: PropTypes.string,\r\n  handleClose: PropTypes.func,\r\n  open: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default ModalComponent;\r\n","let urlport=\"192.168.137.61\";\r\nlet urlportrefresh=\"http://localhost:8000/\";\r\n\r\n\r\n // Vuser\r\nexport const urlPostLogin=urlport+'vuser/showUser'\r\nexport const urlAddVuser=urlport+'vuser/storeUser'\r\nexport const urlEditVuser=urlport+'vuser/updateUser'\r\nexport const urlUbahPassword=urlport+'vuser/ubahPassword'\r\nexport const urlGetVuser=urlport+'vuser/getUser'\r\nexport const urlDeleteUser=urlport+'vuser/deleteUser'\r\n\r\n// setting\r\nexport const urlShowSetting=urlport+'setting/showSetting'\r\nexport const urlAddSetting=urlport+'setting/storeSetting'\r\nexport const urlEditSetting=urlport+'setting/updateSetting'\r\nexport const urlGetSetting=urlport+'setting/getSetting'\r\nexport const urlDeleteSetting=urlport+'setting/deleteSetting'\r\n\r\n// kel data\r\nexport const urlShowKelompokData=urlport+'kelompok-data/showKelompokData'\r\nexport const urlAddKelompokData=urlport+'kelompok-data/storeKelompokData'\r\nexport const urlEditKelompokData=urlport+'kelompok-data/updateKelompokData'\r\nexport const urlGetKelompokData=urlport+'kelompok-data/getKelompokData'\r\nexport const urlDeleteKelompokData=urlport+'kelompok-data/deleteKelompokData'\r\n\r\n// targetKK\r\nexport const urlShowTargetKk=urlport+'target-kk/showTargetKk'\r\nexport const urlShowTargetKkPerProv=urlport+'target-kk/showTargetKkPerProv'\r\nexport const urlAddTargetKk=urlport+'target-kk/storeTargetKk'\r\nexport const urlEditTargetKk=urlport+'target-kk/updateTargetKk'\r\nexport const urlGetTargetKk=urlport+'target-kk/getTargetKk'\r\nexport const urlDeleteTargetkk=urlport+'target-kk/deleteTargetKk'\r\n\r\n //provinsi\r\nexport const urlProv=urlport+'provinsi/getProvinsi'\r\nexport const urlAddProv=urlport+'provinsi/storeProv'\r\nexport const urlEditProv=urlport+'provinsi/updateProv'\r\nexport const urlDeleteProv= urlport+ 'provinsi/deleteProv'\r\nexport const urlLaporanProv=urlport+'provinsi/laporanProv'\r\nexport const urlLaporanPerProv=urlport+'provinsi/laporanPerProv'\r\n\r\n //Kecamatan\r\n export const urlKec=urlport+'kecamatan/getKecamatan'\r\n export const urlAddKec=urlport+'kecamatan/storeKec'\r\n export const urlEditKec=urlport+'kecamatan/updateKec'\r\n export const urlShowKec=urlport+'kecamatan/showKecamatan'\r\n export const urlShowKecs=urlport+'kecamatan/showKecamatans'\r\n export const urlDeleteKec=urlport+'kecamatan/deleteKec'\r\n export const urlLaporanKec=urlport+'kecamatan/laporanKec'\r\n export const urlShowPerKec=urlport+'kecamatan/show-per-kec'\r\n\r\n// Kelurahan\r\nexport const urlKel = urlport+'kelurahan/getKelurahan'\r\nexport const urlAddKel = urlport+'kelurahan/storeKel'\r\nexport const urlEditKel = urlport+'kelurahan/updateKel'\r\nexport const urlShowKel = urlport + '/kelurahan/showKel'\r\nexport const urlDeleteKel = urlport+'kelurahan/deleteKel'\r\nexport const urlLaporanKel=urlport+'kelurahan/laporanKel'\r\nexport const urlLaporanPerKel=urlport+'kelurahan/laporanPerKel'\r\n\r\n//Kabupaten\r\nexport const urlShowKab=urlport+'kabupaten/showKabupaten'\r\nexport const urlShowsKab=urlport+'kabupaten/showsKabupaten'\r\n export const urlKab=urlport+'kabupaten/getKabupaten'\r\n export const urlDeleteKab=urlport+'kabupaten/deleteKab'\r\n export const urlAddKab=urlport+'kabupaten/storeKab'\r\n export const urlEditKab=urlport+'kabupaten/updateKab'\r\n export const urlLaporanKab=urlport+'kabupaten/laporanKab'\r\n export const urlLaporanPerKab=urlport+'kabupaten/show-per-kab'\r\n\r\n //RW\r\nexport const urlShowRw=urlport+'rw/showRw'\r\nexport const urlRw=urlport+'rw/getRw'\r\nexport const urlAddRw=urlport+'rw/storeRw'\r\nexport const urlEditRw=urlport+'rw/updateRw'\r\nexport const urlDeleteRw=urlport +'rw/deleteRw'\r\n\r\n//RT\r\nexport const urlShowRt=urlport+'rt/showRt'\r\nexport const urlRt=urlport+'rt/getRt'\r\nexport const urlAddRt=urlport+'rt/storeRt'\r\nexport const urlEditRt=urlport+'rt/updateRt'\r\nexport const urlDeleteRt=urlport +'rt/deleteRt'\r\n\r\n//LaporanSensus\r\nexport const urlShowLaporanSensusID=urlport +'laporan-sensus/indonesia'\r\nexport const urlShowLaporanSensusPerProv=urlport +'laporan-sensus/perprov'\r\nexport const urlShowLaporanSensusPerKab=urlport +'laporan-sensus/perkab'\r\nexport const urlShowLaporanSensusPerKec=urlport +'laporan-sensus/perkec'\r\nexport const urlShowLaporanSensusPerKel=urlport +'laporan-sensus/perkel'\r\n\r\n//User Access Survey\r\nexport const urlGetUserAccessSurvey = urlport + '/user-access-survey/get'\r\nexport const urlPostLoginUser = urlport + '/user-access-survey/showUAS'\r\nexport const urlAddUserAccessSurvey = urlport + '/user-access-survey/store'\r\nexport const urlEditUserAccessSurvey = urlport + '/user-access-survey/update'\r\nexport const urlDeleteUserAccessSurvey = urlport + '/user-access-survey/delete'\r\n\r\n//Form KK\r\nexport const urlGetFormKK = urlport + '/form-kk/getFormKK'\r\nexport const urlAddFormKK = urlport + '/form-kk/storeFormKK'\r\nexport const urlEditFormKK = urlport + '/form-kk/updateFormKK'\r\nexport const urlDeleteFormKK = urlport + '/form-kk/deleteFormKK'\r\nexport const urlAccForm = urlport +'/form-kk/acceptFormKK'\r\nexport const urlGetIdKK = urlport + '/form-kk/getIdKK'\r\nexport const urlAccKK = urlport + '/form-kk/acceptFormKK'\r\nexport const urlshowKKPerprov = urlport + '/form-kk/showKKPerprov'\r\n\r\n//Anggota KK\r\nexport const urlGetAnggotaKK = urlport + '/anggota-kk/getAnggotaKK'\r\nexport const urlShowAnggotaKK=urlport+'/anggota-kk/showAnggotaKK'\r\nexport const urlAddAnggotaKK=urlport+'/anggota-kk/storeAnggotaKK'\r\nexport const urlEditAnggotaKK=urlport+'/anggota-kk/updateAnggotaKK'\r\nexport const urlGetNIKAnggota=urlport+'/anggota-kk/getNIKAnggota'\r\n\r\n//KB\r\nexport const urlGetKB = urlport + 'data-kb/getKB'\r\nexport const urlUpdateKB = urlport + 'data-kb/updateKB'\r\nexport const urlEditKB = urlport + 'data-kb/editKB'\r\nexport const urlShowNama = urlport + 'data-kb/showNama'\r\nexport const urlAddKB = urlport + 'data-kb/addKB'\r\nexport const urlDeleteKB = urlport + 'data-kb/deleteKB'\r\n\r\n// Realisasi\r\nexport const urlshowRealisasiID = urlport + 'realisasi/id'\r\nexport const urlRealisasiPerprov = urlport + '/realisasi/perprov'\r\nexport const urlRealisasiPerkab = urlport + '/realisasi/perkab'\r\nexport const urlRealisasiKBID = urlport + '/realisasi/kbId'\r\nexport const urlRealisasiKBPerProv = urlport + '/realisasi/alatKbPerProv'\r\nexport const urlRealisasiKBPerKab = urlport + '/realisasi/alatKbPerKab'\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowTargetKk } from '../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LapPeriode=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    // Periode_Sensus: {\r\n    //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n    // },\r\n  };\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // rowSelect.Periode_Sensus = localStorage.getItem(\"Periode Sensus\")\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n//   const handleChange=event => {\r\n    \r\n//     const errors=validate(rowSelect, schema);\r\n\r\n//     setFormState(formState => ({\r\n//       ...rowSelect,\r\n//       isValid: errors? false:true,\r\n//       errors: errors||{}\r\n//     }));\r\n    \r\n//     setRowSelect({\r\n//       ...rowSelect,\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   }\r\n\r\n  const handling =()=>{\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--)\r\n       {tmp.push({\"option\" : option});}\r\n      console.log('temp =',tmp)\r\n      return tmp.map(option => (\r\n          <option value={option.option}>\r\n            {option.option}\r\n          </option>\r\n                   \r\n           ))}\r\n  }\r\n\r\n  return (\r\n\r\n               <TextField\r\n                fullWidth\r\n                label=\"Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={onChange}\r\n                select\r\n                variant=\"outlined\"\r\n                value={rowSelect.Periode_Sensus}\r\n              >\r\n                {handling()}\r\n              </TextField>\r\n     \r\n  );\r\n};\r\n\r\nLapPeriode.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LapPeriode;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    backgroundColor: '#fff',\r\n\r\n  }\r\n}));\r\n\r\nconst Footer=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        &copy;{' 2021. Transparansi APBN - BackOffice       '}\r\n      </Typography>\r\n      <Typography variant=\"caption\">\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography, Hidden } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1),\r\n    color: '#fff',\r\n  }\r\n}));\r\n\r\nconst Profile=props => {\r\n  const { className, ...rest }=props;\r\n  const { history }=props;\r\n  const classes=useStyles();\r\n\r\n  /*\r\n    const [user, setUser]=\r\n      useState(\r\n        localStorage.getItem('userInLocalStorage')||null\r\n      );\r\n    )\r\n  if (user) alert(\"userInLocalStorage\"); else alert(\"Error\")\r\n  console.log(\r\n    localStorage.getItem('userInLocalStorage')\r\n  \r\n  );\r\n  */\r\n  //  if (!localStorage.getItem('user_id')) alert(\"dsdsd\")\r\n  //alert(!localStorage.getItem('user_id'))\r\n  if (!localStorage.getItem('user_id')) return <Redirect to='/login' />;\r\n  if (!localStorage.getItem('accessId')) return <Redirect to='/login' />;\r\n\r\n  var user={\r\n    name: localStorage.getItem('firstName'),\r\n    //avatar: localStorage.getItem('avatar')\r\n    //bio: 'Brain Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n\r\n      >\r\n\r\n        {user.name}\r\n      </Typography>\r\n\r\n\r\n      {/*}\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n        \r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n\r\n      >\r\n\r\n        {user.name}\r\n      </Typography>\r\n  <Typography variant=\"body2\">{/*user.bio*/}{/*}</Typography>\r\n    {*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes={\r\n  className: PropTypes.string,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n//import ListItemLink from '@material-ui/core/ListItemLink'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\n// React runtime PropTypes\r\n//{ title, href, items=[], key, level }\r\nexport const AppMenuItemPropTypes={\r\n    title: PropTypes.string.isRequired,\r\n    href: PropTypes.string,\r\n    items: PropTypes.array,\r\n    key: PropTypes.string,\r\n}\r\n\r\n// TypeScript compile-time props type, infered from propTypes\r\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\r\ntype appMenuItemPropTypes=PropTypes.InferProps<typeof AppMenuItemPropTypes>\r\ntype appMenuItemPropsWithoutItems=Omit<appMenuItemPropTypes, 'items'>\r\n\r\n// Improve child items declaration\r\nexport type AppMenuItemProps=appMenuItemPropsWithoutItems&{\r\n    items?: AppMenuItemProps[]\r\n}\r\n\r\nconst AppMenuItem: React.FC<AppMenuItemProps>=props => {\r\n    const { title, href, items=[], key, level }=props\r\n    const classes=useStyles()\r\n    const isExpandable=items&&items.length>0\r\n    const [open, setOpen]=React.useState(false)\r\n    console.log(items)\r\n    const marginLeftVar=level*22;\r\n    const MenuItemChildren=isExpandable? (\r\n        <ul className=\"dropdown-menu\" role=\"menu\">\r\n\r\n            {\r\n                items.map((item, index) => (\r\n                    <AppMenuItem {...item} key={index} level={level+1} />\r\n                ))\r\n            }\r\n        </ul>\r\n\r\n    ):null\r\n\r\n    const MenuItemRoot=isExpandable?\r\n        (\r\n            <li className=\"dropdown\" ><a className=\"dropdown-toggle\" href=\"\" data-toggle=\"dropdown\">\r\n                {title}<span className=\"caret\"></span></a>\r\n                {\r\n                    MenuItemChildren\r\n                }\r\n            </li>\r\n        ):\r\n\r\n        (\r\n            <li><a href={href}>{title}</a>\r\n                {\r\n                    //alert(\"dsdsds\")\r\n                }\r\n            </li>\r\n\r\n\r\n\r\n        )\r\n\r\n\r\n    return (\r\n        <>\r\n            {MenuItemRoot}\r\n            {//MenuItemChildren\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nAppMenuItem.propTypes=AppMenuItemPropTypes\r\n\r\nconst useStyles=makeStyles(theme =>\r\n    createStyles({\r\n        menuItem: { color: '#fff', },\r\n        menuItemIcon: {\r\n            color: '#fff',\r\n        },\r\n    }),\r\n)\r\n\r\nexport default AppMenuItem\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { List, colors } from '@material-ui/core';\r\nimport AppMenuItem from './AppMenuItem'\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: colors.blueGrey[800],\r\n    padding: '10px 8px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomRouterLink=forwardRef((props, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{ flexGrow: 1 }}\r\n  >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst SidebarNav=props => {\r\n  const { pages, className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"nav navbar-nav\">\r\n        {pages.map((page, index) => (\r\n\r\n          <AppMenuItem {...page} key={index} level={0} />\r\n\r\n        ))}\r\n      </ul>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nSidebarNav.propTypes={\r\n  className: PropTypes.string,\r\n  //pages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SidebarNav;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider, Drawer, Hidden } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SupervisedUserCircle from '@material-ui/icons/SupervisedUserCircle';\r\nimport GroupWork from '@material-ui/icons/GroupWork';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport IconLibraryBooks from '@material-ui/icons/LibraryBooks';\r\nimport Archive from '@material-ui/icons/Search';\r\nimport IconAccessibility from '@material-ui/icons/Accessibility';\r\nimport IconRoom from '@material-ui/icons/Room';\r\n//\r\n\r\n\r\n//import IconLibraryBooks from '@material-ui/icons/LibraryBooks'\r\n\r\nimport { Profile, SidebarNav, UpgradePlan } from './components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  drawer: {\r\n    width: 260,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  root: {\r\n    //    backgroundColor: theme.palette.primary.main,\r\n    backgroundImage: \"url(/img/header.jpeg)\",\r\n    backgroundRepeat: 'no-repeat',\r\n    //backgroundPosition:\" top left\",\r\n    backgroundSize: \"cover\",\r\n    resizeMode: \"cover\",\r\n    top: \"left\",\r\n    color: theme.palette.primary.contrastText,\r\n    display: 'fix',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: 0,\r\n  },\r\n  divider: {\r\n    resizeMode: \"cover\",\r\n\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nav: {\r\n\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Sidebar=props => {\r\n  const { /*open, variant,*/ onClose, className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n\r\n\r\n  const pages=[ \r\n    {\r\n      title: 'Beranda',\r\n      href: '/beranda',\r\n    },\r\n\r\n    {\r\n\r\n      title: 'Input Data',\r\n      href: '/#',\r\n\r\n      items: [\r\n\r\n        {\r\n          title: 'Vuser',\r\n          href: '/vusertable'\r\n        },\r\n        {\r\n          title: 'Provinsi',\r\n          href: '/provinsi'\r\n        },\r\n        {\r\n          title: 'Kabupaten',\r\n          href: '/kabupaten'\r\n        },\r\n        {\r\n          title: 'Kecamatan',\r\n          href: '/kecamatan'\r\n\r\n        },\r\n        {\r\n          title: 'Kelurahan',\r\n          href: '/kelurahan',\r\n        },\r\n        {\r\n          title: 'Rw',\r\n          href: '/rw',\r\n        },\r\n        {\r\n          title: 'Rt',\r\n          href: '/rt',\r\n        } ,\r\n        {\r\n          title: 'User Access Survey',\r\n          href: '/user-access-survey',\r\n        } ,\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Laporan Wilayah Indonesia',\r\n      href:'/#',\r\n      items : [\r\n        {\r\n          title: 'Laporan Wilayah Provinsi di Indonesia',\r\n          href: '/laporan/provinsiID'\r\n        },\r\n        {\r\n          title: 'Laporan Wilayah di Provinsi',\r\n          href: '/laporan/perProvTable'\r\n        },\r\n        {\r\n          title:'Laporan Wilayah di Kabupaten',\r\n          href:'/laporan-kabupaten',\r\n        \r\n        },\r\n        {\r\n          title:'Laporan Wilayah Per Kabupaten',\r\n          href:'laporan-per-kabupaten',\r\n        },\r\n        {\r\n          title:'Laporan Wilayah di Kecamatan',\r\n          href:'/laporan-kecamatan'\r\n        },        \r\n        {\r\n          title:'Laporan Wilayah Per Kecamatan',\r\n          href:'/laporan-per-kecamatan'\r\n        },\r\n        {\r\n          title:'Laporan Wilayah di Kelurahan',\r\n          href:'/laporan-kelurahan'\r\n        },\r\n        {\r\n          title:'Laporan Wilayah Per Kelurahan',\r\n          href:'/laporan-perkelurahan'\r\n        },\r\n      ]\r\n    },\r\n\r\n    {\r\n      title: 'Laporan Target Sensus',\r\n      href:'/#',\r\n      items : [\r\n        {\r\n          title:'Laporan Target Sensus di Indonesia',\r\n          href:'/laporan-sensus-indonesia'\r\n        },\r\n        {\r\n          title:'Laporan Target Sensus Per Provinsi',\r\n          href:'/laporan-sensus-perprov'\r\n        },\r\n        {\r\n          title:'Laporan Target Sensus Per Kabupaten',\r\n          href:'/laporan-sensus-perkab'\r\n        },\r\n        {\r\n          title:'Laporan target Sensus Per Kecamatan',\r\n          href:'/laporan-sensus-perkecamatan'\r\n        },\r\n        {\r\n          title:'Laporan target Sensus Per Kelurahan',\r\n          href:'/laporan-sensus-perkelurahan'\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      title: 'Laporan Target dan Realisasi',\r\n      href: '/#',\r\n      items: [\r\n        {\r\n          title:'Laporan Target dan Realisasi di Indonesia',\r\n          href:'/target-realisasi-id'\r\n        },\r\n        {\r\n          title:'Laporan Target dan Realisasi Per Provinsi',\r\n          href:'/target-realisasi-perprov'\r\n        },\r\n        {\r\n          title:'Laporan Target dan Realisasi Per Kabupaten',\r\n          href:'/target-realisasi-perkab'\r\n        },\r\n        {\r\n          title:'Laporan Alat Kontrasepsi di Indonesia',\r\n          href:'/laporan-alatKb-id'\r\n        },\r\n        {\r\n          title:'Laporan Alat Kontrasepsi per Provinsi',\r\n          href:'/laporan-alatKb-prov'\r\n        },\r\n        {\r\n          title:'Laporan Alat Kontrasepsi per Kabupaten',\r\n          href:'/laporan-alatKb-kab'\r\n        },\r\n      ]\r\n\r\n    },\r\n    {\r\n      title: 'Setting Aplikasi',\r\n      href: '/setting'\r\n\r\n    },\r\n    {\r\n      title: 'Kelompok Data',\r\n      href: '/kelompok-data'\r\n\r\n    },\r\n    {\r\n      title: 'Target KK',\r\n      href: '/target-kk'\r\n\r\n    },\r\n  ];\r\n  return (\r\n\r\n    /*<!-- ======= Header======= -->*/\r\n    \r\n    <SidebarNav\r\n      className={classes.nav}\r\n      pages={pages}\r\n    />\r\n    \r\n    \r\n\r\n\r\n    /*<!-- End Header -->*/\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nSidebar.propTypes={\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  //open: PropTypes.bool.isRequired,\r\n  //variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  media: {\r\n    paddingTop: theme.spacing(2),\r\n    height: 80,\r\n    textAlign: 'center',\r\n    '& > img': {\r\n      height: '100%',\r\n      width: 'auto'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nconst UpgradePlan=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.media}>\r\n        <img\r\n          alt=\"Upgrade to PRO\"\r\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Upgrade to PRO\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body2\"\r\n        >\r\n          Upgrade to Devias Kit PRO and get even more components\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"https://devias.io/products/devias-kit-pro\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpgradePlan.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpgradePlan;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Badge, Hidden, IconButton, Typography } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(0),\r\n    color: '#fff',\r\n  }\r\n}));\r\n\r\nconst isClient=typeof window==='object';\r\n\r\nfunction getSize() {\r\n  return {\r\n    width: isClient? window.innerWidth:undefined,\r\n    height: isClient? window.innerHeight:undefined\r\n  };\r\n\r\n}\r\nconst Topbar=props => {\r\n  const { className, onSidebarOpen, ...rest }=props;\r\n  const [windowSize, setWindowSize]=useState(getSize);\r\n\r\n  const classes=useStyles();\r\n  function handleResize() {\r\n    setWindowSize(getSize());\r\n  }\r\n\r\n  const [notifications]=useState([]);\r\n  window.addEventListener('resize', handleResize);\r\n  const history=useHistory();\r\n  const handleExit=(event) => {\r\n\r\n    //alert(\"sasasa\")\r\n    history.push(\"/logout\");\r\n    //return <Redirect to='/logout' />\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <section id=\"topbar\" className=\"d-none d-lg-block\">\r\n      <div className=\"container clearfix\">\r\n\r\n        <div className=\"logo float-left\">\r\n          <h1 className=\"text-light\"><a href=\"index.html\"><span>Mamba1</span></a></h1>\r\n          {/*}<!-- Uncomment below if you prefer to use an image logo -->\r\n        <!-- <a href=\"index.html\"><img src=\"assets/img/logo.png\" alt=\"\" className=\"img-fluid\"></a>-->{*/}\r\n        </div>\r\n\r\n        <div className=\"social-links float-right\">\r\n          <a href=\"#\" className=\"twitter\"><i className=\"icofont-twitter\"></i></a>\r\n          <a href=\"#\" className=\"facebook\"><i className=\"icofont-facebook\"></i></a>\r\n          <a href=\"#\" className=\"instagram\"><i className=\"icofont-instagram\"></i></a>\r\n          <a href=\"#\" className=\"skype\"><i className=\"icofont-skype\"></i></a>\r\n          <a href=\"#\" className=\"linkedin\"><i className=\"icofont-linkedin\"></i></a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n\r\n  );\r\n};\r\n\r\nTopbar.propTypes={\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import { useEffect } from 'react';\r\nconst ImportScript=resourceUrl => {\r\n    useEffect(() => {\r\n        const script=document.createElement('script');\r\n        script.src=resourceUrl;\r\n        script.async=false;\r\n        document.body.appendChild(script);\r\n        //      alert(\"dsds\")\r\n        return () => {\r\n            document.body.removeChild(script);\r\n        }\r\n    }, [resourceUrl]);\r\n};\r\nexport default ImportScript;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Avatar, useMediaQuery } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { urlProv,urlKab,urlKec,urlKel,urlRw,urlRt,urlGetVuser } from 'kumpulanUrl';\r\nimport { Sidebar, Topbar, Footer, ImportScript } from './components';\r\nimport '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/dist/css/skins/_all-skins.min.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\nimport { select } from 'underscore';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n/**/\r\nconst useStyles=makeStyles(theme => ({\r\n\r\n\r\n  root: {\r\n    paddingTop: 56,\r\n    height: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      //paddingTop: 64\r\n    }\r\n  },\r\n  shiftContent: {\r\n    paddingLeft: 240\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Main=props => {\r\n  const { children,rowSelect }=props;\r\n\r\n  const classes=useStyles();\r\n  const theme=useTheme();\r\n  const isDesktop=useMediaQuery(theme.breakpoints.up('lg'), {\r\n    defaultMatches: true\r\n  });\r\n\r\n\r\n  const [openSidebar, setOpenSidebar]=useState(false);\r\n\r\n  const handleSidebarOpen=() => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleSidebarcClose=() => {\r\n    setOpenSidebar(false);\r\n  };\r\n  /**/\r\n  const shouldOpenSidebar=isDesktop? true:openSidebar;\r\n  return (\r\n    <>\r\n\r\n      <div className=\"wrapper\">\r\n\r\n        <header className=\"main-header\">\r\n          <nav className=\"navbar navbar-static-top  \">\r\n            <div className=\"container\">\r\n              <div className=\"navbar-header\">\r\n                <a href=\"/beranda\" className=\"navbar-brand\"><img src=\"assets/dist/img/bkkbn-logo-sm.png\" height=\"auto\" width=\"130px\" className=\"img-responsive\" /></a>\r\n                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse\">\r\n                  <i className=\"fa fa-bars\"></i>\r\n                </button>\r\n              </div>\r\n\r\n              {/*<!-- Collect the nav links, forms, and other content for toggling -->*/}\r\n              <div className=\"collapse navbar-collapse pull-left\" id=\"navbar-collapse\">\r\n                <Sidebar />\r\n\r\n              </div>{/*<!-- /.navbar-collapse -->*/}\r\n              {/*<!--Navbar Right Menu -->*/}\r\n\r\n              <div className=\"navbar-custom-menu \">\r\n\r\n                <ul className=\"nav navbar-nav \">\r\n\r\n                  {/*<!-- User Account Menu -->*/}\r\n                  <li className=\"dropdown user user-menu\">\r\n                    {/*<!-- Menu Toggle Button -->*/}\r\n                    <a href=\"#\" className=\"dropdown-toggle \" data-toggle=\"dropdown\">\r\n                      {/*<!-- The user image in the navbar-->*/}\r\n                      {/*<!--<img src=\"dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"User Image\">-->*/}\r\n                      {/*<!-- hidden-xs hides the username on small devices so only the image appears. --> */}\r\n                      <span className=\"\"><AccountCircleIcon fontSize=\"large\"/></span>\r\n                    </a>\r\n                    <ul className=\"dropdown-menu \">\r\n                      {/*<!-- The user image in the menu -->*/}\r\n                      <li className=\"user-header \">\r\n\r\n                        {/* <img src={'/assets/dist/img/'+localStorage.getItem(\"Foto\")} className=\"img-circle\" alt=\"User Image\" /> */}\r\n                        <p className=\"\">\r\n                          {localStorage.getItem(\"NamaLengkap\")}\r\n                          <small>{localStorage.getItem(\"Jabatan\")}</small>\r\n                        </p>\r\n                      </li>\r\n\r\n                      {/*<!-- Menu Footer-->*/}\r\n                      <li className=\"user-footer\">\r\n                        <div className=\"pull-left\">\r\n                          <a href=\"/logout\" className=\"btn btn-default btn-flat\">Log out</a>\r\n                        </div>\r\n                        <div className=\"pull-right\">\r\n                          <a href=\"/profile\" className=\"btn btn-default btn-flat\">Profile</a>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n              </div>{/*<!--/.navbar-custom-menu -->*/}\r\n            </div>\r\n            {/*<!-- /.container-fluid -->*/}\r\n          </nav>\r\n        </header>\r\n        {/*<!-- Full Width Column -->*/}\r\n        <div className=\"content-wrapper font-poppins\" >\r\n          <div className=\"container font-poppins\">\r\n            {/*<!-- Content Header (Page header) -->*/}\r\n            <section className=\"content-header\">\r\n              <h1>&nbsp;\r\n                {/*<!--Top Navigation\r\n                <small>Example 2.0</small>-->*/}\r\n              </h1>\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"active\"><i className=\"fa fa-home\"></i> Home</li>\r\n              </ol>\r\n            </section>  \r\n\r\n            {/*<!-- Main content -->*/}\r\n            <section className=\"content \">\r\n              <div className=\"box box-default\">\r\n                <div className=\"box-header with-border\">\r\n                  <h3 className=\"box-title font-poppins\">Periode {localStorage.getItem(\"Periode Sensus\")}</h3>\r\n                </div>\r\n                \r\n                <div className=\"box-body font-poppins\">\r\n                  <main id=\"main\">\r\n                    {children}\r\n                  </main>\r\n\r\n                {localStorage.getItem(\"username\") == null ? \"Harap Login Terlebih Dahulu !!\" : localStorage.getItem(\"Setting Label\").replace(\"[username]\", localStorage.getItem(\"username\"))}!! to Periode Sensus Tahun {localStorage.getItem(\"Periode Sensus\")}\r\n                </div>{/*<!-- /.box-body -->*/}\r\n              </div>{/*<!-- /.box -->*/}\r\n            </section>\r\n            {/*<!-- /.content -->*/}\r\n          </div>\r\n          {/*<!-- /.container -->*/}\r\n        </div>\r\n        {/*<!-- /.content-wrapper -->*/}\r\n        <footer className=\"main-footer\">\r\n          <div className=\"container\">\r\n            Copyright &copy; {localStorage.getItem(\"Periode Sensus\")}. BKKBN. All rights reserved.\r\n          </div>\r\n          {/*<!-- /.container -->*/}\r\n        </footer>\r\n      </div>{/*<!-- ./wrapper-->*/}\r\n\r\n\r\n\r\n      {/* <!-- ======= Hero Section ======= -->*/}\r\n      {/*\r\n      <Sidebar />\r\n      <main id=\"main\">\r\n        {children}\r\n\r\n      </main>\r\n      */}\r\n      {/*<!-- End #main -->\r\n\r\n    <!--======= Footer======= -->*/}\r\n      {/*<!-- End Footer -->*/}\r\n      {ImportScript(\"/assets/plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n\r\n      {ImportScript(\"/assets/plugins/slimScroll/jquery.slimscroll.min.js\")}\r\n      {ImportScript(\"/assets/plugins/fastclick/fastclick.min.js\")}\r\n      {ImportScript(\"/assets/jquery-sticky/jquery.sticky.js\")}\r\n      {ImportScript(\"/assets/dist/js/app.min.js\")}\r\n      {ImportScript(\"/assets/dist/js/demo.js\")}\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMain.js\")\r\n      }\r\n\r\n\r\n      {/*<!-- Vendor JS Files -->*/}\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nMain.propTypes={\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/bg_login.0438c882.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { ImportScript } from '../Main/components';\r\nimport '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/plugins/iCheck/square/blue.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Slider from \"react-slick\";\r\nimport { MinimalUser } from 'layouts';\r\nimport { bg_login } from 'assets/img_master_backup';\r\n// import \"animate.css\"\r\nimport {Animated} from \"react-animated-css\";\r\n\r\nconst useStyles=makeStyles(() => ({\r\n  root: {\r\n    //    paddingTop: 64,\r\n    //    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Minimal=props => {\r\n  const { children }=props;\r\n\r\n  const classes=useStyles();\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n  return (\r\n\r\n<Animated animationIn=\"fadeInUp\" animationOut=\"fadeOut\" isVisible={true}>\r\n    <div className=\"login-box h-fu \">\r\n      <div className=\"login-logo\"> \r\n        <img src=\"/assets/dist/img/bkkbn-logo-sm.png\" width=\"253\" height=\"62\" />\r\n        <h3>System Informasi Sensus</h3>\r\n      </div>\r\n      {/*<!-- /.login-logo -->*/}\r\n      <div className=\"login-box-body\">\r\n        <p className=\"login-box-msg\">Silahkan Login terlebih dahulu</p>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n        {/*  */}\r\n\r\n\r\n      </div>{/*<!-- /.login-box-body -->*/}\r\n\r\n      {/*<!-- jQuery 2.1.4 --> */}\r\n      {ImportScript(\"/assets//plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {/*<!-- Bootstrap 3.3.4 -->*/}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n      {       /*    <!-- iCheck -->*/}\r\n      {ImportScript(\"/assets/plugins/iCheck/icheck.min.js\")}\r\n\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMinimal.js\")\r\n      }\r\n      \r\n    </div>\r\n    </Animated>\r\n\r\n  );\r\n};\r\n\r\nMinimal.propTypes={\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    //padding: theme.spacing(4),\r\n    //        backgroundColor: '#ffF8ffF8',\r\n    transparent: true,\r\n    backgroundColor: '#fff',\r\n    width: '100%',\r\n    //height: '600px'\r\n  }\r\n}));\r\n\r\nconst Dashboard=props => {\r\n  const { history }=props;\r\n\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/logout');\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/*}<!-- End Contact Us Section -->{*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { ImportScript } from '../Main/components';\r\nimport '../../../src/assets/vendor/bootstrap/css/bootstrap.min.css';\r\nimport '../../../src/assets/vendor/dist/font-awesome-4.1.0/css/font-awesome.css';\r\nimport '../../../src/assets/vendor/dist/css/AdminLTE.min.css';\r\nimport '../../../src/assets/vendor/plugins/iCheck/square/blue.css';\r\nimport '../../../src/assets/vendor/dist/css/custom.css';\r\nimport { bg_login } from 'assets/img_master_backup';\r\n\r\nconst useStyles=makeStyles(() => ({\r\n  root: {\r\n    //    paddingTop: 64,\r\n    //    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst MinimalUser=props => {\r\n  const { children }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"login-box\">\r\n      <div className=\"login-logo\"> \r\n        <img src=\"/assets/dist/img/bkkbn-logo-sm.png\" width=\"253\" height=\"62\" />\r\n        <h3>System Informasi Sensus</h3>\r\n        <h3>Ruang Petugas Sensus</h3>\r\n      </div>\r\n      {/*<!-- /.login-logo -->*/}\r\n      <div className=\"login-box-body\">\r\n        <p className=\"login-box-msg\">Silahkan Login terlebih dahulu</p>\r\n        <main className={classes.content}>{children}</main>\r\n        {/*  */}\r\n\r\n\r\n      </div>{/*<!-- /.login-box-body -->*/}\r\n\r\n      {/*<!-- jQuery 2.1.4 --> */}\r\n      {ImportScript(\"/assets//plugins/jQuery/jQuery-2.1.4.min.js\")}\r\n      {/*<!-- Bootstrap 3.3.4 -->*/}\r\n      {ImportScript(\"/assets/bootstrap/js/bootstrap.min.js\")}\r\n      {       /*    <!-- iCheck -->*/}\r\n      {ImportScript(\"/assets/plugins/iCheck/icheck.min.js\")}\r\n\r\n      {\r\n        ImportScript(\"/assets/dist/js/changebodyMinimal.js\")\r\n      }\r\n      \r\n    </div>\r\n    \r\n\r\n\r\n  );\r\n};\r\n\r\nMinimalUser.propTypes={\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MinimalUser;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  content: {\r\n    paddingTop: 150,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h1\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { UserSignIn } from 'views';\r\nimport validate from 'validate.js';\r\n//import mockDataUser from '../UserList/datauser';\r\nimport md5 from 'md5'\r\nimport swal from '@sweetalert/with-react';\r\nimport '../../assets/css_swal/cssSwal.css';\r\n// import \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Slider from 'react-slick/lib/slider';\r\nimport { bg_login } from '../../assets/img_master_backup/index'\r\nimport Swal from 'sweetalert2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\nimport { urlPostLogin } from '../../kumpulanUrl'\r\nimport UsersByDevice from 'views/Dashboard/components/UsersByDevice';\r\n\r\n\r\nconst schema = {\r\n  user_name: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    //backgroundColor: theme.palette.background.default,\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  grid: {\r\n    marginTop: '-4%',\r\n    height: '100%',\r\n\r\n    //height: '20%'\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '50%',\r\n    //display: 'flex',\r\n    //flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    //    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)/**/\r\n  },\r\n  logoImage: {\r\n    // marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    //flexGrow: 1,\r\n    //display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: -10,\r\n    //width: '100%'\r\n  },\r\n  form: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n    paddingTop: 2,\r\n    //marginLeft: '25%',\r\n    flexBasis: 600,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(-1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(0),\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(40)\r\n  },\r\n  signInButton: {\r\n    // margin: theme.spacing(2, 0)\r\n    left:50\r\n  }\r\n}));\r\n\r\nconst SignIn = props => {\r\n  const { history } = props;\r\n  const [users, setUsers] = useState([]/*mockDataUser*/);\r\n  const classes = useStyles();\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  }\r\n\r\n  const handleSignIn = event => {\r\n    //event.preventDefault();\r\n    //\r\n    event.preventDefault();\r\n    /* */\r\n    async function getData() {\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        mode: \"cors\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          \"UserName\": formState.values.user_name,\r\n          \"password\": formState.values.password,\r\n        })\r\n      };\r\n\r\n\r\n      let urlGetData = urlPostLogin\r\n      const response = await fetch(urlGetData, requestOptions)\r\n        .then(res => {\r\n          return res.json();\r\n        })/**/\r\n\r\n        .then(res => {\r\n\r\n          const data = res;\r\n          //console.log(data.data);\r\n          if (data.code == \"00\") {\r\n            //{ userId: \"A6B433CD8F15397BE05314B5A8C00F89\" }\r\n            localStorage.setItem('username', data.data[0].UserName);\r\n            localStorage.setItem('NamaLengkap', data.data[0].NamaLengkap);\r\n            localStorage.setItem('roleName', data.data[0].roleName);\r\n            localStorage.setItem('id', data.data[0].id);\r\n            localStorage.setItem('Jabatan', data.data[0].Jabatan);\r\n            localStorage.setItem('Alamat', data.data[0].Alamat);\r\n            localStorage.setItem('NIK', data.data[0].NIK);\r\n            localStorage.setItem('Email', data.data[0].Email);\r\n            localStorage.setItem('Foto', data.data[0].Foto);\r\n            localStorage.setItem('Periode Sensus', data.data2[0].value_setting);\r\n            localStorage.setItem('Setting Label', data.data3[0].value_setting);\r\n            localStorage.setItem('Title Email', data.data4[0].value_setting);\r\n            localStorage.setItem('body', data.data4[1].value_setting);\r\n            localStorage.setItem('url', data.data4[2].value_setting);\r\n            localStorage.setItem('Alat Kontrasepsi', JSON.stringify(data.alatKB));\r\n            window.location = '/beranda';\r\n            //history.push('/beranda');\r\n\r\n          } else {\r\n            console.log(data);\r\n            setFormState(formState => ({\r\n              ...formState,\r\n              values: {\r\n                user_name: '',\r\n                password: ''\r\n              },\r\n              isValid: false,\r\n              errors: true\r\n            }));\r\n            Swal.fire({\r\n              position: 'center',\r\n              icon: 'error',\r\n              title: 'Login Tidak Sesuai  ',\r\n              showConfirmButton: false,\r\n              timer: 1000\r\n            })\r\n\r\n            return false;\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n          alert(\"err\");\r\n          setFormState(formState => ({\r\n            ...formState,\r\n            isValid: false,\r\n            errors: false\r\n          }));\r\n\r\n          swal(\"Gagal Login!\", \"Gagal Login\", \"error\")\r\n\r\n          return false;\r\n\r\n\r\n        });\r\n\r\n\r\n      //      setOpen(false);\r\n\r\n\r\n    }\r\n\r\n    getData();\r\n    /**/\r\n\r\n\r\n\r\n    /*requestOptions*/\r\n\r\n    //    console.log(\"users\", users)\r\n    let users4 = users.find(user => user.userName === formState.values.user_name\r\n      && user.userPassword === md5(formState.values.password));\r\n\r\n    //alert(formState.values.user_name)\r\n    ///console.log(\"users4\", users4);\r\n    ///alert(formState.values.user_name)\r\n    //alert(formState.values.password)\r\n\r\n    /**/\r\n\r\n\r\n    //history.push('/');\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n\r\n    <div className=\"h-full sm:mr-4\">\r\n\r\n      <div className=\"w-full font-poppins mt-9 p-9 mb-12 bg-gray-200 rounded-xl\">\r\n        {/* <img src='images/auth.jpg' /> */}\r\n        <span className=\"align text-center\"><h4 className=\"mb-12 font-poppins \">Login Admin BKKBN</h4></span>\r\n        <div className={classes.root, \"font-poppins sm:mt-20 lg:mt-5\"}>\r\n          <Grid\r\n            className={classes.grid}\r\n            container\r\n            style={{ width: \"92%\" }}\r\n          >\r\n            <Grid\r\n              className={classes.content}\r\n              item\r\n              lg={12}\r\n              xs={12}\r\n            >\r\n              <div className={classes.content, \"font-poppins\"}>\r\n                {/* <div>{bg_login}</div> */}\r\n                <div className=\"d-md flex\" style={{ width: '100%' }}>\r\n                  <form\r\n                    className={classes.form}\r\n                    onSubmit={handleSignIn}\r\n                  >\r\n                    <Grid\r\n                      className={classes.grid}\r\n                      container\r\n                    >\r\n                      <Grid\r\n                        // className={classes.content}\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                      >\r\n                        <br />\r\n                        <Typography\r\n                          style={{ verticalAlign: 'bottom' }}\r\n                          className={classes.title}\r\n                          variant=\"h6\"\r\n                          margin=\"normal\"\r\n                        >\r\n                          Username\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid\r\n                        className={classes.content}\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                      >\r\n\r\n                        <TextField\r\n                          className=\"form-control\"\r\n                          error={hasError('email')}\r\n                          fullWidth\r\n                          margin=\"dense\"\r\n\r\n                          /*\r\n                          helperText={\r\n                            hasError('email')? formState.errors.email[0]:null\r\n                          }*/\r\n                          //label=\"User Name\"\r\n                          name=\"user_name\"\r\n                          onChange={handleChange}\r\n                          type=\"text\"\r\n                          value={formState.values.user_name || ''}\r\n                          variant=\"outlined\"\r\n\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        //className={classes.content}\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                      >\r\n                        <br />\r\n                        <Typography\r\n                          className={classes.title}\r\n                          variant=\"h6\"\r\n                        >\r\n                          Kata Kunci\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid\r\n                        //className={classes.content}\r\n                        item\r\n                        lg={6}\r\n                        xs={6}\r\n                      >\r\n\r\n                        <TextField\r\n                          className=\"form-control\"\r\n                          error={hasError('password')}\r\n                          fullWidth\r\n                          helperText={\r\n                            hasError('password') ? formState.errors.password[0] : null\r\n                          }\r\n                          //label=\"Password\"\r\n                          name=\"password\"\r\n                          margin=\"dense\"\r\n                          onChange={handleChange}\r\n                          type=\"password\"\r\n                          value={formState.values.password || ''}\r\n                          variant=\"outlined\"\r\n                          style={{ marginBottom: 12 }}\r\n                        />\r\n\r\n                      </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <Button\r\n                      className={classes.signInButton}\r\n                      color=\"primary\"\r\n                      disabled={!formState.isValid}\r\n                      //fullWidth\r\n                      size=\"large\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                    //style={{ marginTop: '2%', marginBottom: '-2%' }}\r\n                    >\r\n                      Masuk\r\n                    </Button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/* <p className=\"legend\">Legend 1</p> */}\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignIn);","import React from 'react';\r\nimport { Doughnut, Pie, Bar } from 'react-chartjs-2';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\nimport RoundedCornerIcon from '@material-ui/icons/RoundedCorner';\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '100%',\r\n    //width: '900%'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    //display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'left ',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  },\r\n  title: {\r\n    color: 'white',\r\n  }\r\n}));\r\n\r\nconst UsersByDevice=props => {\r\n  const { className, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n  const theme=useTheme();\r\n\r\n  const data={\r\n    datasets: [\r\n      {\r\n        data: [23, 16, 13, 26, 23],\r\n        backgroundColor: [\r\n\r\n          'red',\r\n          'blue',\r\n          'yellow',\r\n          'green',\r\n          'black'\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: theme.palette.white,\r\n        hoverBorderColor: theme.palette.white\r\n      }\r\n    ],\r\n    labels: ['Berita', 'Anggaran', 'Postur', 'Komentar', \"Carian Anggaran\"]\r\n  };\r\n\r\n  const options={\r\n    legend: {\r\n      display: false,\r\n      reverse: true,\r\n      labels: {\r\n        fontColor: 'red'\r\n      }\r\n    },\r\n    responsive: false,\r\n    maintainAspectRatio: true,\r\n    animation: true,\r\n    cutoutPercentage: 50,\r\n    rotation: 0,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: true,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices=[\r\n    {\r\n      title: 'Berita',\r\n      value: '23',\r\n      color: 'red'\r\n    },\r\n    {\r\n      title: 'Anggaran',\r\n      value: '16',\r\n      color: 'blue'\r\n    },\r\n    {\r\n\r\n      title: 'Postur APBN',\r\n      value: '13',\r\n      color: 'yellow'\r\n    },\r\n    {\r\n\r\n      title: 'Komentar',\r\n      value: '26',\r\n      color: 'green'\r\n    },\r\n    {\r\n      title: 'Carian Anggaran',\r\n      value: '23',\r\n      color: 'black'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      //className={clsx(classes.root, className)}\r\n      style={{ color: 'red', bodyFontColor: 'red' }}\r\n    >\r\n      <CardHeader\r\n        title=\"Access Menu\"\r\n        style={{ backgroundColor: 'blue', color: 'red', bodyFontColor: 'red' }}\r\n        classes={{\r\n          title: classes.title,\r\n        }}\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n\r\n\r\n        <Pie\r\n          data={data}\r\n          option={options}\r\n        //styles={{ width: '900%' }}\r\n        />\r\n\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <RoundedCornerIcon style={{ background: device.color, color: 'white' }} />\r\n\r\n                <span className={classes.deviceIcon}\r\n                  style={{\r\n                    color: 'device.color', paddingTop: '0', marginTop: '0%',\r\n                    paddingBottom: '0px'\r\n                  }}>\r\n                  &nbsp;{device.title} {device.value}%\r\n                    </span>\r\n\r\n              </Typography>\r\n\r\n\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersByDevice.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersByDevice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n///import validate from 'validate.js';\r\n//import mockDataUser from '../UserList/datauser';\r\nimport md5 from 'md5'\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nconst schema={\r\n  user_name: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst Signout=props => {\r\n  const { history }=props;\r\n  const [users, setUsers]=useState([]);\r\n  const classes=useStyles();\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.clear();\r\n    history.push('/login');\r\n  }, [formState.values]);\r\n\r\n  const handleBack=() => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange=event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type==='checkbox'\r\n            ? event.target.checked\r\n            :event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn=event => {\r\n    //event.preventDefault();\r\n    //users\r\n    //alert(formState.values.password)\r\n\r\n    /**/\r\n\r\n    localStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nSignout.propTypes={\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(Signout);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst schema={\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n  policy: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    checked: true\r\n  }\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignUp=props => {\r\n  const { history }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors=validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange=event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type==='checkbox'\r\n            ? event.target.checked\r\n            :event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleBack=() => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp=event => {\r\n    event.preventDefault();\r\n    history.push('/');\r\n  };\r\n\r\n  const hasError=field =>\r\n    formState.touched[field]&&formState.errors[field]? true:false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\r\n                they sold out High Life.\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  Manager at inVision\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Create new account\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Use your email to create new account\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('firstName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('firstName')? formState.errors.firstName[0]:null\r\n                  }\r\n                  label=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.firstName||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('lastName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('lastName')? formState.errors.lastName[0]:null\r\n                  }\r\n                  label=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.lastName||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email')? formState.errors.email[0]:null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password')? formState.errors.password[0]:null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password||''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.policy}>\r\n                  <Checkbox\r\n                    checked={formState.values.policy||false}\r\n                    className={classes.policyCheckbox}\r\n                    color=\"primary\"\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    className={classes.policyText}\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the{' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </div>\r\n                {hasError('policy')&&(\r\n                  <FormHelperText error>\r\n                    {formState.errors.policy[0]}\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up now\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes={\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddProv, urlEditProv, urlU, urlUbahPassword } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProfileAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"Password\": rowSelect.Password,\r\n      \"confirmPassword\": rowSelect.confirmPassword,\r\n      \"id\": rowSelect.id,\r\n      \"NamaLengkap\": rowSelect.NamaLengkap,\r\n      \"Alamat\": rowSelect.Alamat,\r\n    }\r\n    let url=urlUbahPassword;\r\n    // alert(url)\r\n    varJson.LastModifiedBy = userName;\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n\r\n        return tester.json();\r\n      })/**/\r\n      .then(\r\n        localStorage.setItem(\"NamaLengkap\",rowSelect.NamaLengkap),\r\n        localStorage.setItem(\"Alamat\",rowSelect.Alamat),\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      ).then(window.location.reload())\r\n      .catch((e) => {\r\n\r\n        // alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n  const [open, setOpen]=React.useState(false);\r\nconst handleTutup = () => {\r\n  setOpen(false)\r\n}\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n             <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Alamat\"\r\n                margin=\"dense\"\r\n                name=\"Alamat\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Alamat')? formState.errors.Alamat[0]:null\r\n                }\r\n\r\n                error={hasError('Alamat')}\r\n                defaultValue={rowSelect&&rowSelect.Alamat? rowSelect.Alamat:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"NamaLengkap\"\r\n                margin=\"dense\"\r\n                name=\"NamaLengkap\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('NamaLengkap')? formState.errors.NamaLengkap[0]:null\r\n                }\r\n\r\n                error={hasError('NamaLengkap')}\r\n                defaultValue={rowSelect&&rowSelect.NamaLengkap? rowSelect.NamaLengkap:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                margin=\"dense\"\r\n                name=\"Password\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Password')? formState.errors.Password[0]:null\r\n                }\r\n\r\n                error={hasError('Password')}\r\n                defaultValue={rowSelect&&rowSelect.Password? rowSelect.Password:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                margin=\"dense\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('nama_provinsi')? formState.errors.nama_provinsi[0]:null\r\n                // }\r\n\r\n                // error={hasError('nama_provinsi')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.confirmPassword? rowSelect.confirmPassword:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={rowSelect.Password != rowSelect.confirmPassword}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfileAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ProfileAddModi;","import React from \"react\"\r\nimport { ModalComponent } from 'components';\r\nimport ProfileAddModi from \"./components/ProfileAddModi\";\r\nimport Swal from \"sweetalert2\";\r\nimport Popup from 'reactjs-popup'\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField,\r\n    DialogContent\r\n} from '@material-ui/core';\r\nconst Profile = () => {\r\n\r\n\r\n    const [rowSelect, setRowSelect] = React.useState({})\r\n    rowSelect.id = localStorage.getItem('id')\r\n\r\n    return (\r\n        <div className=\" justify-center text-center mb-96  bg-indigo-700  \">\r\n            <Card>\r\n                <CardHeader\r\n                    subheader=\"\"\r\n                    title={\r\n                        <div className=\"  font-poppins \">\r\n                            <p className=\"text-center\">{localStorage.getItem(\"NamaLengkap\")}</p>\r\n                        </div>\r\n                    }\r\n                />\r\n                <Divider />\r\n                <CardContent className=\"bg-blue-900 text-white\">\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                    >\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Username : {localStorage.getItem('username')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n                            <DialogContent>\r\n                                Nama Lengkap : {localStorage.getItem('NamaLengkap')}\r\n                            </DialogContent>\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Nomor Induk : {localStorage.getItem('NIK')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={3}\r\n                            xs={12}\r\n                        >\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Jabatan : {localStorage.getItem('Jabatan')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n                            <DialogContent\r\n\r\n                            >\r\n                                Alamat : {localStorage.getItem('Alamat')}\r\n\r\n\r\n\r\n                            </DialogContent>\r\n\r\n\r\n                            <Popup trigger={<button className=\"btn btn-md bg-green-700 mt-2 \">Ubah Profile</button>}>\r\n                                <ProfileAddModi\r\n                                    rowSelect={rowSelect}\r\n                                    setRowSelect={setRowSelect}\r\n                                />\r\n                            </Popup>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n\r\n\r\n            </Card>\r\n\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-6-lg\">\r\n                    Hi\r\n                </div>\r\n                <div className=\"col-6-lg\">Hi</div>\r\n            </div> */}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport { urlGetVuser } from 'kumpulanUrl';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport counterIcon from '@iconify/icons-mdi/counter';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n// import '../../../../assets_sbmpp_bo/css/bootstrap.css';\r\n// import '../../assets/cssnonlogin/core.css';\r\n// import '../../../../assets_sbmpp_bo/css/components.css';\r\nimport '../../../../assets_sbmpp_bo/css/colors.css';\r\nimport '../../../../assets_sbmpp_bo/css/icons/icomoon/styles.css';\r\n\r\n\r\nconst isClient=typeof window==='object';\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n//const isClient=typeof window==='object';\r\nfunction getSize() {\r\n  return {\r\n    width: isClient? window.innerWidth:undefined,\r\n    height: isClient? window.innerHeight:undefined\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\nexport default function VisitorUser (props)  {\r\n  const { className, dashboard,\r\n    totalVisitorMobile, totalDailyVisitorMobile, totalUserRegistration,\r\n    totalVisitorWeb, totalDailyVisitorWeb,\r\n    ...rest }=props;\r\n  const [windowSize, setWindowSize]=useState(getSize);\r\n  function handleResize() {\r\n    setWindowSize(getSize());\r\n  }\r\n\r\n  async function getVuser() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(vUsers);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetV=urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetV, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVusers(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n  //alert(dashboard.totalVisitorMobile)\r\n  //console.log(dashboard.data.listAccessMenuMobile)\r\n  const classes=useStyles();\r\n\r\n  const [vUsers, setVusers]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [open, setOpen]=React.useState(false);\r\n\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  useEffect(() => {\r\n    getVuser();\r\n  }, [order,orderBy]);\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        style={{\r\n          height: windowSize.width<=780? 400:59+\"%\",\r\n\r\n          //width: '100%'\r\n\r\n\r\n        }}\r\n      >\r\n\r\n\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: 20+'%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:37+'%',\r\n\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                //height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-teal-400\"\r\n\r\n            >\r\n              TOTAL AKSES\r\n          </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-teal-400\"\r\n\r\n            > <h3 class=\"no-margin\"><b><i class=\"icon-mobile position-left\"></i> &nbsp;\r\n              {\r\n\r\n                totalVisitorMobile? totalVisitorMobile:'0'\r\n                //      dashboard.totalVisitorMobile\r\n              }</b>\r\n              </h3>\r\n            </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              className=\"panel-heading bg-teal-400\"\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-earth position-left\"></i> &nbsp;\r\n          {\r\n                  totalVisitorWeb? totalVisitorWeb:'0'//dashboard.totalUserRegistration\r\n                }</b></h3>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: '20%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:36+'%'\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                //height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-pink-400\"\r\n\r\n            >\r\n              JUMLAH AKSES HARI INI\r\n          </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-pink-400\"\r\n\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-mobile position-left\"></i> &nbsp;\r\n              {totalDailyVisitorMobile? totalDailyVisitorMobile:'0'//dashboard.totalDailyVisitorMobile\r\n                }</b></h3>\r\n            </Grid>\r\n            <Grid item\r\n              lg={6}\r\n              sm={6}\r\n              xl={6}\r\n              xs={6}\r\n              className=\"panel-heading bg-pink-400\"\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-earth position-left\"></i> &nbsp;\r\n            {totalDailyVisitorWeb? totalDailyVisitorWeb:'0'//dashboard.totalUserRegistration\r\n                } </b></h3>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n        <CardContent style={{\r\n          //background: 'blue', color: 'white',\r\n          //     width: '100%'\r\n          //          background: 'white', color: '#000',\r\n          height: '20%',\r\n          border: '1',\r\n          paddingBottom: windowSize.width<=780? 110:37+'%',\r\n          //marginBottom: '0px'\r\n\r\n\r\n\r\n        }}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            className=\"panel\"\r\n          >\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={6}\r\n              xs={12}\r\n              //            style={{ verticalAlign: '_top',borderBottomColor:'#fff' }}\r\n              style={{\r\n                transparent: true,\r\n                //              borderBottom:\r\n                //              {\r\n                //                color:'#fff',\r\n                //              },\r\n                height: '100%',\r\n                borderBottomColor: 'rgba(255, 255, 255, 0.3)',\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-blue-400\"\r\n\r\n            >\r\n              TOTAL PENDAFTARAN PENGGUNA\r\n          </Grid>\r\n            <Grid item\r\n              lg={12}\r\n              sm={12}\r\n              xl={12}\r\n              xs={12}\r\n              style={{\r\n                verticalAlign: '_top', fontSize: '13px', fontFamily: [\r\n                  \"Roboto\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\"\r\n                ]\r\n              }}\r\n              className=\"panel-heading bg-blue-400\"\r\n\r\n            >\r\n              <h3 class=\"no-margin\"><b><i class=\"icon-users4 position-left\"></i> &nbsp;{\r\n                totalUserRegistration? totalUserRegistration:'0'//dashboard.totalUserRegistration\r\n              }\r\n              </b>\r\n              </h3>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nVisitorUser.propTypes={\r\n  className: PropTypes.string\r\n};\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst ProvinsisTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Provinsi ID',\r\n      selector: 'id_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Provinsi',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Provinsi\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Provinsi',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Provinsi\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambahah Provinsi\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Provinsi\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Provinsi List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProvinsisTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProvinsisTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddProv, urlEditProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ProvinsiAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"nama_provinsi\": rowSelect.nama_provinsi,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    let url=urlAddProv;\r\n    if (rowSelect.id_provinsi===undefined) {\r\n      url=urlAddProv;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditProv;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddProv) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditProv){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title= {rowSelect.id_provinsi === 1 ? \"Edit Provinsi\" : \"Tambah Provinsi\"}\r\n          title={rowSelect.id_provinsi == undefined ? \"Tambah Provinsi\" : \"Ubah Provinsi\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama provinsi\"\r\n                margin=\"dense\"\r\n                name=\"nama_provinsi\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_provinsi')? formState.errors.nama_provinsi[0]:null\r\n                }\r\n\r\n                error={hasError('nama_provinsi')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_provinsi? rowSelect.nama_provinsi:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProvinsiAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ProvinsiAddModi;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\nimport PictureAsPdfSharpIcon from '@material-ui/icons/PictureAsPdfSharp';\r\nimport AddIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteSweepOutlined';\r\n// npm install --save-dev @iconify/react @iconify/icons-mdi\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport IconRoom from '@material-ui/icons/Room';\r\n\r\nimport fileExcel from '@iconify/icons-mdi/file-excel';\r\n//import ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n\r\nconst ProvinsisToolbar=props => {\r\n  const { className, handleOpenViewMap, textfind, provinsis, csvData2, csvData, printPdf, deleteProvinsi, ProvinsisTable,\r\n    handleOpen, ...rest }=props;\r\n  //const { className, onChange, style, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n//   <Button\r\n//   color=\"primary\"\r\n//   //variant=\"contained\"\r\n//   style={{ paddingLeft: 0, paddingRight: 0, marginLeft: \"0%\" }}\r\n\r\n//   id=\"Add_Provinsi\"\r\n//   onClick={(e) => handleOpen(e, [], \"Add Provinsi\")}\r\n\r\n// >\r\n//   <AddIcon />\r\n// </Button>\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <span className={classes.spacer} />\r\n\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button color=\"primary\" className={classes.importButton} onClick={(e) => printPdf(e, [])}>\r\n        <img src=\"/img/pdf.jpeg\" />\r\n        </Button>\r\n        <CSVLink data={csvData()} className={classes.importButton}>\r\n        <img src=\"/img/xls.jpeg\" />\r\n\r\n        </CSVLink>\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          //variant=\"contained\"\r\n          style={{ paddingLeft: 0, paddingRight: 0, marginLeft: -4 }}\r\n\r\n          id=\"Lihat_Peta_Povinsi\"\r\n          onClick={(e) => handleOpenViewMap(e, \"Lihat Peta Povinsi\")}\r\n\r\n        >\r\n          <IconRoom />\r\n        </Button>\r\n\r\n\r\n\r\n        &nbsp;\r\n\r\n\r\n\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Provinsi\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProvinsisToolbar.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProvinsisToolbar;\r\n","// @flow\r\n\r\nimport hoistNonReactStatics from 'hoist-non-react-statics'\r\nimport React, {\r\n  createContext,\r\n  forwardRef,\r\n  useContext,\r\n  type AbstractComponent,\r\n} from 'react'\r\n\r\nimport type { LeafletContext } from './types'\r\n\r\nconst leafletContext = createContext<LeafletContext>({})\r\n\r\nexport const useLeaflet = (): LeafletContext => useContext(leafletContext)\r\n\r\nexport const LeafletConsumer = leafletContext.Consumer\r\nexport const LeafletProvider = leafletContext.Provider\r\n\r\nexport const withLeaflet = <Config: { leaflet: LeafletContext }, Instance>(\r\n  WrappedComponent: AbstractComponent<Config, Instance>,\r\n): AbstractComponent<$Diff<Config, { leaflet: LeafletContext }>, Instance> => {\r\n  const WithLeafletComponent = (props, ref) => (\r\n    <LeafletConsumer>\r\n      {(leaflet: LeafletContext) => (\r\n        <WrappedComponent {...props} leaflet={leaflet} ref={ref} />\r\n      )}\r\n    </LeafletConsumer>\r\n  )\r\n\r\n  const name = // flowlint-next-line sketchy-null-string:off\r\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\r\n  WithLeafletComponent.displayName = `Leaflet(${name})`\r\n\r\n  const LeafletComponent = forwardRef(WithLeafletComponent)\r\n  hoistNonReactStatics(LeafletComponent, WrappedComponent)\r\n\r\n  return LeafletComponent\r\n}\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\nimport { Component } from 'react'\r\n\r\nimport type { MapControlProps } from './types'\r\n\r\nexport default class MapControl<\r\n  LeafletElement: Control,\r\n  Props: MapControlProps,\r\n> extends Component<Props> {\r\n  leafletElement: LeafletElement\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(this.props)\r\n  }\r\n\r\n  createLeafletElement(_props: Props): LeafletElement {\r\n    throw new Error('createLeafletElement() must be implemented')\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props): void {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setPosition(toProps.position)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.leafletElement.addTo(this.props.leaflet.map)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.leafletElement.remove()\r\n  }\r\n\r\n  render(): * {\r\n    return null\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type { MapControlProps } from './types'\r\n\r\ntype LeafletElement=Control.Attribution\r\ntype Props={\r\n  prefix?: string,\r\n}&MapControlProps\r\n\r\nclass AttributionControl extends MapControl<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new Control.Attribution(props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, AttributionControl>(AttributionControl)\r\n","// @flow\r\n\r\nimport type { Evented } from 'leaflet'\r\nimport { Component } from 'react'\r\n\r\nexport const EVENTS_RE = /^on(.+)$/i\r\n\r\ntype EventHandler = (event: Event) => void\r\ntype EventsObject = { [key: string]: EventHandler }\r\n\r\nexport default class MapEvented<\r\n  LeafletElement: Evented,\r\n  Props: Object,\r\n> extends Component<Props> {\r\n  _leafletEvents: EventsObject\r\n  leafletElement: LeafletElement\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this._leafletEvents = this.extractLeafletEvents(props)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.bindLeafletEvents(this._leafletEvents)\r\n  }\r\n\r\n  componentDidUpdate(_prevProps: Props) {\r\n    this._leafletEvents = this.bindLeafletEvents(\r\n      this.extractLeafletEvents(this.props),\r\n      this._leafletEvents,\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const el = this.leafletElement\r\n    if (!el) return\r\n\r\n    Object.keys(this._leafletEvents).forEach((ev) => {\r\n      el.off(ev, this._leafletEvents[ev])\r\n    })\r\n  }\r\n\r\n  extractLeafletEvents(props: Props): EventsObject {\r\n    return Object.keys(props).reduce((res, prop) => {\r\n      if (EVENTS_RE.test(prop)) {\r\n        if (props[prop] != null) {\r\n          const key = prop.replace(EVENTS_RE, (match, p) => p.toLowerCase())\r\n          res[key] = props[prop]\r\n        }\r\n      }\r\n      return res\r\n    }, {})\r\n  }\r\n\r\n  bindLeafletEvents(\r\n    next: EventsObject = {},\r\n    prev: EventsObject = {},\r\n  ): EventsObject {\r\n    const el = this.leafletElement\r\n    if (el == null || el.on == null) return {}\r\n\r\n    const diff = { ...prev }\r\n    Object.keys(prev).forEach((ev) => {\r\n      if (next[ev] == null || prev[ev] !== next[ev]) {\r\n        delete diff[ev]\r\n        el.off(ev, prev[ev])\r\n      }\r\n    })\r\n\r\n    Object.keys(next).forEach((ev) => {\r\n      if (prev[ev] == null || next[ev] !== prev[ev]) {\r\n        diff[ev] = next[ev]\r\n        el.on(ev, next[ev])\r\n      }\r\n    })\r\n\r\n    return diff\r\n  }\r\n\r\n  fireLeafletEvent(type: string, data: ?any) {\r\n    const el = this.leafletElement\r\n    if (el) el.fire(type, data)\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport MapEvented from './MapEvented'\r\nimport type { MapComponentProps } from './types'\r\n\r\nexport default class MapComponent<\r\n  LeafletElement,\r\n  Props: MapComponentProps,\r\n> extends MapEvented<LeafletElement, Props> {\r\n  getOptions(props: Props): Props {\r\n    if (props.pane != null) {\r\n      return props\r\n    }\r\n    if (props.leaflet != null && props.leaflet.pane != null) {\r\n      return { ...props, pane: props.leaflet.pane }\r\n    }\r\n    return props\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport type { Layer } from 'leaflet'\r\nimport React, { Fragment } from 'react'\r\n\r\nimport { LeafletProvider } from './context'\r\nimport MapComponent from './MapComponent'\r\nimport type { LeafletContext, MapLayerProps } from './types'\r\n\r\nexport default class MapLayer<\r\n  LeafletElement: Layer,\r\n  Props: MapLayerProps,\r\n> extends MapComponent<LeafletElement, Props> {\r\n  contextValue: ?LeafletContext\r\n  leafletElement: LeafletElement\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n  }\r\n\r\n  get layerContainer(): Layer {\r\n    return this.props.leaflet.layerContainer || this.props.leaflet.map\r\n  }\r\n\r\n  createLeafletElement(_props: Props): LeafletElement {\r\n    throw new Error('createLeafletElement() must be implemented')\r\n  }\r\n\r\n  updateLeafletElement(_fromProps: Props, _toProps: Props) {}\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    this.layerContainer.addLayer(this.leafletElement)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    super.componentDidUpdate(prevProps)\r\n\r\n    if (this.props.attribution !== prevProps.attribution) {\r\n      const { map } = this.props.leaflet\r\n      if (map != null && map.attributionControl != null) {\r\n        map.attributionControl.removeAttribution(prevProps.attribution)\r\n        map.attributionControl.addAttribution(this.props.attribution)\r\n      }\r\n    }\r\n\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount()\r\n    this.layerContainer.removeLayer(this.leafletElement)\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    if (children == null) {\r\n      return null\r\n    }\r\n    return this.contextValue == null ? (\r\n      <Fragment>{children}</Fragment>\r\n    ) : (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    )\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport type { Path as PathType } from 'leaflet'\r\nimport isEqual from 'fast-deep-equal'\r\n\r\nimport MapLayer from './MapLayer'\r\nimport type { PathOptions, PathProps } from './types'\r\nimport pick from './utils/pick'\r\n\r\nconst OPTIONS = [\r\n  'stroke',\r\n  'color',\r\n  'weight',\r\n  'opacity',\r\n  'lineCap',\r\n  'lineJoin',\r\n  'dashArray',\r\n  'dashOffset',\r\n  'fill',\r\n  'fillColor',\r\n  'fillOpacity',\r\n  'fillRule',\r\n  'bubblingMouseEvents',\r\n  'renderer',\r\n  'className',\r\n  // Interactive Layer\r\n  'interactive',\r\n  // Layer\r\n  'pane',\r\n  'attribution',\r\n]\r\n\r\nexport default class Path<\r\n  LeafletElement: PathType,\r\n  Props: PathProps,\r\n> extends MapLayer<LeafletElement, Props> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    if (this.contextValue == null) {\r\n      this.contextValue = {\r\n        ...props.leaflet,\r\n        popupContainer: this.leafletElement,\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    super.componentDidUpdate(prevProps)\r\n    this.setStyleIfChanged(prevProps, this.props)\r\n  }\r\n\r\n  getPathOptions(props: Props): PathOptions {\r\n    return pick(props, OPTIONS)\r\n  }\r\n\r\n  setStyle(options: PathOptions = {}) {\r\n    this.leafletElement.setStyle(options)\r\n  }\r\n\r\n  setStyleIfChanged(fromProps: Props, toProps: Props) {\r\n    const nextStyle = this.getPathOptions(toProps)\r\n    if (!isEqual(nextStyle, this.getPathOptions(fromProps))) {\r\n      this.setStyle(nextStyle)\r\n    }\r\n  }\r\n}\r\n","// @flow\r\n\r\nexport default function pick(object: Object, keys: Array<string>): Object {\r\n  return keys.reduce((obj, key) => {\r\n    if (typeof object[key] !== 'undefined') {\r\n      obj[key] = object[key]\r\n    }\r\n    return obj\r\n  }, {})\r\n}\r\n","// @flow\r\n\r\nimport { DomUtil } from 'leaflet'\r\n\r\nconst splitClassName = (className: string = ''): Array<string> => {\r\n  return className.split(' ').filter(Boolean)\r\n}\r\n\r\nexport const addClassName = (container: HTMLElement, className: string) => {\r\n  splitClassName(className).forEach((cls) => {\r\n    DomUtil.addClass(container, cls)\r\n  })\r\n}\r\n\r\nexport const removeClassName = (container: HTMLElement, className: string) => {\r\n  splitClassName(className).forEach((cls) => {\r\n    DomUtil.removeClass(container, cls)\r\n  })\r\n}\r\n\r\nexport default (\r\n  container: ?HTMLElement,\r\n  prevClassName: ?string,\r\n  nextClassName: ?string,\r\n) => {\r\n  if (container != null && nextClassName !== prevClassName) {\r\n    if (prevClassName != null && prevClassName.length > 0) {\r\n      removeClassName(container, prevClassName)\r\n    }\r\n    if (nextClassName != null && nextClassName.length > 0) {\r\n      addClassName(container, nextClassName)\r\n    }\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { Circle as LeafletCircle } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, MapLayerProps, PathOptions } from './types'\r\n\r\ntype LeafletElement = LeafletCircle\r\ntype Props = {\r\n  center: LatLng,\r\n  radius: number,\r\n} & MapLayerProps &\r\n  PathOptions &\r\n  Object\r\n\r\nclass Circle extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const { center, radius, ...options } = props\r\n    return new LeafletCircle(center, radius, this.getOptions(options))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.center !== fromProps.center) {\r\n      this.leafletElement.setLatLng(toProps.center)\r\n    }\r\n    if (toProps.radius !== fromProps.radius) {\r\n      this.leafletElement.setRadius(toProps.radius)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Circle>(Circle)\r\n","// @flow\r\n\r\nimport { CircleMarker as LeafletCircleMarker } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletCircleMarker\r\ntype Props = {\r\n  center: LatLng,\r\n  radius: number,\r\n} & PathProps\r\n\r\nclass CircleMarker extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletCircleMarker(props.center, this.getOptions(props))\r\n    this.contextValue = { ...props.leaflet, popupContainer: el }\r\n    return el\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.center !== fromProps.center) {\r\n      this.leafletElement.setLatLng(toProps.center)\r\n    }\r\n    if (toProps.radius !== fromProps.radius) {\r\n      this.leafletElement.setRadius(toProps.radius)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, CircleMarker>(CircleMarker)\r\n","// @flow\r\n\r\nimport { createPortal } from 'react-dom'\r\n\r\nimport MapComponent from './MapComponent'\r\nimport updateClassName from './utils/updateClassName'\r\nimport type { DivOverlayProps } from './types'\r\n\r\ntype DivOverlayTypes = {\r\n  _container: HTMLDivElement,\r\n  _contentNode: HTMLDivElement,\r\n  isOpen: () => boolean,\r\n  update: () => void,\r\n}\r\n\r\nexport default class DivOverlay<\r\n  LeafletElement,\r\n  Props: DivOverlayProps,\r\n> extends MapComponent<LeafletElement & DivOverlayTypes, Props> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n  }\r\n\r\n  createLeafletElement(_props: Props) {\r\n    throw new Error('createLeafletElement() must be implemented')\r\n  }\r\n\r\n  updateLeafletElement(_prevProps: Props, _props: Props) {}\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    updateClassName(\r\n      this.leafletElement._container,\r\n      prevProps.className,\r\n      this.props.className,\r\n    )\r\n\r\n    this.updateLeafletElement(prevProps, this.props)\r\n\r\n    if (this.leafletElement.isOpen()) {\r\n      this.leafletElement.update()\r\n      this.onRender()\r\n    }\r\n  }\r\n\r\n  onClose = () => {\r\n    if (this.props.onClose) {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  onOpen = () => {\r\n    this.forceUpdate() // Re-render now that leafletElement is created\r\n    if (this.props.onOpen) {\r\n      this.props.onOpen()\r\n    }\r\n  }\r\n\r\n  onRender() {}\r\n\r\n  render() {\r\n    if (this.leafletElement._contentNode) {\r\n      return createPortal(this.props.children, this.leafletElement._contentNode)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { GridLayer as LeafletGridLayer } from 'leaflet'\r\n\r\nimport MapLayer from './MapLayer'\r\nimport type { GridLayerProps } from './types'\r\n\r\nexport default class GridLayer<\r\n  LeafletElement: LeafletGridLayer,\r\n  Props: GridLayerProps,\r\n> extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletGridLayer(this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    const { opacity, zIndex } = toProps\r\n    if (opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(opacity)\r\n    }\r\n    if (zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(zIndex)\r\n    }\r\n  }\r\n\r\n  getOptions(props: Props): Props {\r\n    const options = { ...super.getOptions(props) }\r\n    const { map } = props.leaflet\r\n    if (map != null) {\r\n      // $FlowFixMe: Object spread\r\n      if (options.maxZoom == null && map.options.maxZoom != null) {\r\n        // $FlowFixMe: Object spread\r\n        options.maxZoom = map.options.maxZoom\r\n      }\r\n      // $FlowFixMe: Object spread\r\n      if (options.minZoom == null && map.options.minZoom != null) {\r\n        // $FlowFixMe: Object spread\r\n        options.minZoom = map.options.minZoom\r\n      }\r\n    }\r\n    return options\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n","// @flow\r\n\r\nimport { FeatureGroup as LeafletFeatureGroup } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletFeatureGroup\r\ntype Props = PathProps\r\n\r\nclass FeatureGroup extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletFeatureGroup(this.getOptions(props))\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: el,\r\n      popupContainer: el,\r\n    }\r\n    return el\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    this.setStyle(this.props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, FeatureGroup>(FeatureGroup)\r\n","// @flow\r\n\r\nimport { GeoJSON as LeafletGeoJSON, type LatLng, type Layer } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletGeoJSON\r\n\r\ntype GeoJSONdata = Object | Array<any>\r\n\r\ntype Props = {\r\n  data: GeoJSONdata,\r\n  pointToLayer?: (point: GeoJSONdata, latlng: LatLng) => Layer,\r\n  style?: (feature: GeoJSONdata) => Object,\r\n  onEachFeature?: (feature: GeoJSONdata, layer: Layer) => void,\r\n  filter?: (feature: GeoJSONdata) => boolean,\r\n  coordsToLatLng?: (coords: GeoJSONdata) => LatLng,\r\n  markersInheritOptions?: boolean,\r\n} & PathProps\r\n\r\nclass GeoJSON extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletGeoJSON(props.data, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (typeof toProps.style === 'function') {\r\n      this.leafletElement.setStyle(toProps.style)\r\n    } else {\r\n      this.setStyleIfChanged(fromProps, toProps)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, GeoJSON>(GeoJSON)\r\n","// @flow\r\n\r\nimport { ImageOverlay as LeafletImageOverlay, latLngBounds } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { LatLngBounds, MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletImageOverlay\r\ntype Props = {\r\n  attribution?: string,\r\n  bounds?: LatLngBounds,\r\n  opacity?: number,\r\n  url: string | HTMLImageElement,\r\n  zIndex?: number,\r\n} & MapLayerProps\r\n\r\nclass ImageOverlay extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletImageOverlay(\r\n      props.url,\r\n      props.bounds,\r\n      this.getOptions(props),\r\n    )\r\n    this.contextValue = { ...props.leaflet, popupContainer: el }\r\n    return el\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.url !== fromProps.url) {\r\n      this.leafletElement.setUrl(toProps.url)\r\n    }\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds))\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (toProps.zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(toProps.zIndex)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, ImageOverlay>(ImageOverlay)\r\n","// @flow\r\n\r\nimport { LayerGroup as LeafletLayerGroup } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletLayerGroup\r\ntype Props = MapLayerProps\r\n\r\nclass LayerGroup extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletLayerGroup([], this.getOptions(props))\r\n    this.contextValue = { ...props.leaflet, layerContainer: el }\r\n    return el\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, LayerGroup>(LayerGroup)\r\n","// @flow\r\n\r\nimport { Control, type Layer } from 'leaflet'\r\nimport React, {\r\n  cloneElement,\r\n  Component,\r\n  Children,\r\n  Fragment,\r\n  type ChildrenArray,\r\n  type Element,\r\n} from 'react'\r\n\r\nimport { LeafletProvider, withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type {\r\n  AddLayerHandler,\r\n  RemoveLayerHandler,\r\n  LeafletContext,\r\n  MapControlProps,\r\n} from './types'\r\n\r\ntype ControlledLayerProps = {\r\n  addBaseLayer: AddLayerHandler,\r\n  addOverlay: AddLayerHandler,\r\n  checked?: boolean,\r\n  children: Element<*>,\r\n  leaflet: LeafletContext,\r\n  name: string,\r\n  removeLayer: RemoveLayerHandler,\r\n  removeLayerControl: RemoveLayerHandler,\r\n}\r\n\r\n// Abtract class for layer container, extended by BaseLayer and Overlay\r\nexport class ControlledLayer extends Component<ControlledLayerProps> {\r\n  contextValue: LeafletContext\r\n  layer: ?Layer\r\n\r\n  componentDidUpdate({ checked }: ControlledLayerProps) {\r\n    if (this.props.leaflet.map == null) {\r\n      return\r\n    }\r\n    // Handle dynamically (un)checking the layer => adding/removing from the map\r\n    if (this.props.checked === true && (checked == null || checked === false)) {\r\n      this.props.leaflet.map.addLayer(this.layer)\r\n    } else if (\r\n      checked === true &&\r\n      (this.props.checked == null || this.props.checked === false)\r\n    ) {\r\n      this.props.leaflet.map.removeLayer(this.layer)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeLayerControl(this.layer)\r\n  }\r\n\r\n  addLayer() {\r\n    throw new Error('Must be implemented in extending class')\r\n  }\r\n\r\n  removeLayer(layer: Layer) {\r\n    this.props.removeLayer(layer)\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    return children ? (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    ) : null\r\n  }\r\n}\r\n\r\nclass BaseLayer extends ControlledLayer {\r\n  constructor(props: ControlledLayerProps) {\r\n    super(props)\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: {\r\n        addLayer: this.addLayer.bind(this),\r\n        removeLayer: this.removeLayer.bind(this),\r\n      },\r\n    }\r\n  }\r\n\r\n  addLayer = (layer: Layer) => {\r\n    this.layer = layer // Keep layer reference to handle dynamic changes of props\r\n    const { addBaseLayer, checked, name } = this.props\r\n    addBaseLayer(layer, name, checked)\r\n  }\r\n}\r\n\r\nclass Overlay extends ControlledLayer {\r\n  constructor(props: ControlledLayerProps) {\r\n    super(props)\r\n    this.contextValue = {\r\n      ...props.leaflet,\r\n      layerContainer: {\r\n        addLayer: this.addLayer.bind(this),\r\n        removeLayer: this.removeLayer.bind(this),\r\n      },\r\n    }\r\n  }\r\n\r\n  addLayer = (layer: Layer) => {\r\n    this.layer = layer // Keep layer reference to handle dynamic changes of props\r\n    const { addOverlay, checked, name } = this.props\r\n    addOverlay(layer, name, checked)\r\n  }\r\n}\r\n\r\ntype LeafletElement = Control.Layers\r\ntype LayersControlProps = {\r\n  children: ChildrenArray<*>,\r\n  collapsed?: boolean,\r\n} & MapControlProps\r\n\r\nclass LayersControl extends MapControl<LeafletElement, LayersControlProps> {\r\n  controlProps: {\r\n    addBaseLayer: AddLayerHandler,\r\n    addOverlay: AddLayerHandler,\r\n    removeLayer: RemoveLayerHandler,\r\n    removeLayerControl: RemoveLayerHandler,\r\n  }\r\n\r\n  constructor(props: LayersControlProps) {\r\n    super(props)\r\n    this.controlProps = {\r\n      addBaseLayer: this.addBaseLayer.bind(this),\r\n      addOverlay: this.addOverlay.bind(this),\r\n      leaflet: props.leaflet,\r\n      removeLayer: this.removeLayer.bind(this),\r\n      removeLayerControl: this.removeLayerControl.bind(this),\r\n    }\r\n  }\r\n\r\n  createLeafletElement(props: LayersControlProps): LeafletElement {\r\n    const { children: _children, ...options } = props\r\n    return new Control.Layers(undefined, undefined, options)\r\n  }\r\n\r\n  updateLeafletElement(\r\n    fromProps: LayersControlProps,\r\n    toProps: LayersControlProps,\r\n  ) {\r\n    super.updateLeafletElement(fromProps, toProps)\r\n    if (toProps.collapsed !== fromProps.collapsed) {\r\n      if (toProps.collapsed === true) {\r\n        this.leafletElement.collapse()\r\n      } else {\r\n        this.leafletElement.expand()\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    setTimeout(() => {\r\n      super.componentWillUnmount()\r\n    }, 0)\r\n  }\r\n\r\n  addBaseLayer(layer: Layer, name: string, checked: boolean = false) {\r\n    if (checked && this.props.leaflet.map != null) {\r\n      this.props.leaflet.map.addLayer(layer)\r\n    }\r\n    this.leafletElement.addBaseLayer(layer, name)\r\n  }\r\n\r\n  addOverlay(layer: Layer, name: string, checked: boolean = false) {\r\n    if (checked && this.props.leaflet.map != null) {\r\n      this.props.leaflet.map.addLayer(layer)\r\n    }\r\n    this.leafletElement.addOverlay(layer, name)\r\n  }\r\n\r\n  removeLayer(layer: Layer) {\r\n    if (this.props.leaflet.map != null) {\r\n      this.props.leaflet.map.removeLayer(layer)\r\n    }\r\n  }\r\n\r\n  removeLayerControl(layer: Layer) {\r\n    this.leafletElement.removeLayer(layer)\r\n  }\r\n\r\n  render() {\r\n    const children = Children.map(this.props.children, (child) => {\r\n      return child ? cloneElement(child, this.controlProps) : null\r\n    })\r\n    return <Fragment>{children}</Fragment>\r\n  }\r\n}\r\n\r\nconst LayersControlExport: Object = withLeaflet(LayersControl)\r\n\r\nLayersControlExport.BaseLayer = BaseLayer\r\nLayersControlExport.Overlay = Overlay\r\n\r\nexport default LayersControlExport\r\n","// @flow\r\n\r\nexport default function omit(\r\n  obj: Object,\r\n  ...keysToOmit: Array<string>\r\n): Object {\r\n  return Object.keys(obj).reduce((acc, key) => {\r\n    if (keysToOmit.indexOf(key) === -1) {\r\n      acc[key] = obj[key]\r\n    }\r\n    return acc\r\n  }, {})\r\n}\r\n","// @flow\r\n\r\nimport { type Icon, Marker as LeafletMarker } from 'leaflet'\r\nimport React from 'react'\r\n\r\nimport { LeafletProvider, withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { LatLng, MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletMarker\r\ntype Props = {\r\n  icon?: Icon,\r\n  draggable?: boolean,\r\n  opacity?: number,\r\n  position: LatLng,\r\n  zIndexOffset?: number,\r\n} & MapLayerProps\r\n\r\nclass Marker extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const el = new LeafletMarker(props.position, this.getOptions(props))\r\n    this.contextValue = { ...props.leaflet, popupContainer: el }\r\n    return el\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setLatLng(toProps.position)\r\n    }\r\n    if (toProps.icon !== fromProps.icon) {\r\n      this.leafletElement.setIcon(toProps.icon)\r\n    }\r\n    if (toProps.zIndexOffset !== fromProps.zIndexOffset) {\r\n      this.leafletElement.setZIndexOffset(toProps.zIndexOffset)\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (toProps.draggable !== fromProps.draggable) {\r\n      if (toProps.draggable === true) {\r\n        this.leafletElement.dragging.enable()\r\n      } else {\r\n        this.leafletElement.dragging.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    return children == null || this.contextValue == null ? null : (\r\n      <LeafletProvider value={this.contextValue}>{children}</LeafletProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Marker>(Marker)\r\n","// @flow\r\n\r\nimport {\r\n  latLngBounds,\r\n  Map as LeafletMap,\r\n  type CRS,\r\n  type Renderer,\r\n} from 'leaflet'\r\nimport React, { type Node } from 'react'\r\n\r\nimport { LeafletProvider } from './context'\r\nimport MapEvented from './MapEvented'\r\nimport updateClassName from './utils/updateClassName'\r\nimport omit from './utils/omit'\r\nimport type {\r\n  LatLng,\r\n  LatLngBounds,\r\n  LeafletContext,\r\n  Point,\r\n  Viewport,\r\n} from './types'\r\n\r\nconst OTHER_PROPS = [\r\n  'children',\r\n  'className',\r\n  'id',\r\n  'style',\r\n  'useFlyTo',\r\n  'whenReady',\r\n]\r\n\r\nconst normalizeCenter = (pos: LatLng): [number, number] => {\r\n  return Array.isArray(pos)\r\n    ? [pos[0], pos[1]]\r\n    : [pos.lat, pos.lon ? pos.lon : pos.lng]\r\n}\r\n\r\ntype LeafletElement = LeafletMap\r\n\r\ntype ZoomOption = boolean | 'center'\r\ntype Props = {\r\n  [key: string]: any,\r\n  // Leaflet options\r\n  preferCanvas?: boolean,\r\n  attributionControl?: boolean,\r\n  zoomControl?: boolean,\r\n  closePopupOnClick?: boolean,\r\n  zoomSnap?: number,\r\n  zoomDelta?: number,\r\n  trackResize?: boolean,\r\n  boxZoom?: boolean,\r\n  doubleClickZoom?: ZoomOption,\r\n  dragging?: boolean,\r\n  crs?: CRS,\r\n  center?: LatLng,\r\n  zoom?: number,\r\n  minZoom?: number,\r\n  maxZoom?: number,\r\n  maxBounds?: LatLngBounds,\r\n  renderer?: Renderer,\r\n  zoomAnimation?: boolean,\r\n  zoomAnimationThreshold?: number,\r\n  fadeAnimation?: boolean,\r\n  markerZoomAnimation?: boolean,\r\n  transform3DLimit?: number,\r\n  inertia?: boolean,\r\n  inertiaDeceleration?: number,\r\n  inertiaMaxSpeed?: number,\r\n  easeLinearity?: number,\r\n  worldCopyJump?: boolean,\r\n  maxBoundsViscosity?: number,\r\n  keyboard?: boolean,\r\n  keyboardPanDelta?: number,\r\n  scrollWheelZoom?: ZoomOption,\r\n  wheelDebounceTime?: number,\r\n  wheelPxPerZoomLevel?: number,\r\n  tap?: boolean,\r\n  tapTolerance?: number,\r\n  touchZoom?: ZoomOption,\r\n  bounceAtZoomLimits?: boolean,\r\n  // Additional options\r\n  animate?: boolean,\r\n  duration?: number,\r\n  noMoveStart?: boolean,\r\n  bounds?: LatLngBounds,\r\n  boundsOptions?: {|\r\n    paddingTopLeft?: Point,\r\n    paddingBottomRight?: Point,\r\n    padding?: Point,\r\n    maxZoom?: number,\r\n  |},\r\n  children: Node,\r\n  className?: string,\r\n  id?: string,\r\n  style?: Object,\r\n  useFlyTo?: boolean,\r\n  viewport?: Viewport,\r\n  whenReady?: () => void,\r\n}\r\n\r\nexport default class Map extends MapEvented<LeafletElement, Props> {\r\n  className: ?string\r\n  contextValue: ?LeafletContext\r\n  container: ?HTMLDivElement\r\n  viewport: Viewport = {\r\n    center: undefined,\r\n    zoom: undefined,\r\n  }\r\n\r\n  _ready: boolean = false\r\n  _updating: boolean = false\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.className = props.className\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const { viewport, ...options } = props\r\n    if (viewport) {\r\n      if (viewport.center) {\r\n        options.center = viewport.center\r\n      }\r\n      if (typeof viewport.zoom === 'number') {\r\n        options.zoom = viewport.zoom\r\n      }\r\n    }\r\n    return new LeafletMap(this.container, options)\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    this._updating = true\r\n\r\n    const {\r\n      bounds,\r\n      boundsOptions,\r\n      boxZoom,\r\n      center,\r\n      className,\r\n      doubleClickZoom,\r\n      dragging,\r\n      keyboard,\r\n      maxBounds,\r\n      scrollWheelZoom,\r\n      tap,\r\n      touchZoom,\r\n      useFlyTo,\r\n      viewport,\r\n      zoom,\r\n    } = toProps\r\n\r\n    updateClassName(this.container, fromProps.className, className)\r\n\r\n    if (viewport && viewport !== fromProps.viewport) {\r\n      const c = viewport.center ? viewport.center : center\r\n      const z = viewport.zoom == null ? zoom : viewport.zoom\r\n      if (useFlyTo === true) {\r\n        this.leafletElement.flyTo(c, z, this.getZoomPanOptions(toProps))\r\n      } else {\r\n        this.leafletElement.setView(c, z, this.getZoomPanOptions(toProps))\r\n      }\r\n    } else if (center && this.shouldUpdateCenter(center, fromProps.center)) {\r\n      if (useFlyTo === true) {\r\n        this.leafletElement.flyTo(center, zoom, this.getZoomPanOptions(toProps))\r\n      } else {\r\n        this.leafletElement.setView(\r\n          center,\r\n          zoom,\r\n          this.getZoomPanOptions(toProps),\r\n        )\r\n      }\r\n    } else if (typeof zoom === 'number' && zoom !== fromProps.zoom) {\r\n      if (fromProps.zoom == null) {\r\n        this.leafletElement.setView(\r\n          center,\r\n          zoom,\r\n          this.getZoomPanOptions(toProps),\r\n        )\r\n      } else {\r\n        this.leafletElement.setZoom(zoom, this.getZoomPanOptions(toProps))\r\n      }\r\n    }\r\n\r\n    if (maxBounds && this.shouldUpdateBounds(maxBounds, fromProps.maxBounds)) {\r\n      this.leafletElement.setMaxBounds(maxBounds)\r\n    }\r\n\r\n    if (\r\n      bounds &&\r\n      (this.shouldUpdateBounds(bounds, fromProps.bounds) ||\r\n        boundsOptions !== fromProps.boundsOptions)\r\n    ) {\r\n      if (useFlyTo === true) {\r\n        this.leafletElement.flyToBounds(\r\n          bounds,\r\n          this.getFitBoundsOptions(toProps),\r\n        )\r\n      } else {\r\n        this.leafletElement.fitBounds(bounds, this.getFitBoundsOptions(toProps))\r\n      }\r\n    }\r\n\r\n    if (boxZoom !== fromProps.boxZoom) {\r\n      if (boxZoom === true) {\r\n        this.leafletElement.boxZoom.enable()\r\n      } else {\r\n        this.leafletElement.boxZoom.disable()\r\n      }\r\n    }\r\n\r\n    if (doubleClickZoom !== fromProps.doubleClickZoom) {\r\n      if (doubleClickZoom === true || typeof doubleClickZoom === 'string') {\r\n        this.leafletElement.options.doubleClickZoom = doubleClickZoom\r\n        this.leafletElement.doubleClickZoom.enable()\r\n      } else {\r\n        this.leafletElement.doubleClickZoom.disable()\r\n      }\r\n    }\r\n\r\n    if (dragging !== fromProps.dragging) {\r\n      if (dragging === true) {\r\n        this.leafletElement.dragging.enable()\r\n      } else {\r\n        this.leafletElement.dragging.disable()\r\n      }\r\n    }\r\n\r\n    if (keyboard !== fromProps.keyboard) {\r\n      if (keyboard === true) {\r\n        this.leafletElement.keyboard.enable()\r\n      } else {\r\n        this.leafletElement.keyboard.disable()\r\n      }\r\n    }\r\n\r\n    if (scrollWheelZoom !== fromProps.scrollWheelZoom) {\r\n      if (scrollWheelZoom === true || typeof scrollWheelZoom === 'string') {\r\n        this.leafletElement.options.scrollWheelZoom = scrollWheelZoom\r\n        this.leafletElement.scrollWheelZoom.enable()\r\n      } else {\r\n        this.leafletElement.scrollWheelZoom.disable()\r\n      }\r\n    }\r\n\r\n    if (tap !== fromProps.tap) {\r\n      if (tap === true) {\r\n        this.leafletElement.tap.enable()\r\n      } else {\r\n        this.leafletElement.tap.disable()\r\n      }\r\n    }\r\n\r\n    if (touchZoom !== fromProps.touchZoom) {\r\n      if (touchZoom === true || typeof touchZoom === 'string') {\r\n        this.leafletElement.options.touchZoom = touchZoom\r\n        this.leafletElement.touchZoom.enable()\r\n      } else {\r\n        this.leafletElement.touchZoom.disable()\r\n      }\r\n    }\r\n\r\n    this._updating = false\r\n  }\r\n\r\n  getZoomPanOptions(props: Props) {\r\n    const { animate, duration, easeLinearity, noMoveStart } = props\r\n    return {\r\n      animate,\r\n      duration,\r\n      easeLinearity,\r\n      noMoveStart,\r\n    }\r\n  }\r\n\r\n  getFitBoundsOptions(props: Props) {\r\n    const zoomPanOptions = this.getZoomPanOptions(props)\r\n    return {\r\n      ...zoomPanOptions,\r\n      ...props.boundsOptions,\r\n    }\r\n  }\r\n\r\n  onViewportChange = () => {\r\n    const center = this.leafletElement.getCenter()\r\n    this.viewport = {\r\n      center: center ? [center.lat, center.lng] : undefined,\r\n      zoom: this.leafletElement.getZoom(),\r\n    }\r\n    if (this.props.onViewportChange && !this._updating) {\r\n      this.props.onViewportChange(this.viewport)\r\n    }\r\n  }\r\n\r\n  onViewportChanged = () => {\r\n    if (this.props.onViewportChanged && !this._updating) {\r\n      this.props.onViewportChanged(this.viewport)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const props = omit(this.props, ...OTHER_PROPS)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n\r\n    this.leafletElement.on('move', this.onViewportChange)\r\n    this.leafletElement.on('moveend', this.onViewportChanged)\r\n\r\n    if (props.bounds != null) {\r\n      this.leafletElement.fitBounds(\r\n        props.bounds,\r\n        this.getFitBoundsOptions(props),\r\n      )\r\n    }\r\n\r\n    this.contextValue = {\r\n      layerContainer: this.leafletElement,\r\n      map: this.leafletElement,\r\n    }\r\n\r\n    super.componentDidMount()\r\n    this.forceUpdate() // Re-render now that leafletElement is created\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this._ready === false) {\r\n      this._ready = true\r\n      if (this.props.whenReady) {\r\n        this.leafletElement.whenReady(this.props.whenReady)\r\n      }\r\n    }\r\n\r\n    super.componentDidUpdate(prevProps)\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount()\r\n\r\n    this.leafletElement.off('move', this.onViewportChange)\r\n    this.leafletElement.off('moveend', this.onViewportChanged)\r\n\r\n    // The canvas renderer uses requestAnimationFrame, making a deferred call to a deleted object\r\n    // When preferCanvas is set, use simpler teardown logic\r\n    if (this.props.preferCanvas === true) {\r\n      this.leafletElement._initEvents(true)\r\n      this.leafletElement._stop()\r\n    } else {\r\n      this.leafletElement.remove()\r\n    }\r\n  }\r\n\r\n  bindContainer = (container: ?HTMLDivElement): void => {\r\n    this.container = container\r\n  }\r\n\r\n  shouldUpdateCenter(next: LatLng, prev: LatLng) {\r\n    if (!prev) return true\r\n    next = normalizeCenter(next)\r\n    prev = normalizeCenter(prev)\r\n    return next[0] !== prev[0] || next[1] !== prev[1]\r\n  }\r\n\r\n  shouldUpdateBounds(next: LatLngBounds, prev: LatLngBounds) {\r\n    return prev ? !latLngBounds(next).equals(latLngBounds(prev)) : true\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.className}\r\n        id={this.props.id}\r\n        ref={this.bindContainer}\r\n        style={this.props.style}>\r\n        {this.contextValue ? (\r\n          <LeafletProvider value={this.contextValue}>\r\n            {this.props.children}\r\n          </LeafletProvider>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// @flow\r\n// flowlint sketchy-null-string:off\r\n\r\nimport React, { Component, type Node } from 'react'\r\nimport warning from 'warning'\r\n\r\nimport { LeafletProvider, withLeaflet } from './context'\r\nimport type { LeafletContext } from './types'\r\nimport { addClassName, removeClassName } from './utils/updateClassName'\r\nimport omit from './utils/omit'\r\n\r\nlet idCounter = 0\r\nconst uniqueId = () => ++idCounter\r\n\r\nconst LEAFLET_PANES = [\r\n  'tile',\r\n  'shadow',\r\n  'overlay',\r\n  'map',\r\n  'marker',\r\n  'tooltip',\r\n  'popup',\r\n]\r\n\r\nconst PANE_RE = /-*pane/gi\r\n\r\nconst isLeafletPane = (name: string): boolean => {\r\n  return LEAFLET_PANES.indexOf(name.replace(PANE_RE, '')) !== -1\r\n}\r\n\r\nconst paneStyles = {\r\n  position: 'absolute',\r\n  top: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  left: 0,\r\n}\r\n\r\ntype Props = {\r\n  children: Node,\r\n  className?: string,\r\n  leaflet: LeafletContext,\r\n  name?: string,\r\n  pane?: string,\r\n  style?: Object,\r\n}\r\n\r\ntype State = {\r\n  name: ?string,\r\n  context: ?LeafletContext,\r\n}\r\n\r\nclass Pane extends Component<Props, State> {\r\n  state = {\r\n    name: undefined,\r\n    context: undefined,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createPane(this.props)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (!this.state.name) {\r\n      // Do nothing if this.state.name is undefined due to errors or\r\n      // an invalid props.name value\r\n      return\r\n    }\r\n\r\n    // If the 'name' prop has changed the current pane is unmounted and a new\r\n    // pane is created.\r\n    if (this.props.name !== prevProps.name) {\r\n      this.removePane()\r\n      this.createPane(this.props)\r\n    } else {\r\n      // Remove the previous css class name from the pane if it has changed.\r\n      // setStyle() will take care of adding in the updated className\r\n      if (prevProps.className && this.props.className !== prevProps.className) {\r\n        const pane = this.getPane(this.state.name)\r\n        if (pane != null && prevProps.className != null) {\r\n          removeClassName(pane, prevProps.className)\r\n        }\r\n      }\r\n\r\n      // Update the pane's DOM node style and class\r\n      this.setStyle(this.props)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removePane()\r\n  }\r\n\r\n  createPane(props: Props) {\r\n    const { map } = props.leaflet\r\n    const name = props.name || `pane-${uniqueId()}`\r\n\r\n    if (map != null && map.createPane != null) {\r\n      const isDefault = isLeafletPane(name)\r\n      const existing = isDefault || this.getPane(name)\r\n\r\n      if (existing == null) {\r\n        map.createPane(name, this.getParentPane())\r\n      } else {\r\n        const message = isDefault\r\n          ? `You must use a unique name for a pane that is not a default leaflet pane (${name})`\r\n          : `A pane with this name already exists. (${name})`\r\n        warning(false, message)\r\n      }\r\n\r\n      this.setState(\r\n        { name, context: { ...props.leaflet, pane: name } },\r\n        this.setStyle,\r\n      )\r\n    }\r\n  }\r\n\r\n  removePane() {\r\n    // Remove the created pane\r\n    const { name } = this.state\r\n    if (name != null) {\r\n      const pane = this.getPane(name)\r\n      if (pane != null && pane.remove) pane.remove()\r\n\r\n      const { map } = this.props.leaflet\r\n      if (map != null && map._panes != null) {\r\n        map._panes = omit(map._panes, name)\r\n        map._paneRenderers = omit(map._paneRenderers, name)\r\n      }\r\n    }\r\n  }\r\n\r\n  setStyle = ({ style, className }: Props = this.props) => {\r\n    const pane = this.getPane(this.state.name)\r\n    if (pane) {\r\n      if (className) {\r\n        addClassName(pane, className)\r\n      }\r\n      if (style) {\r\n        // Without the cast, Flow throws this error:\r\n        //   Cannot assign style[key] to pane.style[key] because string\r\n        //   is incompatible with number.\r\n        Object.keys(style).forEach((key: any) => {\r\n          pane.style[key] = style[key]\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  getParentPane(): ?HTMLElement {\r\n    return this.getPane(this.props.pane || this.props.leaflet.pane)\r\n  }\r\n\r\n  getPane(name: ?string): ?HTMLElement {\r\n    if (name != null && this.props.leaflet.map != null) {\r\n      return this.props.leaflet.map.getPane(name)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { context } = this.state\r\n    return context ? (\r\n      <LeafletProvider value={context}>\r\n        <div style={paneStyles}>{this.props.children}</div>\r\n      </LeafletProvider>\r\n    ) : null\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Pane>(Pane)\r\n","// @flow\r\n\r\nimport { Popup as LeafletPopup } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport DivOverlay from './DivOverlay'\r\nimport type { LatLng, DivOverlayProps } from './types'\r\n\r\ntype LeafletElement = LeafletPopup\r\ntype Props = {\r\n  autoPan?: boolean,\r\n  position?: LatLng,\r\n} & DivOverlayProps\r\n\r\nclass Popup extends DivOverlay<LeafletElement, Props> {\r\n  static defaultProps = {\r\n    pane: 'popupPane',\r\n  }\r\n\r\n  getOptions(props: Props): Props {\r\n    return {\r\n      ...super.getOptions(props),\r\n      autoPan: false,\r\n    }\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const options = this.getOptions(props)\r\n    options.autoPan = props.autoPan !== false\r\n    return new LeafletPopup(options, props.leaflet.popupContainer)\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.position !== fromProps.position) {\r\n      this.leafletElement.setLatLng(toProps.position)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { position } = this.props\r\n    const { map, popupContainer } = this.props.leaflet\r\n    const el = this.leafletElement\r\n\r\n    if (map != null) {\r\n      map.on({\r\n        popupopen: this.onPopupOpen,\r\n        popupclose: this.onPopupClose,\r\n      })\r\n    }\r\n\r\n    if (popupContainer) {\r\n      // Attach to container component\r\n      popupContainer.bindPopup(el)\r\n    } else {\r\n      // Attach to a Map\r\n      if (position) {\r\n        el.setLatLng(position)\r\n      }\r\n      el.openOn(map)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { map } = this.props.leaflet\r\n\r\n    if (map != null) {\r\n      map.off({\r\n        popupopen: this.onPopupOpen,\r\n        popupclose: this.onPopupClose,\r\n      })\r\n      map.removeLayer(this.leafletElement)\r\n    }\r\n\r\n    super.componentWillUnmount()\r\n  }\r\n\r\n  onPopupOpen = ({ popup }: { popup: LeafletElement }) => {\r\n    if (popup === this.leafletElement) {\r\n      this.onOpen()\r\n    }\r\n  }\r\n\r\n  onPopupClose = ({ popup }: { popup: LeafletElement }) => {\r\n    if (popup === this.leafletElement) {\r\n      this.onClose()\r\n    }\r\n  }\r\n\r\n  onRender = () => {\r\n    if (this.props.autoPan !== false && this.leafletElement.isOpen()) {\r\n      if (this.leafletElement._map && this.leafletElement._map._panAnim) {\r\n        this.leafletElement._map._panAnim = undefined\r\n      }\r\n      this.leafletElement._adjustPan()\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Popup>(Popup)\r\n","// @flow\r\n\r\nimport { Polygon as LeafletPolygon } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletPolygon\r\ntype Props = {\r\n  positions: LatLng[] | LatLng[][] | LatLng[][][],\r\n} & PathProps\r\n\r\nclass Polygon extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletPolygon(props.positions, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.positions !== fromProps.positions) {\r\n      this.leafletElement.setLatLngs(toProps.positions)\r\n    }\r\n    this.setStyleIfChanged(fromProps, toProps)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Polygon>(Polygon)\r\n","// @flow\r\n\r\nimport { Polyline as LeafletPolyline } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLng, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletPolyline\r\ntype Props = {\r\n  positions: LatLng[] | LatLng[][],\r\n} & PathProps\r\n\r\nclass Polyline extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletPolyline(props.positions, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.positions !== fromProps.positions) {\r\n      this.leafletElement.setLatLngs(toProps.positions)\r\n    }\r\n    this.setStyleIfChanged(fromProps, toProps)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Polyline>(Polyline)\r\n","// @flow\r\n\r\nimport { Rectangle as LeafletRectangle } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport Path from './Path'\r\nimport type { LatLngBounds, PathProps } from './types'\r\n\r\ntype LeafletElement = LeafletRectangle\r\ntype Props = { bounds: LatLngBounds } & PathProps\r\n\r\nclass Rectangle extends Path<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletRectangle(props.bounds, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(toProps.bounds)\r\n    }\r\n    this.setStyleIfChanged(fromProps, toProps)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Rectangle>(Rectangle)\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type { MapControlProps } from './types'\r\n\r\ntype LeafletElement = Control.Scale\r\ntype Props = {\r\n  imperial?: boolean,\r\n  maxWidth?: number,\r\n  metric?: boolean,\r\n  updateWhenIdle?: boolean,\r\n} & MapControlProps\r\n\r\nclass ScaleControl extends MapControl<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new Control.Scale(props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, ScaleControl>(ScaleControl)\r\n","// @flow\r\n\r\nimport { Layer, SVGOverlay as LeafletSVGOverlay } from 'leaflet'\r\nimport { createPortal } from 'react-dom'\r\n\r\nimport type { SVGOverlayProps } from './types'\r\nimport { withLeaflet } from './context'\r\nimport MapComponent from './MapComponent'\r\n\r\ntype LeafletElement = LeafletSVGOverlay\r\ntype Props = SVGOverlayProps\r\n\r\nfunction setAttribute(el: Element, name: string, value: ?string): void {\r\n  if (value != null) {\r\n    el.setAttribute(name, value)\r\n  } else {\r\n    el.removeAttribute(name)\r\n  }\r\n}\r\n\r\nclass SVGOverlay extends MapComponent<LeafletElement, Props> {\r\n  leafletElement: LeafletElement\r\n  container: ?Element\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.leafletElement = this.createLeafletElement(props)\r\n  }\r\n\r\n  get layerContainer(): Layer {\r\n    return this.props.leaflet.layerContainer || this.props.leaflet.map\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const container = document.createElementNS(\r\n      'http://www.w3.org/2000/svg',\r\n      'svg',\r\n    )\r\n    setAttribute(container, 'xmlns', 'http://www.w3.org/2000/svg')\r\n    setAttribute(container, 'preserveAspectRatio', props.preserveAspectRatio)\r\n    setAttribute(container, 'viewBox', props.viewBox)\r\n\r\n    this.container = container\r\n    return new LeafletSVGOverlay(\r\n      container,\r\n      props.bounds,\r\n      this.getOptions(props),\r\n    )\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(toProps.bounds)\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (\r\n      this.container &&\r\n      toProps.preserveAspectRatio !== fromProps.preserveAspectRatio\r\n    ) {\r\n      setAttribute(\r\n        this.container,\r\n        'preserveAspectRatio',\r\n        toProps.preserveAspectRatio,\r\n      )\r\n    }\r\n    if (this.container && toProps.viewBox !== fromProps.viewBox) {\r\n      setAttribute(this.container, 'viewBox', toProps.viewBox)\r\n    }\r\n    if (toProps.zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(toProps.zIndex)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    this.layerContainer.addLayer(this.leafletElement)\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    super.componentDidUpdate(prevProps)\r\n\r\n    if (this.props.attribution !== prevProps.attribution) {\r\n      const { map } = this.props.leaflet\r\n      if (map != null && map.attributionControl != null) {\r\n        map.attributionControl.removeAttribution(prevProps.attribution)\r\n        map.attributionControl.addAttribution(this.props.attribution)\r\n      }\r\n    }\r\n\r\n    this.updateLeafletElement(prevProps, this.props)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    super.componentWillUnmount()\r\n    this.layerContainer.removeLayer(this.leafletElement)\r\n    this.container = null\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    if (children == null || this.container == null) {\r\n      return null\r\n    }\r\n\r\n    return createPortal(children, this.container)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, SVGOverlay>(SVGOverlay)\r\n","// @flow\r\n\r\nimport { TileLayer as LeafletTileLayer } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport GridLayer from './GridLayer'\r\nimport type { GridLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletTileLayer\r\ntype Props = { url: string } & GridLayerProps\r\n\r\nclass TileLayer extends GridLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletTileLayer(props.url, this.getOptions(props))\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    super.updateLeafletElement(fromProps, toProps)\r\n    if (toProps.url !== fromProps.url) {\r\n      this.leafletElement.setUrl(toProps.url)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, TileLayer>(TileLayer)\r\n","// @flow\r\n\r\nimport { Tooltip as LeafletTooltip } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport DivOverlay from './DivOverlay'\r\nimport type { DivOverlayProps } from './types'\r\n\r\ntype LeafletElement = LeafletTooltip\r\ntype Props = DivOverlayProps\r\n\r\nclass Tooltip extends DivOverlay<LeafletElement, Props> {\r\n  static defaultProps = {\r\n    pane: 'tooltipPane',\r\n  }\r\n\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletTooltip(\r\n      this.getOptions(props),\r\n      props.leaflet.popupContainer,\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { popupContainer } = this.props.leaflet\r\n    if (popupContainer == null) return\r\n\r\n    popupContainer.on({\r\n      tooltipopen: this.onTooltipOpen,\r\n      tooltipclose: this.onTooltipClose,\r\n    })\r\n    popupContainer.bindTooltip(this.leafletElement)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { popupContainer } = this.props.leaflet\r\n    if (popupContainer == null) return\r\n\r\n    popupContainer.off({\r\n      tooltipopen: this.onTooltipOpen,\r\n      tooltipclose: this.onTooltipClose,\r\n    })\r\n    if (popupContainer._map != null) {\r\n      popupContainer.unbindTooltip(this.leafletElement)\r\n    }\r\n  }\r\n\r\n  onTooltipOpen = ({ tooltip }: { tooltip: LeafletElement }) => {\r\n    if (tooltip === this.leafletElement) {\r\n      this.onOpen()\r\n    }\r\n  }\r\n\r\n  onTooltipClose = ({ tooltip }: { tooltip: LeafletElement }) => {\r\n    if (tooltip === this.leafletElement) {\r\n      this.onClose()\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, Tooltip>(Tooltip)\r\n","// @flow\r\n\r\nimport { VideoOverlay as LeafletVideoOverlay, latLngBounds } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapLayer from './MapLayer'\r\nimport type { LatLngBounds, MapLayerProps } from './types'\r\n\r\ntype LeafletElement = LeafletVideoOverlay\r\ntype Props = {\r\n  attribution?: string,\r\n  bounds: LatLngBounds,\r\n  opacity?: number,\r\n  play?: boolean,\r\n  url: string | string[] | HTMLVideoElement,\r\n  zIndex?: number,\r\n} & MapLayerProps\r\n\r\nclass VideoOverlay extends MapLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new LeafletVideoOverlay(\r\n      props.url,\r\n      props.bounds,\r\n      this.getOptions(props),\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    super.componentDidMount()\r\n    if (this.props.play === true) {\r\n      this.leafletElement.getElement().play()\r\n    }\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    if (toProps.url !== fromProps.url) {\r\n      this.leafletElement.setUrl(toProps.url)\r\n    }\r\n    if (toProps.bounds !== fromProps.bounds) {\r\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds))\r\n    }\r\n    if (toProps.opacity !== fromProps.opacity) {\r\n      this.leafletElement.setOpacity(toProps.opacity)\r\n    }\r\n    if (toProps.zIndex !== fromProps.zIndex) {\r\n      this.leafletElement.setZIndex(toProps.zIndex)\r\n    }\r\n    // flowlint-next-line sketchy-null-bool:off\r\n    if (toProps.play === true && !fromProps.play) {\r\n      this.leafletElement.getElement().play()\r\n      // flowlint-next-line sketchy-null-bool:off\r\n    } else if (!toProps.play && fromProps.play === true) {\r\n      this.leafletElement.getElement().pause()\r\n    }\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, VideoOverlay>(VideoOverlay)\r\n","// @flow\r\n\r\nimport { TileLayer } from 'leaflet'\r\nimport isEqual from 'fast-deep-equal'\r\n\r\nimport { withLeaflet } from './context'\r\nimport GridLayer from './GridLayer'\r\nimport { EVENTS_RE } from './MapEvented'\r\nimport type { GridLayerProps } from './types'\r\n\r\ntype LeafletElement = TileLayer.WMS\r\ntype Props = { url: string } & GridLayerProps\r\n\r\nclass WMSTileLayer extends GridLayer<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    const { url, ...params } = props\r\n    const { leaflet: _l, ...options } = this.getOptions(params)\r\n    return new TileLayer.WMS(url, options)\r\n  }\r\n\r\n  updateLeafletElement(fromProps: Props, toProps: Props) {\r\n    super.updateLeafletElement(fromProps, toProps)\r\n\r\n    const { url: prevUrl, opacity: _po, zIndex: _pz, ...prevProps } = fromProps\r\n    const { leaflet: _pl, ...prevParams } = this.getOptions(prevProps)\r\n    const { url, opacity: _o, zIndex: _z, ...props } = toProps\r\n    const { leaflet: _l, ...params } = this.getOptions(props)\r\n\r\n    if (url !== prevUrl) {\r\n      this.leafletElement.setUrl(url)\r\n    }\r\n    if (!isEqual(params, prevParams)) {\r\n      this.leafletElement.setParams(params)\r\n    }\r\n  }\r\n\r\n  getOptions(params: Object): Object {\r\n    const superOptions = super.getOptions(params)\r\n    return Object.keys(superOptions).reduce((options, key) => {\r\n      if (!EVENTS_RE.test(key)) {\r\n        options[key] = superOptions[key]\r\n      }\r\n      return options\r\n    }, {})\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, WMSTileLayer>(WMSTileLayer)\r\n","// @flow\r\n\r\nimport { Control } from 'leaflet'\r\n\r\nimport { withLeaflet } from './context'\r\nimport MapControl from './MapControl'\r\nimport type { MapControlProps } from './types'\r\n\r\ntype LeafletElement = Control.Zoom\r\ntype Props = {\r\n  zoomInText?: string,\r\n  zoomInTitle?: string,\r\n  zoomOutText?: string,\r\n  zoomOutTitle?: string,\r\n} & MapControlProps\r\n\r\nclass ZoomControl extends MapControl<LeafletElement, Props> {\r\n  createLeafletElement(props: Props): LeafletElement {\r\n    return new Control.Zoom(props)\r\n  }\r\n}\r\n\r\nexport default withLeaflet<Props, ZoomControl>(ZoomControl)\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    \"keyId\": \"1\",\r\n    \"kdProvinsi\": \"01\",\r\n    \"nmProvinsi\": \"DKI JAKARTA\",\r\n    \"latitude\": \"-6.597376952336214\",\r\n    \"longitude\": \"106.90771704354137\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"2\",\r\n    \"kdProvinsi\": \"02\",\r\n    \"nmProvinsi\": \"JAWA BARAT\",\r\n    \"latitude\": \"-6.922222\",\r\n    \"longitude\": \"107.606944\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"3\",\r\n    \"kdProvinsi\": \"03\",\r\n    \"nmProvinsi\": \"JAWA TENGAH\",\r\n    \"latitude\": \"-6.993056\",\r\n    \"longitude\": \"110.420833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"4\",\r\n    \"kdProvinsi\": \"04\",\r\n    \"nmProvinsi\": \"DI YOGYAKARTA\",\r\n    \"latitude\": \"-7.801389\",\r\n    \"longitude\": \"110.364722\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"5\",\r\n    \"kdProvinsi\": \"05\",\r\n    \"nmProvinsi\": \"JAWA TIMUR\",\r\n    \"latitude\": \"-7.249167\",\r\n    \"longitude\": \"112.750833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"6\",\r\n    \"kdProvinsi\": \"06\",\r\n    \"nmProvinsi\": \"ACEH\",\r\n    \"latitude\": \"5.541667\",\r\n    \"longitude\": \"95.333333\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"7\",\r\n    \"kdProvinsi\": \"07\",\r\n    \"nmProvinsi\": \"SUMATERA UTARA\",\r\n    \"latitude\": \"1.48218\",\r\n    \"longitude\": \"124.848922\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"8\",\r\n    \"kdProvinsi\": \"08\",\r\n    \"nmProvinsi\": \"SUMATERA BARAT\",\r\n    \"latitude\": \"-0.941667\",\r\n    \"longitude\": \"100.375\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"9\",\r\n    \"kdProvinsi\": \"09\",\r\n    \"nmProvinsi\": \"RIAU\",\r\n    \"latitude\": \"0.516667\",\r\n    \"longitude\": \"101.441667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"10\",\r\n    \"kdProvinsi\": \"10\",\r\n    \"nmProvinsi\": \"JAMBI\",\r\n    \"latitude\": \"-1.620152\",\r\n    \"longitude\": \"103.611373\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"11\",\r\n    \"kdProvinsi\": \"11\",\r\n    \"nmProvinsi\": \"SUMATERA SELATAN\",\r\n    \"latitude\": \"-2.976389\",\r\n    \"longitude\": \"104.75\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"12\",\r\n    \"kdProvinsi\": \"12\",\r\n    \"nmProvinsi\": \"LAMPUNG\",\r\n    \"latitude\": \"-5.429167\",\r\n    \"longitude\": \"105.261111\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"13\",\r\n    \"kdProvinsi\": \"13\",\r\n    \"nmProvinsi\": \"KALIMANTAN BARAT\",\r\n    \"latitude\": \"-0.031944\",\r\n    \"longitude\": \"109.325\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"14\",\r\n    \"kdProvinsi\": \"14\",\r\n    \"nmProvinsi\": \"KALIMANTAN TENGAH\",\r\n    \"latitude\": \"-2.208333\",\r\n    \"longitude\": \"113.916667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"15\",\r\n    \"kdProvinsi\": \"15\",\r\n    \"nmProvinsi\": \"KALIMANTAN SELATAN\",\r\n    \"latitude\": \"-3.323611\",\r\n    \"longitude\": \"114.588889\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"16\",\r\n    \"kdProvinsi\": \"16\",\r\n    \"nmProvinsi\": \"KALIMANTAN TIMUR\",\r\n    \"latitude\": \"-0.491667\",\r\n    \"longitude\": \"117.145833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"17\",\r\n    \"kdProvinsi\": \"17\",\r\n    \"nmProvinsi\": \"SULAWESI UTARA\",\r\n    \"latitude\": \"3.583333\",\r\n    \"longitude\": \"98.666667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"18\",\r\n    \"kdProvinsi\": \"18\",\r\n    \"nmProvinsi\": \"SULAWESI TENGAH\",\r\n    \"latitude\": \"-0.908333\",\r\n    \"longitude\": \"119.870833\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"19\",\r\n    \"kdProvinsi\": \"19\",\r\n    \"nmProvinsi\": \"SULAWESI SELATAN\",\r\n    \"latitude\": \"-5.148611\",\r\n    \"longitude\": \"119.431944\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"20\",\r\n    \"kdProvinsi\": \"20\",\r\n    \"nmProvinsi\": \"SULAWESI TENGGARA\",\r\n    \"latitude\": \"-3.975\",\r\n    \"longitude\": \"122.516667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"21\",\r\n    \"kdProvinsi\": \"21\",\r\n    \"nmProvinsi\": \"MALUKU\",\r\n    \"latitude\": \"-3.695833\",\r\n    \"longitude\": \"128.183333\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"22\",\r\n    \"kdProvinsi\": \"22\",\r\n    \"nmProvinsi\": \"BALI\",\r\n    \"latitude\": \"-8.65\",\r\n    \"longitude\": \"115.216667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"23\",\r\n    \"kdProvinsi\": \"23\",\r\n    \"nmProvinsi\": \"NUSA TENGGARA BARAT\",\r\n    \"latitude\": \"-8.583333\",\r\n    \"longitude\": \"116.116667\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"24\",\r\n    \"kdProvinsi\": \"24\",\r\n    \"nmProvinsi\": \"NUSA TENGGARA TIMUR\",\r\n    \"latitude\": \"-10.170833\",\r\n    \"longitude\": \"123.606944\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"25\",\r\n    \"kdProvinsi\": \"25\",\r\n    \"nmProvinsi\": \"PAPUA\",\r\n    \"latitude\": \"-2.534722\",\r\n    \"longitude\": \"140.705556\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"26\",\r\n    \"kdProvinsi\": \"26\",\r\n    \"nmProvinsi\": \"BENGKULU\",\r\n    \"latitude\": \"-3.8125\",\r\n    \"longitude\": \"102.2875\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"27\",\r\n    \"kdProvinsi\": \"28\",\r\n    \"nmProvinsi\": \"MALUKU UTARA\",\r\n    \"latitude\": \"0.737287\",\r\n    \"longitude\": \"127.558801\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"28\",\r\n    \"kdProvinsi\": \"29\",\r\n    \"nmProvinsi\": \"BANTEN\",\r\n    \"latitude\": \"-6.115278\",\r\n    \"longitude\": \"106.154167\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"29\",\r\n    \"kdProvinsi\": \"30\",\r\n    \"nmProvinsi\": \"KEPULAUAN BANGKA BELITUNG\",\r\n    \"latitude\": \"-2.120833\",\r\n    \"longitude\": \"106.1125\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"30\",\r\n    \"kdProvinsi\": \"31\",\r\n    \"nmProvinsi\": \"GORONTALO\",\r\n    \"latitude\": \"0.5375\",\r\n    \"longitude\": \"123.0625\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"31\",\r\n    \"kdProvinsi\": \"32\",\r\n    \"nmProvinsi\": \"KEPULAUAN RIAU\",\r\n    \"latitude\": \"0.916667\",\r\n    \"longitude\": \"104.458333\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"32\",\r\n    \"kdProvinsi\": \"33\",\r\n    \"nmProvinsi\": \"PAPUA BARAT\",\r\n    \"latitude\": \"-0.861111\",\r\n    \"longitude\": \"134.0625\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"33\",\r\n    \"kdProvinsi\": \"34\",\r\n    \"nmProvinsi\": \"SULAWESI BARAT\",\r\n    \"latitude\": \"-2.680556\",\r\n    \"longitude\": \"118.886111\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"34\",\r\n    \"kdProvinsi\": \"35\",\r\n    \"nmProvinsi\": \"KALIMANTAN UTARA\",\r\n    \"latitude\": \"2.8375\",\r\n    \"longitude\": \"117.365278\",\r\n    \"status\": \"ACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"35\",\r\n    \"kdProvinsi\": \"50\",\r\n    \"nmProvinsi\": \"PERWAKILAN RI DI LUAR NEGERI\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"36\",\r\n    \"kdProvinsi\": \"51\",\r\n    \"nmProvinsi\": \"AMERIKA UTARA\",\r\n    \"latitude\": \"-6.878256654394346\",\r\n    \"longitude\": \"107.94358932830704\",\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"37\",\r\n    \"kdProvinsi\": \"52\",\r\n    \"nmProvinsi\": \"AMERIKA SELATAN\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"38\",\r\n    \"kdProvinsi\": \"53\",\r\n    \"nmProvinsi\": \"EROPA TIMUR DAN UTARA\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"39\",\r\n    \"kdProvinsi\": \"54\",\r\n    \"nmProvinsi\": \"EROPA BARAT\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"40\",\r\n    \"kdProvinsi\": \"55\",\r\n    \"nmProvinsi\": \"AFRIKA\",\r\n    \"latitude\": \"0.93923\",\r\n    \"longitude\": \"0.838333\",\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"41\",\r\n    \"kdProvinsi\": \"56\",\r\n    \"nmProvinsi\": \"ASIA TENGAH DAN TIMUR\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"42\",\r\n    \"kdProvinsi\": \"57\",\r\n    \"nmProvinsi\": \"ASIA PASIFIK\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"43\",\r\n    \"kdProvinsi\": \"58\",\r\n    \"nmProvinsi\": \"ASIA TENGGARA\",\r\n    \"latitude\": null,\r\n    \"longitude\": null,\r\n    \"status\": \"INACTIVE\"\r\n  },\r\n  {\r\n    \"keyId\": \"44\",\r\n    \"kdProvinsi\": \"59\",\r\n    \"nmProvinsi\": \"TIMUR TENGAH\",\r\n    \"latitude\": \"33.59708164557022\",\r\n    \"longitude\": \"132.30468705296516\",\r\n    \"status\": \"ACTIVE\"\r\n  }\r\n]\r\n  ;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nconst useStyles=makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nexport const pointerIcon=new L.Icon({\r\n  iconUrl: '/assets/mapmarker.svg',\r\n  iconRetinaUrl: '/assets/mapmarker.svg',\r\n  iconAnchor: [5, 15],\r\n  //popupAnchor: [10, 10],\r\n  iconSize: [28, 28],\r\n  //shadowUrl: '/assets/marker-icon-2x.png',\r\n  //shadowSize: [68, 45],\r\n  //shadowAnchor: [20, 42],\r\n})\r\nconst ViewMap=props => {\r\n  const { className, datas2, handleClose, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({\r\n    firstName: 'Shen',\r\n    lastName: 'Zhi',\r\n    email: 'shen.zhi@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n\r\n  const [map, setMap]=useState({});\r\n  const [currentLocation, setCurrentLocation]=useState({\r\n    lat: 1.6406296,\r\n    lng: 116.419389,\r\n    zoom: 5,\r\n  });\r\n\r\n  /*\r\n    const handleChange=event => {\r\n      setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value\r\n      });\r\n    };\r\n  */\r\n  const handleMapLoad=map => {\r\n    setMap(map)\r\n  }\r\n\r\n  const status=[\r\n    {\r\n      value: 'A',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: 'I',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const position=[currentLocation.lat, currentLocation.lng]\r\n  return (\r\n    <>\r\n\r\n      <Card\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={title}\r\n        />\r\n\r\n        <CardContent className={classes.content} style={{ height: '100%', width: '100%', marginTop: '-1%' }}\r\n        >\r\n          <Map center={position} zoom={currentLocation.zoom}\r\n            style={{ height: '80%' }} >\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            {datas2.map((headCell) => (\r\n              headCell.latitude!=null? (\r\n\r\n                <Marker position={[headCell.latitude, headCell.longitude]} icon={pointerIcon}>\r\n                  <Popup>\r\n                    Propinsi {headCell.nmProvinsi}\r\n                  </Popup>\r\n                  <Tooltip>Propinsi {headCell.nmProvinsi}</Tooltip>\r\n                </Marker>\r\n              ):''\r\n            ))}\r\n          </Map>\r\n          <br />\r\n          <Button color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Close</Button>\r\n\r\n\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nViewMap.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ViewMap;\r\n","//import uuid from 'uuid/v1';\r\n\r\nexport default\r\n  {\r\n    TitleModule: \"Daftar Provinsi\",\r\n    HeaderData:\r\n      [\r\n        // { id: 'keyId', label: 'Propinsi ID', flagDisplay: 1 },\r\n        // { id: 'kdProvinsi', label: 'Kode Propinsi', flagDisplay: 1 },\r\n        { id: 'nmProvinsi', label: 'Nama Provinsi', flagDisplay: 1 },\r\n        { id: 'latitude', label: 'Latitude', flagDisplay: 1 },\r\n        { id: 'longitude', label: 'Longitude', flagDisplay: 1 },\r\n        { id: 'status', label: 'Status', flagDisplay: 1 },\r\n      ],\r\n  }\r\n;\r\n","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { ProvinsisToolbar, ProvinsisTable, ProvinsiAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport mockDataSettingProvinsi from './dataSettingprovinsi';\r\nimport { urlProv,urlDeleteProv } from 'kumpulanUrl';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst ProvinsiList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getProv() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(provinsis);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id_provinsi) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_provinsi: id_provinsi\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        getProv()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteProvinsi=async (e, id) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const SettingProvinsi=useState(mockDataSettingProvinsi);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsisSelect) => {\r\n    deleteProv(rowProvinsisSelect.id_provinsi).then(Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getProv}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowProvinsisSelect} rowSelect={rowProvinsisSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Provinsi</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <ProvinsisTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          provinsis = {provinsis}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteProvinsi={deleteProvinsi}\r\n          SettingProvinsi={SettingProvinsi}\r\n          provinsisExport={provinsisExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(ProvinsiAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ProvinsiList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport { urlDeleteKel } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n// import { array } from 'yargs';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KelurahansTable =props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,\r\n    handleDelete,\r\n    textfind,\r\n    order, orderBy, SettingKelurahan,\r\n    provinsisExport, filteredItems, handleOpen, selectedKelurahans,\r\n    setSelectedKelurahans,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\nconst deleteKel = async (e,selectedKelurahans) => {\r\n  let url = urlDeleteKel;\r\n  let response = axios.delete(url + `/${selectedKelurahans.id_kelurahan}`)\r\n  console.log(selectedKelurahans.id_kelurahan)\r\n\r\n  if (response === 200) {\r\n    thisClickedFunda.closest(columns).remove();\r\n    console.log(response.data.data)\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name:'Nama Provinsi',\r\n      selector:'nama_provinsi',\r\n      sortable:true,\r\n    },    {\r\n      name:'Nama Kabupaten',\r\n      selector:'nama_kabupaten',\r\n      sortable:true,\r\n    },\r\n    {\r\n      name:'Nama Kecamatan',\r\n      selector:'nama_kecamatan',\r\n      sortable:true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true, \r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kelurahan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\" id=\"edit\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kelurahan\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kelurahan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\" id=\"delete\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kelurahan\")}  ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button className=\"btn btn-sm btn-primary\" id=\"add\" onClick={(e) => handleOpen(e,[], \"Tambah Kelurahan\")}>\r\n        <AddIcon />\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelurahan\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedKelurahans_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedKelurahans_var=provinsis.map(provinsi => id);\r\n    } else {\r\n      selectedKelurahans_var=[];\r\n    }\r\n\r\n    setSelectedKelurahans(selectedKelurahans_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedKelurahans.indexOf(id);\r\n    let newSelectedKelurahans=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans.slice(1));\r\n    } else if (selectedIndex===selectedKelurahans.length-1) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(selectedKelurahans.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedKelurahans=newSelectedKelurahans.concat(\r\n        selectedKelurahans.slice(0, selectedIndex),\r\n        selectedKelurahans.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedKelurahans(newSelectedKelurahans);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kelurahan List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahansTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KelurahansTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKab, urlKec, urlProv, urlShowKab,urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate, { async } from 'validate.js';\r\nimport Swal from 'sweetalert2'\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema = {\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kelurahan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelurahanAddModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n   const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\nasync function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n     \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv()\r\n    showKecamatan(rowSelect.id_kabupaten)\r\n    showKab(rowSelect.id_provinsi)\r\n    // getKab()\r\n    // getKec()\r\n\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors = validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    const userName = localStorage.getItem('username');\r\n    let url = urlAddKel;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"nama_kelurahan\": rowSelect.nama_kelurahan,\r\n      \"IsActive\": rowSelect.IsActive,\r\n      \r\n    }\r\n    if (rowSelect.id_kelurahan === undefined) {\r\n      url = urlAddKel;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url = urlEditKel;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n    // console.log(varJson)\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      return tester.json();\r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester.message)\r\n      getDataBackend();\r\n      if (url == urlAddKel) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditKel){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      then(\r\n        handleClose()\r\n        )\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n      .catch((e) => {\r\n          alert(e.message)\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kelurahan== undefined ? \"Tambah Kelurahan\" : \"Ubah Kelurahan\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri') ? formState.errors.KodeDepdagri[0] : null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect && rowSelect.KodeDepdagri ? rowSelect.KodeDepdagri : ''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Grid\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n              \r\n             \r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"nama_kelurahan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kelurahan') ? formState.errors.nama_kelurahan[0] : null\r\n                }\r\n\r\n                error={hasError('nama_kelurahan')}\r\n\r\n                defaultValue={rowSelect && rowSelect.nama_kelurahan ? rowSelect.nama_kelurahan : ''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect && rowSelect.IsActive ? rowSelect.IsActive : ''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahanAddModi.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default KelurahanAddModi;","//import uuid from 'uuid/v1';\r\n\r\nexport default\r\n  {\r\n    TitleModule: \"Daftar Kelurahan\",\r\n    HeaderData:\r\n      [\r\n        // { id: 'keyId', label: 'Propinsi ID', flagDisplay: 1 },\r\n        // { id: 'kdProvinsi', label: 'Kode Propinsi', flagDisplay: 1 },\r\n        { id: 'nmKelurahan', label: 'Kelurahan', flagDisplay: 1 },\r\n        { id: 'latitude', label: 'Latitude', flagDisplay: 1 },\r\n        { id: 'longitude', label: 'Longitude', flagDisplay: 1 },\r\n        { id: 'status', label: 'Status', flagDisplay: 1 },\r\n      ],\r\n  }\r\n;\r\n","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { ProvinsisToolbar, KelurahansTable, KelurahanAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport mockDataSettingKelurahan from './dataSettingkelurahan';\r\nimport { urlKel, urlAddKel, urlEditKel, urlDeleteKel} from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport { get } from 'underscore';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KelurahanList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahans);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahans(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelurahans([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKel = async (id_kelurahan) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kelurahan: id_kelurahan\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahans(data.data);\r\n        setFilteredItems(data.data);\r\n        getKel()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelurahans([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingKelurahan[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setKelurahansExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingKelurahan[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingKelurahan[0].TitleModule).length)/2\r\n      doc.text(SettingKelurahan[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('kelurahan.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setKelurahanfind(e.target.value)\r\n      let kelurahans4=kelurahans.filter(function (entry) {\r\n        return entry&&entry.nama_kelurahan&&\r\n          ((entry.nama_kelurahan!==null? entry.nama_kelurahan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kelurahans4)? kelurahans4:[kelurahans4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kelurahans);\r\n    }\r\n    setKelurahanfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [kelurahans, setKelurahans]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowKelurahansSelect, setRowKelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedKelurahans, setSelectedKelurahans]=useState([]);\r\n  const [kelurahansExport, setKelurahansExport]=useState([]);\r\n  const [kelurahanfind, setKelurahanfind]=useState([]);\r\n\r\n  const SettingKelurahan=useState(mockDataSettingKelurahan);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedKelurahans({\r\n      ...setSelectedKelurahans,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmKelurahan, kdKelurahan, status, keyId) => {\r\n    setRowKelurahanSelect({\r\n      ...selectedKelurahans,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdKelurahan']: kdKelurahan,\r\n      ['nmKelurahan']: nmKelurahan,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowKelurahan, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowKelurahanSelect(rowKelurahan);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowKelurahanSelect(rowKelurahan);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e, rowKelurahansSelect)=>{\r\n    deleteKel(rowKelurahansSelect.id_kelurahan)\r\n    \r\n  }\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowKelurahanSelect} rowSelect={rowKelurahansSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose}\r\n        ComponenAddModi={componenPopup}></ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelurahan</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={kelurahanfind} deleteKelurahan={deleteKelurahan}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kelurahans={kelurahans}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelurahansTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          kelurahans = {kelurahans}\r\n          onChange={onChangefind}\r\n          handleDelete={handleDelete}\r\n          SettingKelurahan={SettingKelurahan}\r\n          kelurahansExport={kelurahansExport}\r\n          filteredItems={filteredItems}\r\n          selectedKelurahans={selectedKelurahans} \r\n          handleOpen={handleOpen}\r\n          setSelectedKelurahans={setSelectedKelurahans}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n        {popupComponen(KelurahanAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KelurahanList;","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily: {\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKabupatenTable = props => {\r\n  const {\r\n    kab,\r\n    setKab,\r\n    className, handleDelete,\r\n    textfind, kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest } = props;\r\n\r\n\r\n  const [filterText, setFilterText] = React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [laporKab, setLaporKab] = useState([])\r\n  const [prov, setProv] = useState([]);\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n\r\n\r\n  const handleSearch = (event) => {\r\n    const userId = localStorage.getItem('user_id');\r\n    let url = urlAddKec;\r\n    if (rowSelect.id_kecamatan === undefined) {\r\n      url = urlShowKab;\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n        \"id_kecamatan\": rowSelect.id_kecamatan,\r\n        \"id_kabupaten\": rowSelect.id_kabupaten,\r\n        \"nama_kabupaten\": rowSelect.nama_kabupaten,\r\n        \"IsActive\": rowSelect.IsActive,\r\n      })\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    alert(url);\r\n    const response = fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })/**/\r\n\r\n      .then(res => {\r\n        //console.log(res)\r\n        //console.log(res.data)\r\n        alert(res.message)\r\n\r\n        handleClose();\r\n        getDataBackend();\r\n        //alert(\"Sukses\")\r\n        const data = res;\r\n      })\r\n      .catch((e) => {\r\n\r\n        swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const customStyles = {\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n  const handleChangeProvinsi = event => {\r\n    handleChange(event)\r\n    alert('kabupaten')\r\n    showKab(event.target.value)\r\n  }\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    // const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      // isValid: errors? false:true,\r\n      // errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    // showKab(event.target.value)\r\n  }\r\n\r\n\r\n  async function getLaporanKab() {\r\n    const requestOptions = {\r\n      method: 'get',\r\n      // mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setLaporKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(e);\r\n        setLaporKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Network Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getProv()\r\n    // alert('ini prov')\r\n  }, [rowSelect])\r\n  const columns = [\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Kabupaten',\r\n      selector: 'Nama_Kabupaten',\r\n      font: 'Poppins',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Rw',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    }, {\r\n      name: 'Jumlah Rt',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return  <div class=\"form-group\">\r\n    <div class=\"col-md-6\">\r\n      <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n        <img src=\"/img/xls.jpeg\" />\r\n      </Button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll = event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var = provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var = [];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n\r\n    const selectedIndex = selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex === 0) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex === selectedkabupaten.length - 1) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newselectedkabupaten = newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Jumlah Wilayah\" : \"Jumlah Wilayah Di \" + rowSelect.nama_provinsi}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKabupatenTable.propTypes = {\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKabupatenTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  // KodeDepdagri: {\r\n  //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n  //   //email: true,\r\n  //   length: {\r\n  //     maximum: 200\r\n  //   }\r\n  // },\r\n  // nama_kecamatan: {\r\n  //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n  //   //email: true,\r\n  //   length: {\r\n  //     maximum: 200\r\n  //   }\r\n  // },\r\n  // IsActive: {\r\n  //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n  //   //email: true,\r\n  //   /* length: {\r\n  //      maximum: 1\r\n  //    }*/\r\n  // },\r\n  // /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(prov,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Provinsi =\", prov)\r\n    }\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    getDataBackend(rowSelect)\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  const pencarian = (paramProv, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramProv.filter((entry) => {\r\n      return entry&&entry.id_provinsi &&(entry.id_provinsi === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_provinsi)\r\n    // alert(\"result = \" + result[0].nama_provinsi)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Wilayah Kabupaten\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanAddModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KabupatenSearchModi, LaporanKabupatenTable} from '../LaporanKabupaten/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKabupaten=props => {\r\n\r\n\r\n  async function showKab(rowkabupatenSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    // setFilteredItems(kabupaten);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_provinsi\": rowkabupatenSelect.id_provinsi,\r\n          // \"id_kabupaten\": rowkabupatenSelect.id_kabupaten,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKab=urlShowsKab\r\n    // console.log(urlgetKab)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKab, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKabupaten=(e) => {\r\n    const selectedkabupaten_string=selectedkabupaten.join(\"<batas></batas>\");\r\n    let kabupaten3=kabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkabupaten_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kabupaten3)\r\n    setkabupaten(kabupaten3)\r\n    setkabupatenfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkabupatenExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kabupatenExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setkabupatenfind(e.target.value)\r\n      let kabupaten4=kabupaten.filter(function (entry) {\r\n        return entry&&entry.Nama_Kabupaten&&\r\n          ((entry.Nama_Kabupaten!==null? entry.Nama_Kabupaten:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kabupaten4)? kabupaten4:[kabupaten4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kabupaten);\r\n    }\r\n    setkabupatenfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkabupatenSelect, setRowkabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkabupaten, setSelectedkabupaten]=useState([]);\r\n  const [kabupatenExport, setkabupatenExport]=useState([]);\r\n  const [kabupatenfind, setkabupatenfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkabupaten({\r\n      ...setSelectedkabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkabupatenSelect({\r\n      ...selectedkabupaten,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('kabupaten =',data.data)\r\n  //       setkabupaten(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setkabupaten([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowKabupaten, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkabupatenSelect(rowKabupaten);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowKabupaten, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowkabupatenSelect(rowKabupaten);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkabupatenSelect(rowKabupaten);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent \r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Kabupaten</h5>\r\n      {/*}\r\n      <kabupatenToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kabupaten={kabupaten}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KabupatenSearchModi\r\n        getDataBackend={showKab}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        />\r\n        <LaporanKabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowkabupatenSelect}\r\n          kabupaten={kabupaten}\r\n          kab={kab}\r\n          setKab={setKab}\r\n          handleDelete={handleDelete}\r\n        // textfind={kabupatenfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          kabupatenExport={kabupatenExport}\r\n          kabupatenfind={kabupatenfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n          selectedkabupaten={selectedkabupaten} \r\n          kabupatenfind={kabupatenfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkabupaten={setSelectedkabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n      {popupComponen(KabupatenSearchModi)}\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKabupaten;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanPerKabupatenTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanPerKabupatenTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    rowSelect,setRowSelect,\r\n    setselectedkecamatan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKab,\r\n    kab\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n    \r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Jumlah Wilayah Kab/Kota\" : \"Jumlah Wilayah Kab/Kota \" +rowSelect.nama_kabupaten}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanPerKabupatenTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanPerKabupatenTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab, urlLaporanPerKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema = {\r\n\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PerKabupatenSearchModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, setKab, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n  const [perKabupaten, setPerKabupaten] = useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [prov, setProv] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n// Menggunakan ShowKab Biasa\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setKab([]);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showPerKab(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlLaporanPerKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setPerKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setPerKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll = urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setPerKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()  \r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    // const errors=validate(rowSelect, schema);\r\n\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      // isValid: errors? false:true,\r\n      // errors: errors||{}\r\n    }));\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kabupaten,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kabupaten =\", kabupaten)\r\n    }\r\n  }\r\n\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry&&entry.id_kabupaten &&(entry.id_kabupaten === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kabupaten)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKabupatenSearchModi.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PerKabupatenSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanPerKabupatenTable, PerKabupatenSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlLaporanKec,urlShowKec,urlLaporanPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerKabupaten=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getPerKab() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKabupaten);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlLaporanKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showPerKab(rowPerKabupatenSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKabupaten);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kabupaten\": rowPerKabupatenSelect.id_kabupaten,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n// Menggunakan Having Clause Di Back-end\r\n    let urlgetKec=urlLaporanPerKab\r\n    // console.log(urlgetKec)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedkecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=perKabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setPerKabupaten(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=perKabupaten.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(perKabupaten);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [perKabupaten, setPerKabupaten]=useState([]);\r\n  const [kab,setKab] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerKabupatenSelect, setRowPerKabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedPerKabupaten]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getPerKab();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerKabupaten({\r\n      ...setSelectedPerKabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerKabupatenSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerKabupatenSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerKabupatenSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerKabupatenSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getPerKab}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerKabupatenSelect} rowSelect={rowPerKabupatenSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Laporan Wilayah Per Kabupaten</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        perKabupaten={perKabupaten}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <PerKabupatenSearchModi\r\n          getDataBackend={showPerKab}\r\n          setKab={setKab}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerKabupatenSelect} rowSelect={rowPerKabupatenSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanPerKabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKab={setKab}\r\n          kab={kab}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerKabupatenSelect} \r\n          rowSelect={rowPerKabupatenSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          handleOpen={handleOpen}\r\n          setSelectedPerKabupaten={setSelectedPerKabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(PerKabupatenSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerKabupaten;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanPerKecamatanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanPerKecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    rowSelect,setRowSelect,\r\n    setselectedkecamatan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKab,\r\n    kab\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kecamatan == undefined ? \"Jumlah Wilayah di Kecamatan\" : \"Jumlah Wilayah di Kecamatan \" +rowSelect.nama_kecamatan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanPerKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanPerKecamatanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab,urlLaporanPerKab,urlShowPerKec, urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350', \r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PerKecamatanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title,setKec, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [perKabupaten, setPerKabupaten]=useState([]);\r\n  const [kabupaten, setKabupaten]=useState([]);\r\n  const [perKecamatan,setPerKecamatan]=useState([])\r\n  const [kecamatan,setKecamatan]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kecamatan =',data.data)\r\n        setKec(data.data);\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setKec([]);\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKec(data.data);\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setKec([]);\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showPerKec(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowPerKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Kecamatan =',data.data)\r\n        setPerKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"err\");\r\n        setPerKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  // async function getKab() {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'get',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //   };\r\n\r\n  //   let urlGetKabAll=urlKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlGetKabAll, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       setPerKabupaten(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setPerKabupaten([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()  \r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    // const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      // isValid: errors? false:true,\r\n      // errors: errors||{}\r\n    }));\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kecamatan\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kecamatan,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_kec) => {\r\n    let value = id_kec\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n      return entry&&entry.id_kecamatan &&(entry.id_kecamatan === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kecamatan\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n        \r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKecamatanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PerKecamatanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanPerKecamatanTable, PerKecamatanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlLaporanKec,urlShowKec,urlLaporanPerKab,urlShowPerKec } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerKecamatan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getPerKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlLaporanKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showPerKec(rowPerKecamatanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowPerKecamatanSelect.id_kecamatan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowPerKec\r\n    // console.log(url)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedPerKecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=perKecamatan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setPerKecamatan(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=perKecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(perKecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [perKecamatan, setPerKecamatan]=useState([]);\r\n  const [kec,setKec] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerKecamatanSelect, setRowPerKecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerKecamatan, setSelectedPerKabupaten]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getPerKec();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerKabupaten({\r\n      ...setSelectedPerKabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerKecamatanSelect({\r\n      ...selectedPerKecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerKecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getPerKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Laporan Wilayah Per Kabupaten</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        perKecamatan={perKecamatan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <PerKecamatanSearchModi\r\n          getDataBackend={showPerKec}\r\n          setKec={setKec}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanPerKecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKec={setKec}\r\n          kec={kec}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerKecamatanSelect} \r\n          rowSelect={rowPerKecamatanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerKecamatan={selectedPerKecamatan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedPerKabupaten={setSelectedPerKabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(PerKecamatanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerKecamatan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanKecamatanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    rowSelect,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    setselectedkecamatan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'Nama_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        {/* <Button onClick={(e) => handleOpen(e, [],)}>\r\n          <SearchIcon/>\r\n        </Button> */}\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        {/* <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kecamatan\"\r\n          textfind={textfind}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Jumlah Wilayah\" : \"Laporan Jumlah Wilayah \" + rowSelect.nama_kabupaten }\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kecamatan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKecamatanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kabupaten,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kabupaten =\", kabupaten)\r\n    }\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    // console.log(\"Rs =\".rowSelect)\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  \r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry&&entry.id_kabupaten &&(entry.id_kabupaten === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kabupaten)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n        \r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKecamatanTable, KecamatanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlLaporanKec,urlShowKecs } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKecamatan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      // mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlLaporanKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKec(rowkecamatanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kabupaten\": rowkecamatanSelect.id_kabupaten,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlShowKecs\r\n    // console.log(urlgetKec)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedkecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=kecamatan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setkecamatan(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=kecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkecamatanSelect, setRowkecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedkecamatan]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKec();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkecamatan({\r\n      ...setSelectedkecamatan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkecamatanSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowkecamatanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kecamatan</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kecamatan={kecamatan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KecamatanSearchModi\r\n          getDataBackend={showKec}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanKecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowkecamatanSelect}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkecamatan={setSelectedkecamatan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KecamatanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKecamatan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import LaporanKelurahanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKelurahanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kelurahanfind,\r\n    order, orderBy,\r\n    kelurahanExport, filteredItems, handleOpen, selectedkelurahan,\r\n    setselectedkelurahan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'Nama_Kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        {/* <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelurahan\"\r\n          textfind={textfind}\r\n        /> */}\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkelurahan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkelurahan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkelurahan_var=[];\r\n    }\r\n\r\n    setselectedkelurahan(selectedkelurahan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkelurahan.indexOf(id);\r\n    let newselectedkelurahan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(selectedkelurahan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(selectedkelurahan.slice(1));\r\n    } else if (selectedIndex===selectedkelurahan.length-1) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(selectedkelurahan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkelurahan=newselectedkelurahan.concat(\r\n        selectedkelurahan.slice(0, selectedIndex),\r\n        selectedkelurahan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkelurahan(newselectedkelurahan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Jumlah Wilayah Kelurahan\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKelurahanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKelurahanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelurahanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kecamatan =',data.data)\r\n        setkecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userId=localStorage.getItem('user_id');\r\n    let url=urlAddKel;\r\n    if (rowSelect.id_kelurahan===undefined) {\r\n      url=urlAddKel;\r\n    } else {\r\n      url=urlEditKel;\r\n    }\r\n\r\n    //console.log(body);\r\n    getDataBackend(rowSelect)\r\n\r\n    // const requestOptions={\r\n    //   method: 'POST',\r\n    //   mode: \"cors\",\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({\r\n    //     \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n    //     \"id_kelurahan\": rowSelect.id_kelurahan,\r\n    //     \"id_kabupaten\": rowSelect.id_kabupaten,\r\n    //     \"nama_kelurahan\": rowSelect.nama_kelurahan,\r\n    //     \"IsActive\": rowSelect.IsActive,\r\n    //   })\r\n    // };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // const response=fetch(url,)\r\n    //   .then(res => {\r\n    //     return res.json();\r\n    //   })/**/\r\n\r\n    //   .then(res => {\r\n    //     //console.log(res)\r\n    //     //console.log(res.data)\r\n    //     alert(res.message)\r\n\r\n    //     handleClose();\r\n    //     getDataBackend();\r\n    //     //alert(\"Sukses\")\r\n    //     const data=res;\r\n    //   })\r\n    //   .catch((e) => {\r\n\r\n    //     swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n    //     return false;\r\n\r\n\r\n    //   });\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelurahanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KelurahanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKelurahanTable, KelurahanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKel,urlAddKel,urlEditKel,urlLaporanKel,urlShowKel } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKelurahan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      // mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKel(rowkelurahanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kelurahan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowkelurahanSelect.id_kecamatan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanKel\r\n    // alert(urlgetKel)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKelurahan=(e) => {\r\n    const selectedkelurahan_string=selectedkelurahan.join(\"<batas></batas>\");\r\n    let kelurahan3=kelurahan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkelurahan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kelurahan3)\r\n    setkelurahan(kelurahan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkelurahanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kelurahan4=kelurahan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kelurahan4)? kelurahan4:[kelurahan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kelurahan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [kelurahan, setkelurahan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkelurahanSelect, setRowkelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkelurahan, setSelectedkelurahan]=useState([]);\r\n  const [kelurahanExport, setkelurahanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkelurahan({\r\n      ...setSelectedkelurahan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkelurahanSelect({\r\n      ...selectedkelurahan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkelurahanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowkelurahanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkelurahanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkelurahanSelect} rowSelect={rowkelurahanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelurahan</h5>\r\n      {/*}\r\n      <kelurahanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kelurahan={kelurahan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelurahanSearchModi\r\n          getDataBackend={showKel}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowkelurahanSelect} rowSelect={rowkelurahanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <LaporanKelurahanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kelurahanExport={kelurahanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkelurahan={selectedkelurahan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkelurahan={setSelectedkelurahan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KelurahanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKelurahan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import PerKelurahanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst PerKelurahanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Perkelurahanfind,\r\n    order, orderBy,\r\n    PerkelurahanExport, filteredItems, handleOpen, selectedPerkelurahan,\r\n    rowSelect,setRowSelect,\r\n    setselectedPerkelurahan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKel,\r\n    kel\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[   \r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedPerkelurahan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedPerkelurahan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedPerkelurahan_var=[];\r\n    }\r\n\r\n    setselectedPerkelurahan(selectedPerkelurahan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedPerkelurahan.indexOf(id);\r\n    let newselectedPerkelurahan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(1));\r\n    } else if (selectedIndex===selectedPerkelurahan.length-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(\r\n        selectedPerkelurahan.slice(0, selectedIndex),\r\n        selectedPerkelurahan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedPerkelurahan(newselectedPerkelurahan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kelurahan == undefined ? \"Jumlah Wilayah Kelurahan\" : \"Jumlah Wilayah Kelurahan \" +rowSelect.nama_kelurahan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKelurahanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PerKelurahanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  \r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  \r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PerKelurahanSearchModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelurahan, setkelurahan]=useState([]);\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setkelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kecamatan =',data.data)\r\n        setkecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv()\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\",\"nama\")\r\n    if (event.target.name == \"id_kelurahan\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n         [nama]:pencarian(kelurahan,event.target.value),\r\n         [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kelurahan =\", kelurahan)\r\n    }\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    //console.log(body);\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kel) => {\r\n    let value = id_kel\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry&&entry.id_kelurahan &&(entry.id_kelurahan === value) \r\n    });\r\n    // console.log(\"result =\",result[0].nama_kelurahan)\r\n    // alert(\"result = \" + result[0].nama_kelurahan)\r\n    return result[0].nama_kelurahan\r\n  }\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Wilayah\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelurahan.map(option => (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPerKelurahanSearchModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PerKelurahanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { PerKelurahanTable, PerKelurahanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKel,urlAddKel,urlEditKel,urlLaporanPerKel,urlShowKel } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerKelurahan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanPerKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKel(rowPerkelurahanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowPerkelurahanSelect.id_kecamatan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlLaporanPerKel\r\n    alert(urlgetKel)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletePerKelurahan=(e) => {\r\n    const selectedPerkelurahan_string=selectedPerkelurahan.join(\"<batas></batas>\");\r\n    let Perkelurahan3=Perkelurahan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedPerkelurahan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(Perkelurahan3)\r\n    setPerkelurahan(Perkelurahan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setPerkelurahanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#PerkelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let Perkelurahan4=Perkelurahan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Perkelurahan4)? Perkelurahan4:[Perkelurahan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Perkelurahan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [Perkelurahan, setPerkelurahan]=useState([]);\r\n  const [kel,setKel] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerkelurahanSelect, setRowPerkelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerkelurahan, setSelectedPerkelurahan]=useState([]);\r\n  const [PerkelurahanExport, setPerkelurahanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerkelurahan({\r\n      ...setSelectedPerkelurahan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerkelurahanSelect({\r\n      ...selectedPerkelurahan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerkelurahanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>PerKelurahan</h5>\r\n      {/*}\r\n      <PerkelurahanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Perkelurahan={Perkelurahan}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <PerKelurahanSearchModi\r\n          getDataBackend={showKel}\r\n          setKel={setKel}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n        <PerKelurahanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKel={setKel}\r\n          kel={kel}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          PerkelurahanExport={PerkelurahanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerkelurahanSelect} \r\n          rowSelect={rowPerkelurahanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerkelurahan={selectedPerkelurahan} \r\n          handleOpen={handleOpen}\r\n          setSelectedPerkelurahan={setSelectedPerkelurahan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(PerKelurahanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerKelurahan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst SensusKelurahanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Perkelurahanfind,\r\n    order, orderBy,\r\n    PerkelurahanExport, filteredItems, handleOpen, selectedPerkelurahan,\r\n    rowSelect,setRowSelect,\r\n    setselectedPerkelurahan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKel,\r\n    kel\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[   \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'jumRW',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'jumRT',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedPerkelurahan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedPerkelurahan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedPerkelurahan_var=[];\r\n    }\r\n\r\n    setselectedPerkelurahan(selectedPerkelurahan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedPerkelurahan.indexOf(id);\r\n    let newselectedPerkelurahan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(1));\r\n    } else if (selectedIndex===selectedPerkelurahan.length-1) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(selectedPerkelurahan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedPerkelurahan=newselectedPerkelurahan.concat(\r\n        selectedPerkelurahan.slice(0, selectedIndex),\r\n        selectedPerkelurahan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedPerkelurahan(newselectedPerkelurahan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kelurahan == undefined ? \"Laporan Target Sensus di Kelurahan\" : \"Laporan Target Sensus di Kelurahan \" +rowSelect.nama_kelurahan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kelurahan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSensusKelurahanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SensusKelurahanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKel, urlEditKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel,urlShowTargetKkPerProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from '../../../../components';\r\nconst schema = {\r\n\r\n\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SensusPerKelurahanSearchModi = props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const schema={\r\n    id_kelurahan: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  }\r\n\r\n  const [values, setValues] = useState({});\r\n  const [getStatus, setStatus] = useState([]);\r\n  const [getKeyId, setKeyId] = useState([]);\r\n  const [kelurahan, setkelurahan] = useState([]);\r\n  const [kecamatan, setkecamatan] = useState([]);\r\n  const [kabupaten, setkabupaten] = useState([]);\r\n  const [prov, setProv] = useState([]);\r\n\r\n  const status = [\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kelurahan =', data.data)\r\n        setkelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKec(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setkecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangePeriode = event => {\r\n      handleChange(event)\r\n      showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChangeProvinsi = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChangeKabupaten = event => {\r\n    handleChange(event)\r\n    showKec(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan = event => {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kelurahan\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kelurahan, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket Kelurahan =\", kelurahan)\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave = (event) => {\r\n    //console.log(body);\r\n    getDataBackend(rowSelect)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kel) => {\r\n    let value = id_kel\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kelurahan && (entry.id_kelurahan === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kelurahan)\r\n    // alert(\"result = \" + result[0].nama_kelurahan)\r\n    return result[0].nama_kelurahan\r\n  }\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChangePeriode}\r\n                rowSelect={rowSelect}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelurahan.map(option => (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSensusPerKelurahanSearchModi.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default SensusPerKelurahanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { SensusKelurahanTable, SensusPerKelurahanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKel,urlAddKel,urlEditKel,urlShowLaporanSensusPerKel } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerKelurahan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKel() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlShowLaporanSensusPerKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showKel(rowPerkelurahanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Perkelurahan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowPerkelurahanSelect.Periode_Sensus,\r\n          \"id_kelurahan\": rowPerkelurahanSelect.id_kelurahan,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKel=urlShowLaporanSensusPerKel\r\n    // alert(urlgetKel)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(urlgetKel, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerkelurahan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerkelurahan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletePerKelurahan=(e) => {\r\n    const selectedPerkelurahan_string=selectedPerkelurahan.join(\"<batas></batas>\");\r\n    let Perkelurahan3=Perkelurahan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedPerkelurahan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(Perkelurahan3)\r\n    setPerkelurahan(Perkelurahan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setPerkelurahanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#PerkelurahanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let Perkelurahan4=Perkelurahan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Perkelurahan4)? Perkelurahan4:[Perkelurahan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Perkelurahan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [Perkelurahan, setPerkelurahan]=useState([]);\r\n  const [kel,setKel] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerkelurahanSelect, setRowPerkelurahanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerkelurahan, setSelectedPerkelurahan]=useState([]);\r\n  const [PerkelurahanExport, setPerkelurahanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKel();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerkelurahan({\r\n      ...setSelectedPerkelurahan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerkelurahanSelect({\r\n      ...selectedPerkelurahan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerkelurahanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerkelurahanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKel}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>PerKelurahan</h5>\r\n      {/*}\r\n      <PerkelurahanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Perkelurahan={Perkelurahan}\r\n\r\n      />\r\n  {*/}\r\n      <SensusPerKelurahanSearchModi\r\n          getDataBackend={showKel}\r\n          setKel={setKel}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerkelurahanSelect} rowSelect={rowPerkelurahanSelect}\r\n          title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <SensusKelurahanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKel={setKel}\r\n          kel={kel}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          PerkelurahanExport={PerkelurahanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerkelurahanSelect} \r\n          rowSelect={rowPerkelurahanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerkelurahan={selectedPerkelurahan} \r\n          handleOpen={handleOpen}\r\n          setSelectedPerkelurahan={setSelectedPerkelurahan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(SensusPerKelurahanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerKelurahan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n// import SensusKecamatanTable from '.';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst SensusKecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    rowSelect,setRowSelect,\r\n    setselectedkecamatan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    setKab,\r\n    kab\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_kecamatan == undefined ? \"Laporan Target Sensus di Kecamatan\" : \"laporan Target Sensus di Kecamatan \" +rowSelect.nama_kecamatan}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSensusKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SensusKecamatanTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField,\r\n\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowTargetKkPerProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from '../../../../components';\r\nconst schema = {\r\n    id_kecamatan: {\r\n        presence: { allowEmpty: false, message: 'harus diisi' },\r\n      },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green,\r\n        '&:hover': {\r\n            backgroundColor: '#4caf50',\r\n            borderColor: '#66bb6a',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n    buttonCancel: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.red,\r\n        '&:hover': {\r\n            backgroundColor: '#f44336',\r\n            borderColor: '#ef5350',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SensusPerKecamatanSearchModi = props => {\r\n    const { className, setData, getDataBackend, setRowSelect, rowSelect, title, setKec, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [getStatus, setStatus] = useState([]);\r\n    const [getKeyId, setKeyId] = useState([]);\r\n    const [perKabupaten, setPerKabupaten] = useState([]);\r\n    const [kabupaten, setKabupaten] = useState([]);\r\n    const [perKecamatan, setPerKecamatan] = useState([])\r\n    const [kecamatan, setKecamatan] = useState([]);\r\n    const [prov, setProv] = useState([]);\r\n\r\n    const status = [\r\n        {\r\n            value: '1',\r\n            label: 'Active'\r\n        },\r\n        {\r\n            value: '0',\r\n            label: 'Inactive'\r\n        }\r\n\r\n\r\n    ];\r\n    const [formState, setFormState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {}\r\n    });\r\n\r\n    async function showKec(id_kabupaten) {\r\n        /* */\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            //mode: \"cors\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"id_kabupaten\": id_kabupaten,\r\n            })\r\n        };\r\n\r\n        let urlShow = urlShowKec\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response = await fetch(urlShow, requestOptions)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n\r\n            .then(resJson => {\r\n                const data = resJson;\r\n                // console.log('kecamatan =', data.data)\r\n                setKec(data.data);\r\n                setKecamatan(data.data);\r\n                //return false;\r\n            })\r\n            .catch(e => {\r\n                //console.log(e);\r\n                // alert(\"err\");\r\n                setKec([]);\r\n                setKecamatan([]);\r\n                //this.setState({ ...this.state, isFetching: false });\r\n            });\r\n    }\r\n\r\n    async function showKab(id_provinsi) {\r\n        /* */\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            //mode: \"cors\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"id_provinsi\": id_provinsi,\r\n            })\r\n        };\r\n\r\n        let urlShow = urlShowKab\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response = await fetch(urlShow, requestOptions)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n\r\n            .then(resJson => {\r\n                const data = resJson;\r\n                // console.log('kabupaten =', data.data)\r\n                setKec(data.data);\r\n                setKabupaten(data.data);\r\n                //return false;\r\n            })\r\n            .catch(e => {\r\n                //console.log(e);\r\n                // alert(\"err\");\r\n                setKec([]);\r\n                setKabupaten([]);\r\n                //this.setState({ ...this.state, isFetching: false });\r\n            });\r\n    }\r\n\r\n    async function showTargetKkPerProv(Periode_Sensus) {\r\n        /* */\r\n        const requestOptions = {\r\n          method: 'POST',\r\n          mode: \"cors\",\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            \"Periode_Sensus\": Periode_Sensus,\r\n          })\r\n        };\r\n    \r\n        let urlShow = urlShowTargetKkPerProv\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response = await fetch(urlShow, requestOptions)\r\n          .then(res => {\r\n            return res.json();\r\n          })\r\n    \r\n          .then(resJson => {\r\n            const data = resJson;\r\n            setProv(data.data);\r\n            //return false;\r\n          })\r\n          .catch(e => {\r\n            //console.log(e);\r\n    \r\n            setProv([]);\r\n            //this.setState({ ...this.state, isFetching: false });\r\n          });\r\n      }\r\n\r\n    // async function getKab() {\r\n    //   /* */\r\n    //   const requestOptions={\r\n    //     method: 'get',\r\n    //     //mode: \"cors\",\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //   };\r\n\r\n    //   let urlGetKabAll=urlKab\r\n    //   // eslint-disable-next-line no-useless-concat\r\n    //   const response=await fetch(urlGetKabAll, requestOptions)\r\n    //     .then(res => {\r\n    //       return res.json();\r\n    //     })\r\n\r\n    //     .then(resJson => {\r\n    //       const data=resJson;\r\n    //       setPerKabupaten(data.data);\r\n    //       //return false;\r\n    //     })\r\n    //     .catch(e => {\r\n    //       //console.log(e);\r\n    //       alert(\"Nextwork Error\");\r\n    //       setPerKabupaten([]);\r\n    //       //this.setState({ ...this.state, isFetching: false });\r\n    //     });\r\n    // }\r\n\r\n\r\n    ///  const mapRef=createRef();\r\n\r\n    useEffect(() => {\r\n        const errors = validate(rowSelect, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n        // console.log(\"formState\", formState)\r\n\r\n\r\n        //   alert(setOpen)\r\n    }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n    const handleChangePeriode = event => {\r\n        handleChange(event)\r\n        showTargetKkPerProv(event.target.value)\r\n    }\r\n    const handleChangeProvinsi = event => {\r\n        handleChange(event)\r\n        showKab(event.target.value)\r\n    }\r\n    const handleChangeKabupaten = event => {\r\n        handleChange(event)\r\n        showKec(event.target.value)\r\n    }\r\n\r\n    const handleChange = event => {\r\n\r\n        //    event.persist();\r\n\r\n        // const errors=validate(rowSelect, schema);\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            // isValid: errors? false:true,\r\n            // errors: errors||{}\r\n        }));\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [event.target.name]: event.target.value\r\n        });\r\n        let nama = event.target.name.replace(\"id\", \"nama\")\r\n        if (event.target.name == \"id_kecamatan\") {\r\n            setRowSelect({\r\n                ...rowSelect,\r\n                [nama]: pencarian(kecamatan, event.target.value),\r\n                [event.target.name]: event.target.value,\r\n            });\r\n            // console.log(\"Ket kecamatan =\", kecamatan)\r\n        }\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        getDataBackend();\r\n    }\r\n\r\n    const handleSave = (event) => {\r\n        getDataBackend(rowSelect)\r\n    }\r\n\r\n    const pencarian = (paramKec, id_kec) => {\r\n        let value = id_kec\r\n        let result = [];\r\n        // alert(value)\r\n        result = paramKec.filter((entry) => {\r\n            return entry && entry.id_kecamatan && (entry.id_kecamatan === value)\r\n        });\r\n        // console.log(\"result =\", result[0].nama_kecamatan)\r\n        // alert(\"result = \" + result[0].nama_kecamatan)\r\n        return result[0].nama_kecamatan\r\n    }\r\n\r\n\r\n    //  const position=[currentLocation.lat, currentLocation.lng]\r\n    const hasError = field => {\r\n        return formState && formState.errors && formState.errors[field] ? true : false;\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n            >\r\n                <CardHeader\r\n\r\n                    subheader=\"\"\r\n                    title=\"Search Laporan Sensus\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Grid\r\n                        container\r\n                        spacing={3}\r\n                    >\r\n\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <LapPeriode\r\n                                onChange={handleChangePeriode}\r\n                                rowSelect={rowSelect}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Provinsi\"\r\n                                margin=\"dense\"\r\n                                name=\"id_provinsi\"\r\n                                onChange={handleChangeProvinsi}\r\n                                select\r\n                                value={rowSelect.id_provinsi}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {prov.map(option => (\r\n                                    <option\r\n                                        key={option.id_provinsi}\r\n                                        value={option.id_provinsi}\r\n                                    >\r\n                                        {option.nama_provinsi}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Kabupaten\"\r\n                                margin=\"dense\"\r\n                                name=\"id_kabupaten\"\r\n                                onChange={handleChangeKabupaten}\r\n                                select\r\n                                value={rowSelect.id_kabupaten}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {kabupaten.map(option => (\r\n                                    <option\r\n                                        key={option.id_kabupaten}\r\n                                        value={option.id_kabupaten}\r\n                                    >\r\n                                        {option.nama_kabupaten}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Kecamatan\"\r\n                                margin=\"dense\"\r\n                                name=\"id_kecamatan\"\r\n                                onChange={handleChange}\r\n                                select\r\n                                value={rowSelect.id_kecamatan}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {kecamatan.map(option => (\r\n                                    <option\r\n                                        key={option.id_kecamatan}\r\n                                        value={option.id_kecamatan}\r\n                                    >\r\n                                        {option.nama_kecamatan}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            md={6}\r\n                            xs={12}\r\n                        >\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions>\r\n                    {!formState.isValid}\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={classes.buttonSuccess}\r\n                        variant=\"contained\"\r\n                        onClick={handleSave}\r\n                        disabled={!formState.isValid}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n\r\n                </CardActions>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nSensusPerKecamatanSearchModi.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default SensusPerKecamatanSearchModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { SensusKecamatanTable, SensusPerKecamatanSearchModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlAddKec,urlEditKec,urlShowLaporanSensusPerKec, } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerKecamatan=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getPerKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'post',\r\n      mode: \"cors\",\r\n\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlShowLaporanSensusPerKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function showPerKec(rowPerKecamatanSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(perKecamatan);\r\n    setOpen(false);\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"id_kecamatan\": rowPerKecamatanSelect.id_kecamatan,\r\n          \"Periode_Sensus\": rowPerKecamatanSelect.Periode_Sensus,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusPerKec\r\n    // console.log(url)\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setPerKecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setPerKecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteProv = async (id) => {\r\n    // let url = urlDeleteProv;\r\n    // try {\r\n    //   let response = await axios.delete(url+`${id}`);\r\n    // } catch {\r\n    //   e=>{\r\n    //     alert(\"error\")\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKecamatan=(e) => {\r\n    const selectedkecamatan_string=selectedPerKecamatan.join(\"<batas></batas>\");\r\n    let kecamatan3=perKecamatan.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkecamatan_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kecamatan3)\r\n    setPerKecamatan(kecamatan3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=perKecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(perKecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [perKecamatan, setPerKecamatan]=useState([]);\r\n  const [kec,setKec] = React.useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowPerKecamatanSelect, setRowPerKecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedPerKecamatan, setSelectedPerKabupaten]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getPerKec();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedPerKabupaten({\r\n      ...setSelectedPerKabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowPerKecamatanSelect({\r\n      ...selectedPerKecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowProvinsi, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowPerKecamatanSelect(rowProvinsi);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowPerKecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getPerKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n        title={title} datas={filteredItems} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Laporan Wilayah Per Kabupaten</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        perKecamatan={perKecamatan}\r\n\r\n      />\r\n  {*/}\r\n      <SensusPerKecamatanSearchModi\r\n          getDataBackend={showPerKec}\r\n          setKec={setKec}\r\n          handleChange={handleChange} setData={setData}\r\n          open={open} setRowSelect={setRowPerKecamatanSelect} rowSelect={rowPerKecamatanSelect}\r\n          title={title} datas={filteredItems}\r\n        />\r\n      <div className={classes.content}>\r\n        <SensusKecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          setKec={setKec}\r\n          kec={kec}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          setRowSelect={setRowPerKecamatanSelect} \r\n          rowSelect={rowPerKecamatanSelect}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedPerKecamatan={selectedPerKecamatan} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedPerKabupaten={setSelectedPerKabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(SensusPerKecamatanSearchModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerKecamatan;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KecamatanTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kecamatanfind,\r\n    order, orderBy,\r\n    kecamatanExport, filteredItems, handleOpen, selectedkecamatan,\r\n    setselectedkecamatan,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kecamatan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kecamatan\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kecamatan',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kecamatan\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kecamatan\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kecamatan\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkecamatan_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkecamatan_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkecamatan_var=[];\r\n    }\r\n\r\n    setselectedkecamatan(selectedkecamatan_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkecamatan.indexOf(id);\r\n    let newselectedkecamatan=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(1));\r\n    } else if (selectedIndex===selectedkecamatan.length-1) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(selectedkecamatan.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkecamatan=newselectedkecamatan.concat(\r\n        selectedkecamatan.slice(0, selectedIndex),\r\n        selectedkecamatan.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkecamatan(newselectedkecamatan);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kecamatan List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kecamatan\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KecamatanTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKec, urlEditKec, urlKab, urlProv, urlShowKab } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kecamatan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KecamatanAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  const [prov, setProv]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setkabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    // getKab()\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi)\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddKec;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"nama_kecamatan\": rowSelect.nama_kecamatan,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    if (rowSelect.id_kecamatan===undefined) {\r\n      url=urlAddKec;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKec;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddKec) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditKec){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n          // alert(e.message)\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kecamatan == undefined ? \"Tambah Kecamatan\" : \"Ubah Kecamatan\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kecamatan\"\r\n                margin=\"dense\"\r\n                name=\"nama_kecamatan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kecamatan')? formState.errors.nama_kecamatan[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kecamatan')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kecamatan? rowSelect.nama_kecamatan:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKecamatanAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KecamatanAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KecamatanTable, KecamatanAddModi } from '../KecamatanList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKec,urlDeleteKec } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KecamatanList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKec() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kecamatan);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetKec=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetKec, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKec = async (id_kecamatan) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kecamatan: id_kecamatan\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkecamatan(data.data);\r\n        setFilteredItems(data.data);\r\n        getKec()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkecamatan([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkecamatanExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kecamatanExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let kecamatan4=kecamatan.filter(function (entry) {\r\n        return entry&&entry.nama_kecamatan&&\r\n          ((entry.nama_kecamatan!==null? entry.nama_kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kecamatan4)? kecamatan4:[kecamatan4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kecamatan);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [kecamatan, setkecamatan]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkecamatanSelect, setRowkecamatanSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkecamatan, setSelectedkecamatan]=useState([]);\r\n  const [kecamatanExport, setkecamatanExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKec();\r\n    //   alert(setOpen) \r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkecamatan({\r\n      ...setSelectedkecamatan,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkecamatanSelect({\r\n      ...selectedkecamatan,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkecamatanSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowkecamatanSelect) => {\r\n    deleteKec(rowkecamatanSelect.id_kecamatan)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkecamatanSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKec}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowkecamatanSelect} rowSelect={rowkecamatanSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kecamatan</h5>\r\n      {/*}\r\n      <kecamatanToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kecamatan={kecamatan}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KecamatanTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kecamatanExport={kecamatanExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedkecamatan={selectedkecamatan} \r\n          handleOpen={handleOpen}\r\n          setSelectedkecamatan={setSelectedkecamatan}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KecamatanAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KecamatanList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KabupatenTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Kabupaten',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kabupaten\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Kabupaten',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kabupaten\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kabupaten\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kabupaten\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kabupaten List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKabupatenTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KabupatenTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKab, urlEditKab, urlKab, urlProv } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport Swal from 'sweetalert2';\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_kabupaten: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  id_provinsi: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KabupatenAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [prov, setProv] = useState([])\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getProv()\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"nama_kabupaten\": rowSelect.nama_kabupaten,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    let url=urlAddKab;\r\n    if (rowSelect.id_kabupaten===undefined) {\r\n      url=urlAddKab;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKab;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    }\r\n  \r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddKab) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditKab){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_kabupaten == undefined ? \"Tambah Kabupaten\" : \"Ubah Kabupaten\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange\r\n                \r\n                }\r\n                select\r\n\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map((option)=> (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"nama_kabupaten\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kabupaten')? formState.errors.nama_kabupaten[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kabupaten')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kabupaten? rowSelect.nama_kabupaten:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKabupatenAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default KabupatenAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { KabupatenTable, KabupatenAddModi } from '../KabupatenList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteKab, urlKab,urlProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KabupatenList=props => {\r\n\r\n  async function getKab() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(kabupaten);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKab=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKab, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteKab = async (id_kabupaten) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_kabupaten: id_kabupaten\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setkabupaten(data.data);\r\n        setFilteredItems(data.data);\r\n        getKab()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setkabupaten([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteKabupaten=(e) => {\r\n    const selectedkabupaten_string=selectedkabupaten.join(\"<batas></batas>\");\r\n    let kabupaten3=kabupaten.filter(function (entry) {\r\n      return entry&&entry.id&&selectedkabupaten_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(kabupaten3)\r\n    setkabupaten(kabupaten3)\r\n    setkabupatenfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setkabupatenExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#kabupatenExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setkabupatenfind(e.target.value)\r\n      let kabupaten4=kabupaten.filter(function (entry) {\r\n        return entry&&entry.nama_kabupaten&&\r\n          ((entry.nama_kabupaten!==null? entry.nama_kabupaten:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(kabupaten4)? kabupaten4:[kabupaten4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(kabupaten);\r\n    }\r\n    setkabupatenfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [kabupaten, setkabupaten]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowkabupatenSelect, setRowkabupatenSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedkabupaten, setSelectedkabupaten]=useState([]);\r\n  const [kabupatenExport, setkabupatenExport]=useState([]);\r\n  const [kabupatenfind, setkabupatenfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedkabupaten({\r\n      ...setSelectedkabupaten,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowkabupatenSelect({\r\n      ...selectedkabupaten,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowKabupaten, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowkabupatenSelect(rowKabupaten);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowkabupatenSelect) => {\r\n    deleteKab(rowkabupatenSelect.id_kabupaten)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowkabupatenSelect(rowKabupaten);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKab}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowkabupatenSelect} rowSelect={rowkabupatenSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Kabupaten</h5>\r\n      {/*}\r\n      <kabupatenToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={kabupatenfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        kabupaten={kabupaten}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KabupatenTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          kabupatenExport={kabupatenExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          kabupatenfind={kabupatenfind}\r\n          filteredItems={filteredItems}\r\n          selectedkabupaten={selectedkabupaten} \r\n          kabupatenfind={kabupatenfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedkabupaten={setSelectedkabupaten}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KabupatenAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KabupatenList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlDeleteProv } from '../../../../kumpulanUrl'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst ProvinsiIDTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    deleteProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'Nama_Provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kabupaten/Kota',\r\n      selector: 'Jumlah_Kabupaten_Kota',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Provinsi\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Laporan Jumlah Wilayah Provinsi di Indonesia\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProvinsiIDTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProvinsiIDTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {ProvinsiIDTable } from './components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst laporanProvID=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getProv() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(provinsis);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetProv=urlLaporanProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Indonesia</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <ProvinsiIDTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          provinsisExport={provinsisExport}\r\n          getDataBackend={getProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default laporanProvID\r\n","import React, { useState, useEffect } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlProv, urlLaporanPerProv} from '../../../../kumpulanUrl'\r\nimport validate, { async } from 'validate.js';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanPerProvTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    deleteProv,\r\n    data,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    dataProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Jumlah Kabupaten/Kota',\r\n      selector: 'Jumlah_Kabupaten_Kota',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'Jumlah_Kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'Jumlah_Kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RW',\r\n      selector: 'Jumlah_RW',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah RT',\r\n      selector: 'Jumlah_RT',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={rowSelect.nama_provinsi == undefined ? 'Laporan Wilayah di ' : `Laporan Wilayah di `+ rowSelect.nama_provinsi}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanPerProvTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    Divider,\r\n    Grid,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlLaporanPerProv, urlLaporanProv, urlProv  } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate, { async } from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.green,\r\n        '&:hover': {\r\n            backgroundColor: '#4caf50',\r\n            borderColor: '#66bb6a',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n    buttonCancel: {\r\n        color: theme.palette.white,\r\n        backgroundColor: theme.palette.red,\r\n        '&:hover': {\r\n            backgroundColor: '#f44336',\r\n            borderColor: '#ef5350',\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst ComboProv = props => {\r\n    const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [getStatus, setStatus] = useState([]);\r\n    const [kabupaten, setKabupaten] = useState([]);\r\n    const [prov, setProv] = useState([]);\r\n    const [getKeyId, setKeyId] = useState([]);\r\n\r\n    const [formState, setFormState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {}\r\n    });\r\n    ///  const mapRef=createRef();\r\n    async function getProv() {\r\n        /* */\r\n        const requestOptions={\r\n          method: 'get',\r\n          //mode: \"cors\",\r\n          headers: { 'Content-Type': 'application/json' },\r\n        };\r\n    \r\n        let url=urlProv\r\n        // eslint-disable-next-line no-useless-concat\r\n        const response=await fetch(url, requestOptions)\r\n          .then(res => {\r\n            return res.json();\r\n          })\r\n    \r\n          .then(resJson => {\r\n            const data=resJson;\r\n            setProv(data.data);\r\n            //return false;\r\n          })\r\n          .catch(e => {\r\n            //console.log(e);\r\n            alert(\"Nextwork Error\");\r\n            setProv([]);\r\n            //this.setState({ ...this.state, isFetching: false });\r\n          });\r\n      }\r\n\r\n    // async function showKab(id_provinsi) {\r\n    //     /* */\r\n    //     const requestOptions={\r\n    //       method: 'POST',\r\n    //     //   mode: \"cors\",\r\n    //       headers: { 'Content-Type': 'application/json' },\r\n    //       body: JSON.stringify({\r\n    //           'id_provinsi': id_provinsi\r\n    //       })\r\n    //     };\r\n    \r\n    //     let url=urlLaporanPerProv\r\n    //     // eslint-disable-next-line no-useless-concat\r\n    //     const response=await fetch(url, requestOptions)\r\n    //       .then(res => {\r\n    //         return res.json();\r\n    //       })\r\n    \r\n    //       .then(resJson => {\r\n    //         const data=resJson;\r\n    //         setKabupaten(data.data);\r\n    //         //return false;\r\n    //       })\r\n    //       .catch(e => {\r\n    //         //console.log(e);\r\n    //         alert(\"Nextwork Error\");\r\n    //         setKabupaten([]);\r\n    //         //this.setState({ ...this.state, isFetching: false });\r\n    //       });\r\n    //   }\r\n\r\n\r\n    useEffect(() => {\r\n        getProv()\r\n        const errors = validate(rowSelect);\r\n        // console.log(errors)\r\n        // console.log(\"rowSelect\", rowSelect)\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n        // console.log(\"formState\", formState)\r\n\r\n\r\n        //   alert(setOpen)\r\n    }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n    const handleChange = event => {\r\n\r\n        //    event.persist();\r\n\r\n        const errors = validate(rowSelect);\r\n\r\n        setFormState(formState => ({\r\n            ...rowSelect,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {}\r\n        }));\r\n\r\n\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let nama = event.target.name.replace(\"id\",\"nama\")\r\n        if (event.target.name == \"id_provinsi\") {\r\n          setRowSelect({\r\n            ...rowSelect,\r\n             [nama]:pencarian(prov,event.target.value),\r\n             [event.target.name]: event.target.value,\r\n          });\r\n        //   console.log(\"Ket Provinsi =\", prov)\r\n        }\r\n    }\r\n\r\n    // const handleChangeProvinsi=(event)=> {\r\n    //     handleChange(event)\r\n    //     showKab(event.target.value)\r\n    // }\r\n\r\n    const handleCari = () => {   \r\n        getDataBackend(rowSelect)\r\n        // console.log('rs',rowSelect)\r\n    }\r\n\r\n    //  const position=[currentLocation.lat, currentLocation.lng]\r\n    const hasError = field => {\r\n        return formState && formState.errors && formState.errors[field] ? true : false;\r\n    }\r\n\r\n    const pencarian = (paramKab, id_prov) => {\r\n        let value = id_prov\r\n        let result = [];\r\n        result = paramKab.filter((entry) => {\r\n          return entry&&entry.id_provinsi &&(entry.id_provinsi === value) \r\n        });\r\n        // console.log(\"result =\",result[0].nama_provinsi)\r\n        return result[0].nama_provinsi\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            {...rest}\r\n            className={clsx(classes.root, className)}\r\n        >\r\n\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n            >\r\n                <CardHeader\r\n                    subheader=\"\"\r\n                    title=\"Pilih Provinsi\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n\r\n                    <Grid\r\n                        item\r\n                        md={6}\r\n                        xs={12}\r\n                    >\r\n                        <Grid\r\n                        >\r\n                            <TextField\r\n                                fullWidth\r\n                                label=\"Pilih Provinsi\"\r\n                                margin=\"dense\"\r\n                                name=\"id_provinsi\"\r\n                                onChange={handleChange}\r\n                                //required\r\n                                select\r\n                                // eslint-disable-next-line react/jsx-sort-props\r\n                                //SelectProps={{ native: true }}\r\n\r\n                                //defaultValue={rowSelect.IsActive}\r\n                                value={rowSelect.id_provinsi}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {prov.map(option => (\r\n                                    <option\r\n                                        key={option.id_provinsi}\r\n                                        value={option.id_provinsi}\r\n                                    >\r\n                                        {option.nama_provinsi}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </TextField>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions>\r\n                    {!formState.isValid}\r\n                    <Button\r\n                        color=\"primary\"\r\n                        className={classes.buttonSuccess}\r\n                        variant=\"contained\"\r\n                        onClick={handleCari}\r\n                        disabled={!formState.isValid}\r\n\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                </CardActions>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nComboProv.propTypes = {\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default ComboProv;","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {LaporanPerProvTable, ComboProv} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanPerProv, urlLaporanProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanPerProvList=props => {\r\n\r\n  async function showKab(rowProvinsisSelect) {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(provinsis);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        mode: \"cors\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            \"id_provinsi\": rowProvinsisSelect.id_provinsi,\r\n        })\r\n    };\r\n\r\n    let urlget=urlLaporanPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlget, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setProvinsis(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsis([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.nama_provinsi&&\r\n          ((entry.nama_provinsi!==null? entry.nama_provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [prov, setProv] = useState([]);\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Provinsi</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <ComboProv  handleChange={handleChange} setData={setData} getDataBackend={showKab}\r\n        open={open} setRowSelect={setRowProvinsisSelect} rowSelect={rowProvinsisSelect}\r\n        title={title} datas={filteredItems}>\r\n        </ComboProv>\r\n        <LaporanPerProvTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          setRowSelect={setRowProvinsisSelect}\r\n          dataProv={prov}\r\n          rowSelect={rowProvinsisSelect}\r\n          provinsisExport={provinsisExport}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          data={provinsis}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanPerProvList\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst RtTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,rtfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedrt,\r\n    setselectedrt,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten/Kota',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rt',\r\n      selector: 'nama_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Kode RT',\r\n      selector: 'KodeRT',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Rt',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Rt\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Rt',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Rt\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Rt\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Rt\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedrt_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedrt_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedrt_var=[];\r\n    }\r\n\r\n    setselectedrt(selectedrt_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedrt.indexOf(id);\r\n    let newselectedrt=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedrt=newselectedrt.concat(selectedrt, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedrt=newselectedrt.concat(selectedrt.slice(1));\r\n    } else if (selectedIndex===selectedrt.length-1) {\r\n      newselectedrt=newselectedrt.concat(selectedrt.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedrt=newselectedrt.concat(\r\n        selectedrt.slice(0, selectedIndex),\r\n        selectedrt.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedrt(newselectedrt);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Rt List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_rt\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRtTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default RtTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddRt, urlEditRt, urlRt, urlRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel, urlShowRw } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst schema={\r\n  KodeRT: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_rt: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RtAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [rw, setRw]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kel, setKel]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getRw() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n\r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddRt;\r\n    let varJson = {\r\n      \"KodeRT\": rowSelect.KodeRT,\r\n      \"id_rt\": rowSelect.id_rt,\r\n      \"nama_rt\": rowSelect.nama_rt,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"IsActive\": rowSelect.IsActive,\r\n\r\n    }\r\n    if (rowSelect.id_rt===undefined) {\r\n      url=urlAddRt;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditRt;\r\n      varJson.LastModifiedBy = userName\r\n\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      return tester.json();\r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester.message)\r\n      getDataBackend();\r\n      if (url == urlAddRt) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditRt){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      then(\r\n        handleClose()\r\n        )\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n      .catch((e) => {\r\n\r\n        swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_rt == undefined ? \"Tambah Rt\" : \"Ubah Rt\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {rw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode RT\"\r\n                margin=\"dense\"\r\n                name=\"KodeRT\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeRT')? formState.errors.KodeRT[0]:null\r\n                }\r\n\r\n                error={hasError('KodeRT')}\r\n                defaultValue={rowSelect&&rowSelect.KodeRT? rowSelect.KodeRT:''}\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n              />\r\n            </Grid>\r\n            \r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama RT\"\r\n                margin=\"dense\"\r\n                name=\"nama_rt\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_rt')? formState.errors.nama_rt[0]:null\r\n                }\r\n\r\n                error={hasError('nama_rt')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_rt? rowSelect.nama_rt:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRtAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default RtAddModi;\r\n","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { RtTable, RtAddModi } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteRt, urlRt,urlShowRt } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst RtList=props => {\r\n\r\n  async function getRt() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(rt);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetRt=urlRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetRt, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrt(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrt([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteRt = async (id_rt) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rt: id_rt\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrt(data.data);\r\n        setFilteredItems(data.data);\r\n        getRt()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrt([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setrtExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#rtExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=1) {\r\n      setrtfind(e.target.value)\r\n      let rt4=rt.filter(function (entry) {\r\n        return entry&&entry.nama_rt&&\r\n          ((entry.nama_rt!==null? entry.nama_rt:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(rt4)? rt4:[rt4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(rt);\r\n    }\r\n    setrtfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [rt, setrt]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowrtSelect, setRowrtSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedrt, setSelectedrt]=useState([]);\r\n  const [rtExport, setrtExport]=useState([]);\r\n  const [rtfind, setrtfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getRt()\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedrt({\r\n      ...setSelectedrt,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowrtSelect({\r\n      ...selectedrt,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowrtSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowrtSelect) => {\r\n    deleteRt(rowrtSelect.id_rt)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowrtSelect(rowProvinsi);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getRt}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowrtSelect} rowSelect={rowrtSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>rt</h5>\r\n      {/*}\r\n      <rtToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={rtfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        rt={rt}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <RtTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          rtExport={rtExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          rtfind={rtfind}\r\n          filteredItems={filteredItems}\r\n          selectedrt={selectedrt} \r\n          handleOpen={handleOpen}\r\n          setSelectedrt={setSelectedrt}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(RtAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default RtList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst RwTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,rwfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedrw,\r\n    setselectedrw,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kode Depdagri',\r\n      selector: 'KodeDepdagri',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten/Kota',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Keterangan',\r\n      selector: 'IsActive',\r\n      sortable: true,\r\n      cell: row => row.IsActive==1? \"Aktiv\":\"Non Aktiv\"\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Rw',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Rw\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Rw',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Rw\")} ><DeleteIcon /></Button>\r\n      ,\r\n    }\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Rw\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Rw\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedrw_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedrw_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedrw_var=[];\r\n    }\r\n\r\n    setselectedrw(selectedrw_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedrw.indexOf(id);\r\n    let newselectedrw=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedrw=newselectedrw.concat(selectedrw, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedrw=newselectedrw.concat(selectedrw.slice(1));\r\n    } else if (selectedIndex===selectedrw.length-1) {\r\n      newselectedrw=newselectedrw.concat(selectedrw.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedrw=newselectedrw.concat(\r\n        selectedrw.slice(0, selectedIndex),\r\n        selectedrw.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedrw(newselectedrw);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Rw List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_rw\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRwTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default RwTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddRw, urlEditRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst schema={\r\n  KodeDepdagri: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  nama_rw: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  IsActive: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    /* length: {\r\n       maximum: 1\r\n     }*/\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst RwAddModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kelurahan, setKelurahan]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        \r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        \r\n        setKelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKel() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKelAll=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKelAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelurahan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setKelurahan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // \r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    \r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let url=urlAddRw;\r\n    let varJson = {\r\n      \"KodeDepdagri\": rowSelect.KodeDepdagri,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"nama_rw\": rowSelect.nama_rw,\r\n      \"IsActive\": rowSelect.IsActive,\r\n    }\r\n    if (rowSelect.id_rw === undefined) {\r\n      url=urlAddRw;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditRw;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        return tester.json();\r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester.message)\r\n        getDataBackend();\r\n        if (url == urlAddRw) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditRw){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n        then(\r\n          handleClose()\r\n          )\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id_rw == undefined ? \"Tambah Rw\" : \"Ubah Rw\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Kode Depdagri\"\r\n                margin=\"dense\"\r\n                name=\"KodeDepdagri\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('KodeDepdagri')? formState.errors.KodeDepdagri[0]:null\r\n                }\r\n\r\n                error={hasError('KodeDepdagri')}\r\n                defaultValue={rowSelect&&rowSelect.KodeDepdagri? rowSelect.KodeDepdagri:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelurahan.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Rw\"\r\n                margin=\"dense\"\r\n                name=\"nama_rw\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_rw')? formState.errors.nama_rw[0]:null\r\n                }\r\n\r\n                error={hasError('nama_rw')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_rw? rowSelect.nama_rw:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select aktiv\"\r\n                margin=\"dense\"\r\n                name=\"IsActive\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect&&rowSelect.IsActive? rowSelect.IsActive:''}\r\n                variant=\"outlined\"\r\n              >\r\n                {status.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRwAddModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default RwAddModi;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { RwTable, RwAddModi } from '../RwList/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteRw, urlRw,urlshowRw } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst RwList=props => {\r\n  \r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getRw() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(rw);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetRw=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetRw, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrw(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrw([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteRw = async (id_rw) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rw: id_rw\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setrw(data.data);\r\n        setFilteredItems(data.data);\r\n        getRw()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setrw([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingRw[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setrwExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingRw[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#rwExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingRw[0].TitleModule).length)/2\r\n      doc.text(SettingRw[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('rw.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=1) {\r\n      setrwfind(e.target.value)\r\n      let rw4=rw.filter(function (entry) {\r\n        return entry&&entry.nama_rw&&\r\n          ((entry.nama_rw!==null? entry.nama_rw:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(rw4)? rw4:[rw4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(rw);\r\n    }\r\n    setrwfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [rw, setrw]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowrwSelect, setRowrwSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedrw, setSelectedrw]=useState([]);\r\n  const [rwExport, setrwExport]=useState([]);\r\n  const [rwfind, setrwfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getRw();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedrw({\r\n      ...setSelectedrw,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmRw, kdRw, status, keyId) => {\r\n    setRowrwSelect({\r\n      ...selectedrw,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdRw']: kdRw,\r\n      ['nmRw']: nmRw,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowRw, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowrwSelect(rowRw);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowrwSelect) => {\r\n    deleteRw(rowrwSelect.id_rw)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowrwSelect(rowRw);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getRw}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowrwSelect} rowSelect={rowrwSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>rw</h5>\r\n      {/*}\r\n      <rwToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={rwfind} deleteRw={deleteRw}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        rw={rw}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <RwTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          RwExport={rwExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteRw={deleteRw}\r\n          rwfind={rwfind}\r\n          filteredItems={filteredItems}\r\n          selectedrw={selectedrw} \r\n          handleOpen={handleOpen}\r\n          setSelectedrw={setSelectedrw}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(RwAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default RwList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst VuserTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Vuser ID',\r\n      selector: 'id',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama User',\r\n      selector: 'UserName',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Lengkap',\r\n      selector: 'NamaLengkap',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Email',\r\n      selector: 'Email',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Alamat',\r\n      selector: 'Alamat',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'NIK',\r\n      selector: 'NIK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created At',\r\n      selector: 'CreatedDate',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Last Modified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jabatan',\r\n      selector: 'Jabatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit Vuser',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Vuser\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus Vuser',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Delete Vuser\")} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Vuser\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Vuser\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Vuser List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVuserTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default VuserTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddVuser, urlEditVuser } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  UserName: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  NamaLengkap: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  Jabatan: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  Password: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst VuserAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userId=localStorage.getItem('user_id');\r\n    let url=urlAddVuser;\r\n    if (rowSelect.id===undefined) {\r\n      url=urlAddVuser;\r\n    } else {\r\n      url=urlEditVuser;\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"UserName\": rowSelect.UserName,\r\n        \"id\": rowSelect.id,\r\n        \"NamaLengkap\": rowSelect.NamaLengkap,\r\n        \"NIK\": rowSelect.NIK,\r\n        \"Alamat\": rowSelect.Alamat,\r\n        \"Jabatan\": rowSelect.Jabatan,\r\n        \"Password\": rowSelect.Password,\r\n        \"Email\": rowSelect.Email,\r\n        \"Title Email\": localStorage.getItem('Title Email'),\r\n        \"body\": localStorage.getItem('body'),\r\n        \"url\": localStorage.getItem('url'),\r\n      })\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n       handleClose();\r\n          return res.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(res => {\r\n        // console.log(res)\r\n        getDataBackend();\r\n        if (url == urlAddVuser) {\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Menambah Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }if(url == urlEditVuser){\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Sukses Memperbarui Data',\r\n            showConfirmButton: false,\r\n            timer: 1000\r\n          })\r\n        }\r\n\r\n\r\n        const data=res;\r\n      })\r\n      .catch((e) => {\r\n\r\n    \r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title= {title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Pengguna\"\r\n                margin=\"dense\"\r\n                name=\"UserName\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('UserName')? formState.errors.UserName[0]:null\r\n                }\r\n\r\n                error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.UserName? rowSelect.UserName:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nomor Induk\"\r\n                margin=\"dense\"\r\n                name=\"NIK\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('UserName')? formState.errors.UserName[0]:null\r\n                // }\r\n\r\n                // error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.NIK? rowSelect.NIK:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Alamat\"\r\n                margin=\"dense\"\r\n                name=\"Alamat\"\r\n                onChange={handleChange}\r\n                // helperText={\r\n                //   hasError('UserName')? formState.errors.UserName[0]:null\r\n                // }\r\n\r\n                // error={hasError('UserName')}\r\n                defaultValue={rowSelect&&rowSelect.Alamat? rowSelect.Alamat:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Lengkap\"\r\n                margin=\"dense\"\r\n                name=\"NamaLengkap\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('NamaLengkap')? formState.errors.NamaLengkap[0]:null\r\n                }\r\n\r\n                error={hasError('NamaLengkap')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.NamaLengkap? rowSelect.NamaLengkap:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Jabatan\"\r\n                margin=\"dense\"\r\n                name=\"Jabatan\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Jabatan')? formState.errors.Jabatan[0]:null\r\n                }\r\n\r\n                error={hasError('Jabatan')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.Jabatan? rowSelect.Jabatan:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n             item\r\n             md={6}\r\n             xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                margin=\"dense\"\r\n                name=\"Email\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Email')? formState.errors.Email[0]:null\r\n                }\r\n                error={hasError('Email')}\r\n                defaultValue={rowSelect&&rowSelect.Email? rowSelect.Email:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n                         \r\n            <Grid\r\n             item\r\n             md={6}\r\n             xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                margin=\"dense\"\r\n                name=\"Password\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Password')? formState.errors.Password[0]:null\r\n                }\r\n              disabled={title == 'Ubah Vuser'}\r\n                error={hasError('Password')}\r\n                defaultValue={rowSelect&&rowSelect.Password? rowSelect.Password:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVuserAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default VuserAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, VuserTable, VuserAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser, urlEditVuser, urlDeleteUser } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getVuser() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlgetVuser=urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlgetVuser, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteUser = async (id) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id: id\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteUser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getVuser()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getVuser();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteUser(rowVuserSelect.id).then(Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getVuser}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Vuser</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <VuserTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(VuserAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst SettingTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama',\r\n      selector: 'nama',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Value Setting',\r\n      selector: 'value_setting',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    \r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Setting\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Setting\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Setting\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Setting List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSettingTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SettingTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddSetting, urlEditSetting,urlGetKelompokData,urlShowKelompokData } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  nama: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst SettingAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelompokData,setKelompokData]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  \r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function getKelData() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKelompokData(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKelompokData([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getKelData()\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"nama\": rowSelect.nama,\r\n      \"value_setting\": rowSelect.value_setting,\r\n      \"id_setting\":rowSelect.id_setting,\r\n      \"Id_kelompok_data\": rowSelect.Id_kelompok_data,\r\n    }\r\n    let url=urlAddSetting;\r\n    if (rowSelect.id_setting===undefined) {\r\n      url=urlAddSetting;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditSetting;\r\n      // console.log(\"ide =\",rowSelect.id_setting)\r\n\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n    .then(tester => {\r\n      if (tester.status === 200) {\r\n        // alert('berhasil')\r\n     handleClose();\r\n        return tester.json();\r\n      }\r\n     \r\n    })/**/\r\n\r\n    .then(tester => {\r\n      // console.log(tester)\r\n      // alert(tester)\r\n      getDataBackend();\r\n      if (url == urlAddSetting) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditSetting){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n      // alert(\"Sukses\")\r\n      const data=tester;\r\n    })\r\n    .catch((e) => {\r\n\r\n      // alert(e)\r\n      // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n\r\n      return false;\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama\"\r\n                margin=\"dense\"\r\n                name=\"nama\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama')? formState.errors.nama[0]:null\r\n                }\r\n\r\n                error={hasError('nama')}\r\n                defaultValue={rowSelect&&rowSelect.nama? rowSelect.nama:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Value Setting\"\r\n                margin=\"dense\"\r\n                name=\"value_setting\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('value_setting')? formState.errors.value_setting[0]:null\r\n                }\r\n                error={hasError('value_setting')}\r\n                defaultValue={rowSelect&&rowSelect.value_setting? rowSelect.value_setting:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n            <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelompok\"\r\n                margin=\"dense\"\r\n                name=\"Id_kelompok_data\"\r\n                onChange={handleChange}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.Id_kelompok_data}\r\n                variant=\"outlined\"\r\n              >\r\n                {kelompokData.map(option =>(\r\n                  <option value={option.Id_kelompok_data}>\r\n                    {option.nama_kelompok_data}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSettingAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default SettingAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, SettingTable, SettingAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetSetting, urlDeleteSetting } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { async } from 'validate.js';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>Setting</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getSetting() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetSetting\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  async function deleteSetting(id_setting) {\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        id_setting: id_setting\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteSetting\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getSetting()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getSetting();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteSetting(rowVuserSelect.id_setting).then(  Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',  \r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    }))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getSetting}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 className=\"font-poppins align-middle font-medium\" style={{ color: 'black' }}>Setting</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <SettingTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(SettingAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst KelompokDataTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Vuser ID',\r\n    //   selector: 'id',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kelompok Data',\r\n      selector: 'nama_kelompok_data',\r\n      sortable: true,\r\n    },\r\n\r\n \r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kelompok Data\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Kelompok Data\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Kelompok Data\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Kelompok Data List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelompokDataTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default KelompokDataTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddKelompokData, urlEditKelompokData } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2'\r\nconst schema={\r\n  nama_kelompok_data: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    length: {\r\n      maximum: 200\r\n    }\r\n  },\r\n  /**/\r\n\r\n};\r\n// const Swal = require('sweetalert2')\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst KelompokDataAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    /*\r\n    if (rowSelect.Password==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"nama_kelompok_data\":rowSelect.nama_kelompok_data,\r\n      \"Id_kelompok_data\":rowSelect.Id_kelompok_data,\r\n    }\r\n    let url=urlAddKelompokData;\r\n    if (title=='Tambah Kelompok Data') {\r\n      url=urlAddKelompokData;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditKelompokData;\r\n      // console.log(\"ide =\",rowSelect.id_rt)\r\n\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        if (tester.status === 200) {  \r\n       handleClose();\r\n          return tester.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester)\r\n      getDataBackend();if (url == urlAddKelompokData) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditKelompokData){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n        alert(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Nama Kelompok Data\"\r\n                margin=\"dense\"\r\n                name=\"nama_kelompok_data\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('nama_kelompok_data')? formState.errors.nama_kelompok_data[0]:null\r\n                }\r\n\r\n                error={hasError('nama_kelompok_data')}\r\n\r\n                defaultValue={rowSelect&&rowSelect.nama_kelompok_data? rowSelect.nama_kelompok_data:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nKelompokDataAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default KelompokDataAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, KelompokDataTable, KelompokDataAddModi, V, KelompokDataAddModiiewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetKelompokData, urlDeleteKelompokData } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst KelompokDataList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getKelompokData() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  async function deleteKelompokData(Id_kelompok_data) {\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        Id_kelompok_data: Id_kelompok_data\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteKelompokData\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getKelompokData()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getKelompokData();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowVuserSelect) => {\r\n    deleteKelompokData(rowVuserSelect.Id_kelompok_data).then( Swal.fire( {position: 'center',\r\n    icon: 'success',\r\n    title: 'Sukses Menambah Data',\r\n    showConfirmButton: false,\r\n    timer: 1000}))\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getKelompokData}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Kelompok Data</h5>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <KelompokDataTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(KelompokDataAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default KelompokDataList;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusID=props => {\r\n  const {\r\n    sensusID,\r\n    setSensusID,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kab/Kota',\r\n      selector: 'jumKab',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'jumKec',\r\n      sortable: true,\r\n    },    \r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'jumKel',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={'Search Laporan Target Sensus'}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensusID}\r\n              keyField=\"Periode_Sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusID.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusID;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowTargetKk } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst PencarianLaporan = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    // Periode_Sensus: {\r\n    //   presence: { allowEmpty: false, message: 'harus diisi' },\r\n    // },\r\n  };\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    // rowSelect.Periode_Sensus = localStorage.getItem(\"Periode Sensus\")\r\n    /*\r\n    if (rowSelect.IsActive==='1') {\r\n      rowSelect.status='Active'\r\n    } else if (rowSelect.status==='0') {\r\n      rowSelect.status='Non Activw'\r\n    }*/\r\n    // alert('ini pro')\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n  // const pencarian = (paramProv, id_set) => {\r\n  //   let value = id_set\r\n  //   let result = [];\r\n  //   // alert(value)\r\n  //   result = paramProv.filter((entry) => {\r\n  //     return entry&&entry.id_setting &&(entry.id_setting === value) \r\n  //   });\r\n  //   // alert(\"result = \" + result[0].value_setting)\r\n  //   return result[0].value_setting\r\n  // }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    // let nama = event.target.name.replace(\"id\",\"nama\")\r\n    // if (event.target.name == \"id_setting\") {\r\n    //   setRowSelect({\r\n    //     ...rowSelect,\r\n    //      [nama]:pencarian(Setting,event.target.value),\r\n    //      [event.target.name]: event.target.value,\r\n    //   });\r\n    //   // console.log(\"Ket Setting =\", Setting)\r\n    // }\r\n  }\r\n\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPencarianLaporan.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default PencarianLaporan;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {PeriodeSensus,LaporanSensusIDTable, PencarianLaporan} from '../LaporanSensusID/components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlShowLaporanSensusID, urlShowTargetKk } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusID=props => {\r\n\r\n\r\n  async function showTargetKK(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusID\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensusID(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setSensusID([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensusID=(e) => {\r\n    const selectedsensusID_string=selectedsensusID.join(\"<batas></batas>\");\r\n    let sensusID3=sensusID.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensusID_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensusID3)\r\n    setSensusID(sensusID3)\r\n    setSensusIDfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusIDExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusIDExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusIDfind(e.target.value)\r\n      let sensusID4=sensusID.filter(function (entry) {\r\n        return entry&&entry.Nama_sensusID&&\r\n          ((entry.Nama_sensusID!==null? entry.Nama_sensusID:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensusID4)? sensusID4:[sensusID4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensusID);\r\n    }\r\n    setSensusIDfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensusID, setSensusID]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusIDSelect, setRowsensusIDSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensusID, setSelectedsensusID]=useState([]);\r\n  const [sensusIDExport, setSensusIDExport]=useState([]);\r\n  const [sensusIDfind, setSensusIDfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensusID({\r\n      ...setSelectedsensusID,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusIDSelect({\r\n      ...selectedsensusID,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensusID =',data.data)\r\n  //       setSensusID(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensusID([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensusID, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusIDSelect(rowsensusID);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusIDSelect(rowsensusID);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Laporan Sensus di Indonesia</h5>\r\n      {/*}\r\n      <sensusIDToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensusID={sensusID}\r\n\r\n      />\r\n  {*/}\r\n      <PencarianLaporan\r\n         getDataBackend={showTargetKK}\r\n         setSensusID={setSensusID}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusIDSelect} \r\n         rowSelect={rowsensusIDSelect}\r\n         title={title} datas={filteredItems}>\r\n      </PencarianLaporan>\r\n      <div className={classes.content}>\r\n        <LaporanSensusIDTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusIDSelect}\r\n          sensusID={sensusID}\r\n          getDataBackend={showTargetKK}\r\n        // textfind={sensusIDfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusIDExport={sensusIDExport}\r\n          sensusIDfind={sensusIDfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusIDSelect} rowSelect={rowsensusIDSelect}\r\n          selectedsensusID={selectedsensusID} \r\n          sensusIDfind={sensusIDfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensusID={setSelectedsensusID}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusID;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios';\r\nimport { urlDeleteProv } from 'kumpulanUrl';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { async } from 'validate.js';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst TargetKkTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,Vuserfind,\r\n    order, orderBy, SettingVuser,\r\n    VuserExport, filteredItems, handleOpen, selectedVuser,\r\n    setSelectedVuser,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Periode Sensus',\r\n      selector: 'Periode_Sensus',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      sortable: true,\r\n    },    {\r\n      name: 'Nama Kelurahan',\r\n      selector: 'nama_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rw',\r\n      selector: 'nama_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Nama Rt',\r\n      selector: 'nama_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n      \r\n    },\r\n \r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    \r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n        disabled={row.Periode_Sensus <= localStorage.getItem('Periode Sensus')}//={row.Periode_Sensus <= localStorage.getItem('Periode Sensus') ? \"true\" : \"false\"}\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Target Kk \") }  > {row.Periode_Sensus < parseInt(localStorage.getItem('Periode Sensus'))}<EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e,row)} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=Vuser.filter(item => item.nama_Vuser&&item.nama_Vuser.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah Target Kk\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search Vuser\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedVuser_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedVuser_var=Vuser.map(Vuser => Vuser.id);\r\n    } else {\r\n      selectedVuser_var=[];\r\n    }\r\n\r\n    setSelectedVuser(selectedVuser_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedVuser.indexOf(id);\r\n    let newSelectedVuser=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(1));\r\n    } else if (selectedIndex===selectedVuser.length-1) {\r\n      newSelectedVuser=newSelectedVuser.concat(selectedVuser.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedVuser=newSelectedVuser.concat(\r\n        selectedVuser.slice(0, selectedIndex),\r\n        selectedVuser.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedVuser(newSelectedVuser);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=Vuser;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"Target KK\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"UserName\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTargetKkTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default TargetKkTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport { urlAddTargetKk, \r\n  urlEditTargetKk, \r\nurlRw, urlKel, urlKec, urlKab, urlProv, urlShowKab, urlShowKec, urlShowKel, urlShowRw,urlShowRt\r\n\r\n} from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport Swal from 'sweetalert2';\r\nconst schema={\r\n  Target_KK: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n    //email: true,\r\n    // length: {\r\n    //   maximum: 200\r\n    // }\r\n  },\r\n  /**/\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TargetKkAddModi=props => {\r\n  const { className, setData, getDataBackend,getMockData, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getStatus, setStatus]=useState([]);\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [kelompokData,setKelompokData]=useState([]);\r\n  const [rw, setRw]=useState([]);\r\n  const [rt, setRt]=useState([]);\r\n  const [kabupaten, setKabupaten] = useState([]);\r\n  const [kecamatan, setKecamatan] = useState([]);\r\n  const [provinsi, setProvinsi] = useState([]);\r\n  const [kel, setKel]=useState([]);\r\n\r\n  const status=[\r\n    {\r\n      value: '1',\r\n      label: 'Active'\r\n    },\r\n    {\r\n      value: '0',\r\n      label: 'Inactive'\r\n    }\r\n\r\n\r\n  ];\r\n  \r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n  const handleChangeRw=event=> {\r\n    handleChange(event)\r\n    showRt(event.target.value)\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRt(id_rw) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_rw\": id_rw,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rt =',data.data)\r\n        setRt(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setRt([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKel() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlKel\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKec() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKecAll=urlKec\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKecAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKecamatan(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setKecamatan([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getKab() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetKabAll=urlKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlGetKabAll, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setKabupaten(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setKabupaten([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProv() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProvinsi(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setProvinsi([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getRw() {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProv();\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n    showRt(rowSelect.id_rw);\r\n\r\n    const errors=validate(rowSelect, schema);\r\n    // console.log(errors)\r\n    // console.log(\"rowSelect\", rowSelect)\r\n    // console.log(\"schema\", schema)\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    if (title!='Tambah Target Kk' && rowSelect.id_rt_old===undefined) {\r\n      rowSelect.id_rt_old=rowSelect.id_rt;\r\n      rowSelect.Periode_Sensus_old=rowSelect.Periode_Sensus;\r\n      // console.log('rs = ',rowSelect)\r\n    }\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n\r\n  const handleSave=(event) => {\r\n    const userName=localStorage.getItem('username');\r\n    let varJson = {\r\n      \"Periode_Sensus\": rowSelect.Periode_Sensus,\r\n      \"Target_KK\": rowSelect.Target_KK,\r\n      \"id_rt\":rowSelect.id_rt,\r\n      \"id_rt_old\":rowSelect.id_rt_old,\r\n      \"Periode_Sensus_old\":rowSelect.Periode_Sensus_old,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n    }\r\n    let url \r\n    if (title=='Tambah Target Kk') {\r\n      url=urlAddTargetKk;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditTargetKk;\r\n      // console.log(\"ide =\",rowSelect.id_rt)\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    // console.log(\"var json =\",varJson);\r\n\r\n\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson,\r\n      )\r\n    };\r\n\r\n\r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    // console.log(url)\r\n    const response=fetch(url, requestOptions)\r\n      .then(tester => {\r\n        if (tester.status === 200) {  \r\n       handleClose();\r\n          return tester.json();\r\n        }\r\n       \r\n      })/**/\r\n\r\n      .then(tester => {\r\n        // console.log(tester)\r\n        // alert(tester)\r\n      getDataBackend();\r\n      if (url == urlAddTargetKk) {\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Menambah Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }if(url == urlEditTargetKk){\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Sukses Memperbarui Data',\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        })\r\n      }\r\n\r\n        // alert(\"Sukses\")\r\n        const data=tester;\r\n      })\r\n      .catch((e) => {\r\n        // alert(e)\r\n        // console.log(e)\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\",  )\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n\r\n  }\r\n  const handling =()=>{\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = parseInt(localStorage.getItem(\"Periode Sensus\"));\r\n      for (var option = periode_sensus; option <= periode_sensus + 5; option++)\r\n       {tmp.push({\"option\" : option});}\r\n      // console.log('temp =',tmp)\r\n      return tmp.map(option => (\r\n          <option value={option.option}>\r\n            {option.option}\r\n          </option>\r\n                   \r\n           ))}\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n        title={title}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={handleChange}\r\n                select\r\n                variant=\"outlined\"\r\n                value={rowSelect.Periode_Sensus}\r\n              >\r\n                {handling()}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Target KK\"\r\n                margin=\"dense\"\r\n                name=\"Target_KK\"\r\n                onChange={handleChange}\r\n                helperText={\r\n                  hasError('Target_KK')? formState.errors.Target_KK[0]:null\r\n                }\r\n                error={hasError('Target_KK')}\r\n                defaultValue={rowSelect&&rowSelect.Target_KK? rowSelect.Target_KK:''}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {provinsi.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kabupaten.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kecamatan.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {kel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChangeRw}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {rw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rt\"\r\n                margin=\"dense\"\r\n                name=\"id_rt\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rt}\r\n                variant=\"outlined\"\r\n              >\r\n                {rt.map((option)=> (\r\n                  <option\r\n                    key={option.id_rt}\r\n                    value={option.id_rt}\r\n                  >\r\n                    {option.nama_rt}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTargetKkAddModi.propTypes={\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TargetKkAddModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { VuserToolbar, TargetKkTable, TargetKkAddModi, ViewMap } from './components';\r\nimport { ModalComponent } from 'components';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlGetVuser,urlGetTargetKk, urlDeleteTargetkk } from '../../kumpulanUrl'\r\n\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport { async } from 'validate.js';\r\nimport Swal from 'sweetalert2';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst getMockData=() =>{\r\n  mockData.map(mock => {\r\n    return(\r\n      <h4>{mock}</h4>\r\n\r\n    )\r\n  })\r\n  // console.log(mockData)\r\n\r\n  \r\n}\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst VuserList=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function getTargetKk() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(Vuser);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetTargetKk\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n\r\n\r\n  const deleteTargetKk = async (id_rt) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id_rt: id_rt\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteTargetkk\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setVuser(data.data);\r\n        setFilteredItems(data.data);\r\n        getTargetKk()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setVuser([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingVuser[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  \r\n\r\n  const deleteVuser=async (e, id) => {\r\n    const selectedVuser_string=selectedVuser.join(\"<batas></batas>\");\r\n    let Vuser3=Vuser.filter(function (entry) {\r\n      return entry&&entry.id&&selectedVuser_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n\r\n    let url=urlDeleteProv\r\n    if (url === 200) {\r\n      // thisClickedFunda.closest(\"tr\").remove();\r\n      // console.log(url.data.message)\r\n    }\r\n\r\n    setFilteredItems(Vuser3)\r\n    setVuser(Vuser3)\r\n    setVuserfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setVuserExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingVuser[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#VuserExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingVuser[0].TitleModule).length)/2\r\n      doc.text(SettingVuser[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('Vuser.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setVuserfind(e.target.value)\r\n      let Vuser4=Vuser.filter(function (entry) {\r\n        return entry&&entry.UserName&&\r\n          ((entry.UserName!==null? entry.UserName:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(Vuser4)? Vuser4:[Vuser4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(Vuser);\r\n    }\r\n    setVuserfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [Vuser, setVuser]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowVuserSelect, setRowVuserSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedVuser, setSelectedVuser]=useState([]);\r\n  const [VuserExport, setVuserExport]=useState([]);\r\n  const [Vuserfind, setVuserfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  // const SettingVuser=useState(mockDataSettingVuser);\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getTargetKk();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedVuser({\r\n      ...setSelectedVuser,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmVuser, kdVuser, status, keyId) => {\r\n    setRowVuserSelect({\r\n      ...selectedVuser,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdVuser']: kdVuser,\r\n      ['nmVuser']: nmVuser,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowVuser, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    // alert(MessageButton)\r\n    setRowVuserSelect(rowVuser);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,RowVuserSelect) => {\r\n    deleteTargetKk(RowVuserSelect.id_rt).then( Swal.fire({\r\n      position: 'center',\r\n      icon: 'success',\r\n      title: 'Data Berhasil Dihapus',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    }))\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowVuserSelect(rowVuser);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getTargetKk}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowVuserSelect} rowSelect={rowVuserSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/*}\r\n      <VuserToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={Vuserfind} deleteVuser={deleteVuser}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        Vuser={Vuser}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <TargetKkTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowVuserSelect}\r\n          getMockData={getMockData}\r\n          Vuser = {Vuser}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          deleteVuser={deleteVuser}\r\n          // SettingVuser={SettingVuser}\r\n          VuserExport={VuserExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteVuser={deleteVuser}\r\n          Vuserfind={Vuserfind}\r\n          filteredItems={filteredItems}\r\n          selectedVuser={selectedVuser} \r\n          handleOpen={handleOpen}\r\n          setSelectedVuser={setSelectedVuser}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(TargetKkAddModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default VuserList;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import { PeriodeSensus } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerKab=props => {\r\n  const {\r\n    sensus,\r\n    setSensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const[laporKab,setLaporKab]=useState([])\r\n  const [prov, setProv]=useState([]);\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'jumKel',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n    <div class=\"col-md-6\">\r\n      <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n        <img src=\"/img/xls.jpeg\" />\r\n      </Button>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Target Sensus di Kabupaten\" : \"Laporan Target Sensus di Kabupaten \" + rowSelect.nama_kabupaten}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerKab.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowKab, urlShowTargetKk, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst PencarianLaporan = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    id_kabupaten: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const [kab, setKab] = useState([])\r\n  const [prov, setProv] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kab, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChange3 = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kabupaten && (entry.id_kabupaten === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange2}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange3}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPencarianLaporan.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default PencarianLaporan;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanSensusPerKabTable} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlShowLaporanSensusPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\nimport PencarianLaporan from './components/PencarianLaporan';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerKab=props => {\r\n\r\n  async function showLaporanSensusPerKab(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_kabupaten\": rowsensusIDSelect.id_kabupaten,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusPerKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_sensus&&\r\n          ((entry.Nama_sensus!==null? entry.Nama_sensus:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Laporan Target Sensus Per Kabupaten</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}<PencarianLaporan\r\n        getDataBackend={showLaporanSensusPerKab}\r\n        setSensus={setSensus}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowsensusSelect} \r\n        rowSelect={rowsensusSelect}\r\n        title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <LaporanSensusPerKabTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n          getDataBackend={showLaporanSensusPerKab}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerProvTable=props => {\r\n  const {\r\n    sensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Kabupaten',\r\n      selector: 'nama_kabupaten',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Target KK',\r\n      selector: 'KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kecamatan',\r\n      selector: 'jumKec',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Kelurahan',\r\n      selector: 'jumKel',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Laporan Target Sensus di Provinsi\" : \"laporan Target Sensus di Provinsi \" +rowSelect.nama_provinsi}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"Periode_sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead  \r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerProvTable;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlProv, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst PencarianLaporan=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    id_provinsi: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const[kab, setKab]=useState([])\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n  \r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n  const handleSave=() => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\nconst hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  \r\n  const handleChange=event => {\r\n    \r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [nama]: pencarian(kab, event.target.value),\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n        return entry && entry.id_provinsi && (entry.id_provinsi === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n               <LapPeriode \r\n              onChange={handleChange2}\r\n              rowSelect={rowSelect}/>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPencarianLaporan.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default PencarianLaporan;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanSensusPerProvTable, PencarianLaporan} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab, urlShowLaporanSensusPerProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanSensusPerProv=props => {\r\n\r\n  async function showLaporanSensusID(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlShowLaporanSensusPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_sensus&&\r\n          ((entry.Nama_sensus!==null? entry.Nama_sensus:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowsensus, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowsensusSelect(rowsensus);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">sensus</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}\r\n      <PencarianLaporan\r\n         getDataBackend={showLaporanSensusID}\r\n         setSensus={setSensus}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusSelect} \r\n         rowSelect={rowsensusSelect}\r\n         title={title} datas={filteredItems}>\r\n      </PencarianLaporan>\r\n      <div className={classes.content}>\r\n        <LaporanSensusPerProvTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanSensusPerProv;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst UserAccessSurveyTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV\r\n\r\n    , ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama User',\r\n      selector: 'NamaLengkap',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Provinsi',\r\n      selector: 'id_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Kabupaten',\r\n      selector: 'id_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Kecamatan',\r\n      selector: 'id_kecamatan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID kelurahan',\r\n      selector: 'id_kelurahan',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Rw',\r\n      selector: 'id_rw',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ID Rt',\r\n      selector: 'id_rt',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Periode Sensus',\r\n      selector: 'Periode_Sensus',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Password',\r\n      selector: 'Password',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'CreatedBy',\r\n      selector: 'CreatedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Created',\r\n      selector: 'Created',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModifiedBy',\r\n      selector: 'LastModifiedBy',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'LastModified',\r\n      selector: 'LastModified',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Edit User Access Survey',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleOpen(e, row, \"Ubah Kabupaten\")}  ><EditIcon /></Button>\r\n      ,\r\n    },\r\n    {\r\n      name: 'Hapus User Access Survey',\r\n      button: true,\r\n      cell: row =>\r\n        <Button color=\"primary\"\r\n          onClick={(e) => handleDelete(e, row, \"Hapus Kabupaten\")} ><DeleteIcon /></Button>\r\n      ,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n        <Button onClick={(e) => handleOpen(e, [], \"Tambah User Access Survey\")}>\r\n          <AddIcon/>\r\n        </Button>\r\n\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search User Access Survey\"\r\n          textfind={textfind}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title=\"User Access Survey List\"\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserAccessSurveyTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UserAccessSurveyTable;","import React, { createRef, useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport {  \r\n  urlAddUserAccessSurvey, \r\n  urlEditKab, \r\n  urlEditUserAccessSurvey, \r\n  urlGetVuser, \r\n  urlProv, \r\n  urlShowRt,\r\n  urlShowKab,\r\n  urlShowKec,\r\n  urlShowKel,\r\n  urlShowRw\r\n } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nconst schema={\r\n  id_rt: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n  Periode_Sensus: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n  id_user: {\r\n    presence: { allowEmpty: false, message: 'harus diisi' },\r\n  },\r\n};\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserAccessSurveyModi=props => {\r\n  const { className, setData, getDataBackend, setRowSelect, rowSelect, title, ...rest }=props;\r\n\r\n  const classes=useStyles();\r\n\r\n  const [values, setValues]=useState({});\r\n  const [getKeyId, setKeyId]=useState([]);\r\n  const [getProv, setProv]=useState([]);\r\n  const [getKab, setKab]=useState([]);\r\n  const [getKec, setKec]=useState([]);\r\n  const [getKel, setKel]=useState([]);\r\n  const [getRw, setRw]=useState([]);\r\n  const [getRt, setRt]=useState([]);\r\n  const [getUser, setUser]=useState([]);\r\n\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kabupaten =',data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKecamatan(id_kabupaten) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kabupaten\": id_kabupaten,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKec\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kecamatan =', data.data)\r\n        setKec(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKec([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKel(id_kecamatan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kecamatan\": id_kecamatan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowKel\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('kelurahan =',data.data)\r\n        setKel(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setKel([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRw(id_kelurahan) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_kelurahan\": id_kelurahan,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRw\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRw(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRw([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showRt(id_rw) {\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_rw\": id_rw,\r\n      })\r\n    };\r\n\r\n    let urlShow=urlShowRt\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        // console.log('Rw =',data.data)\r\n        setRt(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        //\r\n        setRt([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getProvinsi() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let urlGetProv = urlProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlGetProv, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function getVuser() {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url = urlGetVuser\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setUser(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n      \r\n        setUser([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n\r\n  ///  const mapRef=createRef();\r\n\r\n  useEffect(() => {\r\n    getProvinsi()\r\n    getVuser()\r\n    showKab(rowSelect.id_provinsi);\r\n    showKecamatan(rowSelect.id_kabupaten);\r\n    showKel(rowSelect.id_kecamatan);\r\n    showRw(rowSelect.id_kelurahan);\r\n    showRt(rowSelect.id_rw);\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  const handleChangeProvinsi=event=> {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  } \r\n\r\n  const handleChangeKabupaten=event=> {\r\n    handleChange(event)\r\n    showKecamatan(event.target.value)\r\n  }\r\n\r\n  const handleChangeKecamatan=event=> {\r\n    handleChange(event)\r\n    showKel(event.target.value)\r\n  }\r\n\r\n  const handleChangeKelurahan=event=> {\r\n    handleChange(event)\r\n    showRw(event.target.value)\r\n  }\r\n\r\n  const handleChangeRw=event=> {\r\n    handleChange(event)\r\n    showRt(event.target.value)\r\n  }\r\n\r\n  const handleClose=() => {\r\n    getDataBackend();\r\n  }\r\n\r\n  const handleSave=() => {\r\n    const userName=localStorage.getItem('username');\r\n    let url;\r\n    let varJson = {\r\n      \"id\": rowSelect.id,\r\n      \"id_user\": rowSelect.id_user,\r\n      \"id_provinsi\": rowSelect.id_provinsi,\r\n      \"id_kabupaten\": rowSelect.id_kabupaten,\r\n      \"id_kecamatan\": rowSelect.id_kecamatan,\r\n      \"id_kelurahan\": rowSelect.id_kelurahan,\r\n      \"id_rw\": rowSelect.id_rw,\r\n      \"id_rt\": rowSelect.id_rt,\r\n      \"Periode_Sensus\": rowSelect.Periode_Sensus,\r\n    }\r\n    if (rowSelect.id===undefined) {\r\n      url=urlAddUserAccessSurvey;\r\n      varJson.CreatedBy = userName\r\n      varJson.LastModifiedBy = userName\r\n    } else {\r\n      url=urlEditUserAccessSurvey;\r\n      varJson.LastModifiedBy = userName\r\n    }\r\n\r\n    //console.log(body);\r\n\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(\r\n        varJson\r\n      )\r\n    }\r\n  \r\n    ///let urlGetData=urlPostLogin\r\n    // alert(url);\r\n    const response=fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })/**/\r\n\r\n      .then(res => {\r\n        //console.log(res)\r\n        //console.log(res.data)\r\n        // alert(res.message)\r\n\r\n        swal(\"Berhasil Tambah data\", \"berhasil\", \"success\").then(\r\n          handleClose()\r\n          )\r\n        getDataBackend();\r\n        //alert(\"Sukses\")\r\n        const data=res;\r\n      })\r\n      .catch((e) => {\r\n\r\n        // swal(\"Gagal Login!\", \"Gagal Login\", \"error\", null, '200x200')\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n    }\r\n\r\n    \r\n\r\n  //  const position=[currentLocation.lat, currentLocation.lng]\r\n  const hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title={rowSelect.id == undefined ? \"Tambah User Access Survey\" : \"Ubah User Access Survey\"}\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n                <TextField\r\n                fullWidth\r\n                label=\"Pilih User\"\r\n                margin=\"dense\"\r\n                name=\"id_user\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_user}\r\n                variant=\"outlined\"\r\n              >\r\n                {getUser.map((option)=> (\r\n                  <option\r\n                    key={option.id}\r\n                    value={option.id}\r\n                  >\r\n                    {option.NamaLengkap}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChangeProvinsi}\r\n                select\r\n\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {getProv.map((option)=> (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChangeKabupaten}\r\n                //required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                //SelectProps={{ native: true }}\r\n\r\n                //defaultValue={rowSelect.IsActive}\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih kecamatan\"\r\n                margin=\"dense\"\r\n                select\r\n                name=\"id_kecamatan\"\r\n                onChange={handleChangeKecamatan}\r\n                value={rowSelect.id_kecamatan}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKec.map(option => (\r\n                  <option\r\n                    key={option.id_kecamatan}\r\n                    value={option.id_kecamatan}\r\n                  >\r\n                    {option.nama_kecamatan}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n\r\n            </Grid>\r\n            \r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kelurahan\"\r\n                margin=\"dense\"\r\n                name=\"id_kelurahan\"\r\n                onChange={handleChangeKelurahan}\r\n                select\r\n\r\n                value={rowSelect.id_kelurahan}\r\n                variant=\"outlined\"\r\n              >\r\n                {getKel.map((option)=> (\r\n                  <option\r\n                    key={option.id_kelurahan}\r\n                    value={option.id_kelurahan}\r\n                  >\r\n                    {option.nama_kelurahan}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rw\"\r\n                margin=\"dense\"\r\n                name=\"id_rw\"\r\n                onChange={handleChangeRw}\r\n                select\r\n\r\n                value={rowSelect.id_rw}\r\n                variant=\"outlined\"\r\n              >\r\n                {getRw.map((option)=> (\r\n                  <option\r\n                    key={option.id_rw}\r\n                    value={option.id_rw}\r\n                  >\r\n                    {option.nama_rw}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Rt\"\r\n                margin=\"dense\"\r\n                name=\"id_rt\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.id_rt}\r\n                variant=\"outlined\"\r\n              >\r\n                {getRt.map((option)=> (\r\n                  <option\r\n                    key={option.id_rt}\r\n                    value={option.id_rt}\r\n                  >\r\n                    {option.nama_rt}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Periode Sensus\"\r\n                margin=\"dense\"\r\n                name=\"Periode_Sensus\"\r\n                onChange={handleChange}\r\n                select\r\n\r\n                value={rowSelect.Periode_Sensus}\r\n                variant=\"outlined\"\r\n              >\r\n               {handling()}\r\n\r\n              </TextField>\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n         {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Simpan\r\n          </Button>\r\n\r\n          <Button color=\"primary\"\r\n            className={classes.buttonCancel}\r\n            variant=\"contained\"\r\n            onClick={handleClose} >Batal</Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserAccessSurveyModi.propTypes={\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserAccessSurveyModi;","import React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { UserAccessSurveyModi, UserAccessSurveyTable } from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlDeleteUserAccessSurvey, urlGetUserAccessSurvey } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst UserAccessSurveyList=props => {\r\n\r\n  async function getUAS() {\r\n    const userId=localStorage.getItem('user_id');\r\n    setFilteredItems(uas);\r\n    setOpen(false);\r\n\r\n    /* */\r\n    const requestOptions={\r\n      method: 'get',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlGetUserAccessSurvey\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setUAS(data.data);\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setUAS([]);\r\n        setFilteredItems([]);\r\n        setOpen(false);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n\r\n    setOpen(false);\r\n  }\r\n\r\n  const deleteUAS = async (id) => {  /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body:JSON.stringify({\r\n        id: id\r\n      })\r\n    };\r\n\r\n    let url=urlDeleteUserAccessSurvey\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setUAS(data.data);\r\n        setFilteredItems(data.data);\r\n        getUAS()\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setUAS([]);\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteuas=(e) => {\r\n    const selecteduas_string=selecteduas.join(\"<batas></batas>\");\r\n    let uas3=uas.filter(function (entry) {\r\n      return entry&&entry.id&&selecteduas_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(uas3)\r\n    setUAS(uas3)\r\n    setUASfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setUASExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#uasExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setUASfind(e.target.value)\r\n      let uas4=uas.filter(function (entry) {\r\n        return entry&&entry.nama_uas&&\r\n          ((entry.nama_uas!==null? entry.nama_uas:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(uas4)? uas4:[uas4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(uas);\r\n    }\r\n    setUASfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [uas, setUAS]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getUAS());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowuasSelect, setRowuasSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selecteduas, setSelecteduas]=useState([]);\r\n  const [uasExport, setUASExport]=useState([]);\r\n  const [uasfind, setUASfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    getUAS();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelecteduas({\r\n      ...setSelecteduas,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowuasSelect({\r\n      ...selecteduas,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowuas, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowuasSelect(rowuas);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowuasSelect) => {\r\n    deleteUAS(rowuasSelect.id)\r\n    \r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowuasSelect(rowuas);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function popupComponen(componenPopup) {\r\n    return (\r\n      <ModalComponent getDataBackend={getUAS}\r\n        handleChange={handleChange} setData={setData} \r\n        open={open} setRowSelect={setRowuasSelect} rowSelect={rowuasSelect}\r\n        title={title} datas={filteredItems} handleClose={handleClose} \r\n        ComponenAddModi={componenPopup}>\r\n         </ModalComponent>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">uas</h5>\r\n      {/*}\r\n      <uasToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={uasfind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        uas={uas}\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <UserAccessSurveyTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          handleDelete={handleDelete}\r\n          onChange={onChangefind}\r\n          uasExport={uasExport}\r\n          // deleteProv={deleteProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          uasfind={uasfind}\r\n          filteredItems={filteredItems}\r\n          selecteduas={selecteduas} \r\n          uasfind={uasfind}\r\n          handleOpen={handleOpen}\r\n          setSelecteduas={setSelecteduas}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      {popupComponen(UserAccessSurveyModi)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default UserAccessSurveyList;","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlDeleteProv } from '../../../../kumpulanUrl'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanTargetTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,Periode,\r\n    deleteProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'Nama_Provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah KK',\r\n      selector: 'Jumlah_KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Realisasi',\r\n      selector: 'Jumlah_Realisasi',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n            <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={\"Laporan Target Dan Realisasi Sensus Di Indonesia tahun \" + Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanTargetTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {LaporanTargetTable } from './components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanProv, urlshowRealisasiID } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanTargetRealisasiID=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function showRealisasiID() {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": Periode,\r\n          // \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlshowRealisasiID\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    showRealisasiID();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }}>Indonesia</h5>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <LaporanTargetTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          provinsisExport={provinsisExport}\r\n          // getDataBackend={getProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanTargetRealisasiID\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlProv, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LaporanTargetSearch=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    id_provinsi: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const[kab, setKab]=useState([])\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n  \r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n  const handleSave=() => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\nconst hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  \r\n  const handleChange=event => {\r\n    \r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [nama]: pencarian(kab, event.target.value),\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n        return entry && entry.id_provinsi && (entry.id_provinsi === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n               <LapPeriode \r\n              onChange={handleChange2}\r\n              rowSelect={rowSelect}/>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetSearch.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanTargetSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanTargetPerProvTable=props => {\r\n  const {\r\n    sensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,Periode,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Kabupaten Kota',\r\n      selector: 'Nama_Kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah KK',\r\n      selector: 'Jumlah_KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Realisasi',\r\n      selector: 'Jumlah_Realisasi',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n          <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Laporan Target Sensus di Provinsi \"+ Periode : \"laporan Target Sensus di Provinsi \" +rowSelect.nama_provinsi +\" \"+ Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"Periode_sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanTargetPerProvTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanTargetPerprovTable, LaporanTargetSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab, urlRealisasiPerprov } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanTargetRealisasiPerprov=props => {\r\n\r\n  async function showLaporanSensusID(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiPerprov\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowsensus, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowsensusSelect(rowsensus);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Target Dan Realisasi</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}\r\n      <LaporanTargetSearch\r\n         getDataBackend={showLaporanSensusID}\r\n         setSensus={setSensus}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusSelect} \r\n         rowSelect={rowsensusSelect}\r\n         title={title} datas={filteredItems}>\r\n      </LaporanTargetSearch>\r\n      <div className={classes.content}>\r\n        <LaporanTargetPerprovTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanTargetRealisasiPerprov;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowKab, urlShowTargetKk, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst LaporanTargetSearch = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    id_kabupaten: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const [kab, setKab] = useState([])\r\n  const [prov, setProv] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowTargetKkPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kab, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChange3 = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kabupaten && (entry.id_kabupaten === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      // console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange2}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange3}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanTargetSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import { PeriodeSensus } from 'components';\r\nimport { SearchInput } from 'components';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerKab=props => {\r\n  const {\r\n    sensus,\r\n    setSensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind,\r\n    onChange\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const[laporKab,setLaporKab]=useState([])\r\n  const [prov, setProv]=useState([]);\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'Nama_Kecamatan',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Jumlah KK',\r\n      selector: 'Jumlah_KK',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jumlah Realisasi',\r\n      selector: 'Jumlah_Realisasi',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n      <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Target Sensus di Kabupaten\" : \"laporan Target Sensus di Kabupaten \" +rowSelect.nama_kabupaten}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerKab.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanTargetPerkabTable, LaporanTargetSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlRealisasiPerkab, urlShowLaporanSensusPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanTargetRealisasiPerkab=props => {\r\n\r\n  async function showLaporanSensusPerKab(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_kabupaten\": rowsensusIDSelect.id_kabupaten,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiPerkab\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Kecamatan&&\r\n          ((entry.Nama_Kecamatan!==null? entry.Nama_Kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Target Dan Realisasi</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}<LaporanTargetSearch\r\n        getDataBackend={showLaporanSensusPerKab}\r\n        setSensus={setSensus}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowsensusSelect} \r\n        rowSelect={rowsensusSelect}\r\n        title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <LaporanTargetPerkabTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n          getDataBackend={showLaporanSensusPerKab}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanTargetRealisasiPerkab;\r\n","import React, { useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\nimport axios from 'axios'\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { urlDeleteProv } from '../../../../kumpulanUrl'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKbIdTable=props => {\r\n  const {\r\n    handleOpenViewMap,\r\n    className,handleDelete,\r\n    textfind,provinsifind,\r\n    order, orderBy, SettingProvinsi,\r\n    provinsisExport, filteredItems, handleOpen, selectedProvinsis,\r\n    setSelectedProvinsis,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,Periode,\r\n    deleteProv,\r\n    ...rest }=props;\r\n\r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n\r\n\r\n\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const alatKB = JSON.parse(localStorage.getItem(\"Alat Kontrasepsi\"))\r\n  \r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Provinsi',\r\n      selector: 'nama_provinsi',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jenis Alat Kontrasepsi',\r\n      selector: 'alat_kb',\r\n      sortable: true,\r\n      cell: row =>   {\r\n        return alatKB[row.alat_kb].nama  \r\n      }\r\n    },\r\n    {\r\n      name: 'Jumlah Pemakai',\r\n      selector: 'Jumlah_Pemakai',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n    return <div class=\"form-group\">\r\n              <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedProvinsis_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedProvinsis_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedProvinsis_var=[];\r\n    }\r\n\r\n    setSelectedProvinsis(selectedProvinsis_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedProvinsis.indexOf(id);\r\n    let newSelectedProvinsis=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis, id);\r\n    } else if (selectedIndex===0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(1));\r\n    } else if (selectedIndex===selectedProvinsis.length-1) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(selectedProvinsis.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newSelectedProvinsis=newSelectedProvinsis.concat(\r\n        selectedProvinsis.slice(0, selectedIndex),\r\n        selectedProvinsis.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setSelectedProvinsis(newSelectedProvinsis);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n              title={\"Laporan Penggunaan Alat Kontrasepsi di Indonesia Tahun \" + Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={filteredItems}\r\n              keyField=\"nama_provinsi\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKbIdTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKbIdTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport {LaporanKbIdTable } from './components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlProv, urlLaporanProv, urlshowRealisasiID,urlRealisasiKBID } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKbId=props => {\r\n  //  componentWillMount() {\r\n  //    alert(\"fdfdf\")\r\n  //  }\r\n  const { history }=props;\r\n  if (!localStorage.getItem(\"NamaLengkap\")) {\r\n    history.push('/beranda');\r\n\r\n  }\r\n\r\n  async function showRealisasiID() {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": Periode,\r\n          // \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiKBID\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setFilteredItems(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        // alert(\"Nextwork Error\");\r\n        setFilteredItems([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deleteProvinsi=(e) => {\r\n    const selectedProvinsis_string=selectedProvinsis.join(\"<batas></batas>\");\r\n    let provinsis3=provinsis.filter(function (entry) {\r\n      return entry&&entry.id&&selectedProvinsis_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(provinsis3)\r\n    setProvinsis(provinsis3)\r\n    setProvinsifind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setProvinsisExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#provinsisExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setProvinsifind(e.target.value)\r\n      let provinsis4=provinsis.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(provinsis4)? provinsis4:[provinsis4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(provinsis);\r\n    }\r\n    setProvinsifind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [provinsis, setProvinsis]=useState([]);\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowProvinsisSelect, setRowProvinsisSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedProvinsis, setSelectedProvinsis]=useState([]);\r\n  const [provinsisExport, setProvinsisExport]=useState([]);\r\n  const [provinsifind, setProvinsifind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    showRealisasiID();\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedProvinsis({\r\n      ...setSelectedProvinsis,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowProvinsisSelect({\r\n      ...selectedProvinsis,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n\r\n  const handleOpen=(e, rowProvinsi, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowProvinsisSelect(rowProvinsi);\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/*}\r\n      <ProvinsisToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        textfind={provinsifind} deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        provinsis={provinsis}\r\n\r\n      />\r\n  {*/}\r\n      <div className={classes.content}>\r\n        <LaporanKbIdTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          onChange={onChangefind}\r\n          provinsisExport={provinsisExport}\r\n          // getDataBackend={getProv}\r\n          // deleteProvinsi={deleteProvinsi}\r\n          provinsifind={provinsifind}\r\n          filteredItems={filteredItems}\r\n          selectedProvinsis={selectedProvinsis} \r\n          provinsifind={provinsifind}\r\n          handleOpen={handleOpen}\r\n          setSelectedProvinsis={setSelectedProvinsis}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKbId\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlProv, urlshowKKPerprov, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n    root: {},\r\n    buttonSuccess: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.green,\r\n      '&:hover': {\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#66bb6a',\r\n        boxShadow: 'none',\r\n      },\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n    },\r\n    buttonCancel: {\r\n      color: theme.palette.white,\r\n      backgroundColor: theme.palette.red,\r\n      '&:hover': {\r\n        backgroundColor: '#f44336',\r\n        borderColor: '#ef5350',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst LaporanKbSearch=props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest }=props;\r\n  const classes=useStyles();\r\n  const schema = {\r\n    id_provinsi: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const[kab, setKab]=useState([])\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlshowKKPerprov\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n  \r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors=validate(rowSelect,schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]); \r\n\r\n  const handleSave=() => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\nconst hasError=field => {\r\n    return formState&&formState.errors&&formState.errors[field]? true:false;\r\n  }\r\n  \r\n  const handleChange=event => {\r\n    \r\n    //    event.persist();\r\n\r\n    const errors=validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors? false:true,\r\n      errors: errors||{}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_provinsi\") {\r\n        setRowSelect({\r\n            ...rowSelect,\r\n            [nama]: pencarian(kab, event.target.value),\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKec, id_prov) => {\r\n    let value = id_prov\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKec.filter((entry) => {\r\n        return entry && entry.id_provinsi && (entry.id_provinsi === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kecamatan)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_provinsi\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n               <LapPeriode \r\n              onChange={handleChange2}\r\n              rowSelect={rowSelect}/>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKbSearch.propTypes={\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanKbSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchInput } from 'components';\r\n\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanKbPerProvTable=props => {\r\n  const {\r\n    sensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,Periode,\r\n    setRowSelect,\r\n    getDataBackend,\r\n    // setFormState,\r\n    onChangeFind\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const alatKB = JSON.parse(localStorage.getItem(\"Alat Kontrasepsi\"))\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  const columns=[\r\n    {\r\n      name: 'Nama Kabupaten Kota',\r\n      selector: 'nama_kabupaten',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Jenis Alat Kontrasepsi',\r\n      selector: 'alat_kb',\r\n      sortable: true,\r\n      cell: row => {\r\n        return alatKB[row.alat_kb].nama\r\n      }\r\n    },\r\n    {\r\n      name: 'Jumlah Pemakai',\r\n      selector: 'Jumlah_Pemakai',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n                <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_provinsi == undefined ? \"Laporan Kb  di Provinsi Tahun \"+ Periode : \"Laporan Kb di Provinsi Tahun \" +rowSelect.nama_provinsi + \" \" + Periode}\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"Periode_sensus\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanKbPerProvTable.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanKbPerProvTable;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKbPerprovTable, LaporanKbSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlKab,urlLaporanKab,urlShowsKab,urlShowKab, urlRealisasiPerprov,urlRealisasiKBPerProv } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKbPerProv=props => {\r\n\r\n  async function showLaporanSensusID(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_provinsi\": rowsensusIDSelect.id_provinsi,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiKBPerProv\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        alert(\"Nextwork Error\");\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Provinsi&&\r\n          ((entry.Nama_Provinsi!==null? entry.Nama_Provinsi:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n  const Periode = localStorage.getItem('Periode Sensus');\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  const handleDelete=(e,rowsensus, MessageButton) => {\r\n    setTitle(MessageButton);\r\n    deleteProv()\r\n    setRowsensusSelect(rowsensus);\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\">Target Dan Realisasi</h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}\r\n      <LaporanKbSearch\r\n         getDataBackend={showLaporanSensusID}\r\n         setSensus={setSensus}\r\n         handleChange={handleChange} setData={setData}\r\n         open={open} setRowSelect={setRowsensusSelect} \r\n         rowSelect={rowsensusSelect}\r\n         title={title} datas={filteredItems}>\r\n      </LaporanKbSearch>\r\n      <div className={classes.content}>\r\n        <LaporanKbPerprovTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n          Periode={Periode}\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKbPerProv;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { urlGetSetting, urlShowKab, urlshowKKPerprov, urlShowTargetKk, urlShowTargetKkPerProv } from '../../../../kumpulanUrl'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\n// import { urlGetKelompokData, urlGetSetting, urlShowKelompokData, urlShowSetting } from '../../../../kumpulanUrl';\r\n//import { Map, TileLayer, Marker, Popup, Tooltip } from 'components/LeafletComponent'\r\nimport validate from 'validate.js';\r\nimport { isArrayLiteralExpression, createTypeAliasDeclaration } from 'typescript';\r\nimport { LapPeriode } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  buttonSuccess: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.green,\r\n    '&:hover': {\r\n      backgroundColor: '#4caf50',\r\n      borderColor: '#66bb6a',\r\n      boxShadow: 'none',\r\n    },\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  buttonCancel: {\r\n    color: theme.palette.white,\r\n    backgroundColor: theme.palette.red,\r\n    '&:hover': {\r\n      backgroundColor: '#f44336',\r\n      borderColor: '#ef5350',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst LaporanTargetSearch = props => {\r\n  const { className, textfind, onChange, style, rowSelect, setRowSelect, getDataBackend, ...rest } = props;\r\n  const classes = useStyles();\r\n  const schema = {\r\n    id_kabupaten: {\r\n      presence: { allowEmpty: false, message: 'harus diisi' },\r\n    },\r\n  };\r\n\r\n  const [kab, setKab] = useState([])\r\n  const [prov, setProv] = useState([])\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  async function showTargetKkPerProv(Periode_Sensus) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"Periode_Sensus\": Periode_Sensus,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlshowKKPerprov\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        setProv(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n\r\n        setProv([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n  async function showKab(id_provinsi) {\r\n    /* */\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      //mode: \"cors\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        \"id_provinsi\": id_provinsi,\r\n      })\r\n    };\r\n\r\n    let urlShow = urlShowKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    const response = await fetch(urlShow, requestOptions)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n\r\n      .then(resJson => {\r\n        const data = resJson;\r\n        // console.log('kabupaten =', data.data)\r\n        setKab(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setKab([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n    // console.log(\"formState\", formState)\r\n\r\n\r\n    //   alert(setOpen)\r\n  }, [rowSelect]);\r\n\r\n  const handleSave = () => {\r\n    getDataBackend(rowSelect)\r\n    // console.log(rowSelect.Periode_Sensus)\r\n  }\r\n\r\n  const hasError = field => {\r\n    return formState && formState.errors && formState.errors[field] ? true : false;\r\n  }\r\n\r\n  const handleChange = event => {\r\n\r\n    //    event.persist();\r\n\r\n    const errors = validate(rowSelect, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...rowSelect,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n\r\n\r\n    setRowSelect({\r\n      ...rowSelect,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let nama = event.target.name.replace(\"id\", \"nama\")\r\n    if (event.target.name == \"id_kabupaten\") {\r\n      setRowSelect({\r\n        ...rowSelect,\r\n        [nama]: pencarian(kab, event.target.value),\r\n        [event.target.name]: event.target.value,\r\n      });\r\n      // console.log(\"Ket kecamatan =\", kecamatan)\r\n    }\r\n  }\r\n\r\n  const handleChange2 = event => {\r\n    handleChange(event)\r\n    showTargetKkPerProv(event.target.value)\r\n  }\r\n\r\n  const handleChange3 = event => {\r\n    handleChange(event)\r\n    showKab(event.target.value)\r\n  }\r\n\r\n  const pencarian = (paramKab, id_kab) => {\r\n    let value = id_kab\r\n    let result = [];\r\n    // alert(value)\r\n    result = paramKab.filter((entry) => {\r\n      return entry && entry.id_kabupaten && (entry.id_kabupaten === value)\r\n    });\r\n    // console.log(\"result =\", result[0].nama_kabupaten)\r\n    // alert(\"result = \" + result[0].nama_kecamatan)\r\n    return result[0].nama_kabupaten\r\n  }\r\n\r\n  const handling = () => {\r\n    {\r\n      var tmp = [];\r\n      // alert(tmp) \r\n      // alert( localStorage.getItem(\"Periode Sensus\") - 5 )\r\n      var periode_sensus = localStorage.getItem(\"Periode Sensus\");\r\n      for (var option = periode_sensus; option >= periode_sensus - 5; option--) { tmp.push({ \"option\": option }); }\r\n      console.log('temp =', tmp)\r\n      return tmp.map(option => (\r\n        <option value={option.option}>\r\n          {option.option}\r\n        </option>\r\n\r\n      ))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n\r\n          subheader=\"\"\r\n          title=\"Search Laporan Sensus\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <LapPeriode\r\n                onChange={handleChange2}\r\n                rowSelect={rowSelect} />\r\n\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Provinsi\"\r\n                margin=\"dense\"\r\n                name=\"id_provinsi\"\r\n                onChange={handleChange3}\r\n                select\r\n                value={rowSelect.id_provinsi}\r\n                variant=\"outlined\"\r\n              >\r\n                {prov.map(option => (\r\n                  <option\r\n                    key={option.id_provinsi}\r\n                    value={option.id_provinsi}\r\n                  >\r\n                    {option.nama_provinsi}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Pilih Kabupaten\"\r\n                margin=\"dense\"\r\n                name=\"id_kabupaten\"\r\n                onChange={handleChange}\r\n                select\r\n                value={rowSelect.id_kabupaten}\r\n                variant=\"outlined\"\r\n              >\r\n                {kab.map(option => (\r\n                  <option\r\n                    key={option.id_kabupaten}\r\n                    value={option.id_kabupaten}\r\n                  >\r\n                    {option.nama_kabupaten}\r\n                  </option>\r\n                ))}\r\n\r\n              </TextField>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!formState.isValid}\r\n          <Button\r\n            color=\"primary\"\r\n            className={classes.buttonSuccess}\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!formState.isValid}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanTargetSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default LaporanTargetSearch;\r\n","import React, { useEffect, useState } from 'react';\r\n//import styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n// import { PeriodeSensus } from 'components';\r\nimport { SearchInput } from 'components';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/EditOutlined';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { urlProv,urlShowKab } from '../../../../kumpulanUrl';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport {\r\n  rowSelect,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //    minWidth: 1050\r\n    minWidth: '100%'\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fontFamily:{\r\n    fontFamily: 'font-poppins'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }, importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n}));\r\nconst LaporanSensusPerKab=props => {\r\n  const {\r\n    sensus,\r\n    setSensus,\r\n    className,handleDelete,\r\n    textfind,kabupatenfind,\r\n    order, orderBy,\r\n    provinsisExport, filteredItems, handleOpen, selectedkabupaten,\r\n    setselectedkabupaten,\r\n    Export,\r\n    convertArrayOfObjectsToCSV,\r\n    downloadCSV,\r\n    rowSelect,\r\n    getDataBackend,\r\n    setRowSelect,\r\n    // setFormState,\r\n    onChangeFind,\r\n    onChange\r\n\r\n    , ...rest }=props;\r\n\r\n  \r\n  const [filterText, setFilterText]=React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle]=React.useState(false);\r\n  const classes=useStyles();\r\n\r\n  const [rowsPerPage, setRowsPerPage]=useState(10);\r\n  const [page, setPage]=useState(0);\r\n  const[laporKab,setLaporKab]=useState([])\r\n  const [prov, setProv]=useState([]);\r\n  const [formState, setFormState]=useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  const customStyles={\r\n    header: {\r\n      style: {\r\n        minHeight: '10px',\r\n        borderTopStyle: 'hidden',\r\n        borderTopWidth: '0',\r\n        borderTopsColor: 'ffffff',\r\n\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBottomColor: '000000',\r\n        minWidth: '98%',\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n        width: '98%',\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n\r\n    },\r\n    headRow: {\r\n      style: {\r\n        borderTopStyle: 'solid',\r\n        borderTopWidth: '1px',\r\n        borderTopColor: '000000',\r\n        //alignItems: 'center',\r\n        borderBottomStyle: 'solid',\r\n        borderBottomWidth: '1px',\r\n        borderBott0mColor: '000000',\r\n        width: '98%',\r\n\r\n        marginLeft: '7px', // override the cell padding for head cells\r\n        //paddingRight: '3px',\r\n\r\n        minHeight: '30px', // override the row height\r\n\r\n      },\r\n      //height: '30px',\r\n    },\r\n    headCells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        },\r\n        //textAlign: 'center',\r\n        justifyContent: 'center',\r\n\r\n        //alignItems: 'center',\r\n\r\n\r\n      },\r\n\r\n    },\r\n    cells: {\r\n      style: {\r\n        '&:not(:last-of-type)': {\r\n\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n          //marginLeft: '3px', // override the cell padding for head cells\r\n          //          marginRight: '3px',\r\n          minHeight: '30px', // override the row heigh\r\n        },\r\n\r\n        ':last-of-type': {\r\n          borderLeftStyle: 'solid',\r\n          borderLeftWidth: '1px',\r\n          borderLeftColor: '000000',\r\n\r\n          borderRightStyle: 'solid',\r\n          borderRightWidth: '1px',\r\n          borderRightColor: '000000',\r\n          minHeight: '30px', // override the row heigh\r\n\r\n        }\r\n\r\n        \r\n\r\n\r\n      },\r\n\r\n    },\r\n  };\r\n  const alatKB = JSON.parse(localStorage.getItem(\"Alat Kontrasepsi\"))\r\n\r\n  const columns=[\r\n    // {\r\n    //   name: 'Kode Depdagri',\r\n    //   selector: 'KodeDepdagri',\r\n    //   sortable: true,\r\n    // },\r\n    {\r\n      name: 'Nama Kecamatan',\r\n      selector: 'nama_kecamatan',\r\n      font:'Poppins',\r\n      sortable: true,\r\n    }, \r\n    {\r\n      name: 'Jenis Alat Kontrasepsi',\r\n      selector: 'alat_kb',\r\n      sortable: true,\r\n      cell: row =>   {\r\n        return alatKB[row.alat_kb].nama  \r\n      }\r\n    },\r\n    {\r\n      name: 'Jumlah Pemakai',\r\n      selector: 'Jumlah_Pemakai',\r\n      sortable: true,\r\n    },\r\n  ];\r\n  // const filteredItems=provinsis.filter(item => item.nama_provinsi&&item.nama_provinsi.toLowerCase().includes(filterText.toLowerCase()));\r\n  const subHeaderComponentMemo=React.useMemo(() => {\r\n    const handleClear=() => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n  return <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n        <Button filteredItems={filteredItems} color=\"primary\" onClick={(e) => downloadCSV(e, [])}>\r\n          <img src=\"/img/xls.jpeg\" />\r\n        </Button>\r\n\r\n      </div>\r\n  </div>\r\n\r\n\r\n\r\n      ;\r\n  }, [filteredItems, filterText, resetPaginationToggle]);\r\n\r\n\r\n\r\n\r\n\r\n  /*  if (localStorage.getItem('accessId')!==\"2\") {\r\n      return <Redirect to='/beranda' />;\r\n    }\r\n  */\r\n\r\n  const handleSelectAll=event => {\r\n\r\n    //const { groups }=props;\r\n    //setSelectedUsers\r\n    let selectedkabupaten_var;\r\n\r\n    if (event.target.checked) {\r\n      selectedkabupaten_var=provinsis.map(provinsi => provinsi.id);\r\n    } else {\r\n      selectedkabupaten_var=[];\r\n    }\r\n\r\n    setselectedkabupaten(selectedkabupaten_var);\r\n  };\r\n\r\n  const handleSelectOne=(event, id) => {\r\n\r\n    const selectedIndex=selectedkabupaten.indexOf(id);\r\n    let newselectedkabupaten=[];\r\n\r\n    if (selectedIndex===-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten, id);\r\n    } else if (selectedIndex===0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(1));\r\n    } else if (selectedIndex===selectedkabupaten.length-1) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(selectedkabupaten.slice(0, -1));\r\n    } else if (selectedIndex>0) {\r\n      newselectedkabupaten=newselectedkabupaten.concat(\r\n        selectedkabupaten.slice(0, selectedIndex),\r\n        selectedkabupaten.slice(selectedIndex+1)\r\n      );\r\n    }\r\n\r\n    setselectedkabupaten(newselectedkabupaten);\r\n    //console.log(selectedUsers);\r\n  };\r\n\r\n  const handlePageChange=(event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange=event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //  const filteredItems=provinsis;\r\n  //const actionsMemo=React.useMemo(() => <Export onExport={() => downloadCSV()} />, []);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n\r\n          <div className={classes.inner}>\r\n            <DataTable\r\n            font=\"Poppins\"\r\n              title={rowSelect.nama_kabupaten == undefined ? \"Laporan Target Sensus di Kabupaten tahun \" + localStorage.getItem(\"Periode Sensus\") : \"Laporan Target Sensus di Kabupaten \" + rowSelect.nama_kabupaten + \" Tahun \" + localStorage.getItem(\"Periode Sensus\") }\r\n              customStyles={customStyles}\r\n              columns={columns}\r\n              data={sensus}\r\n              keyField=\"nama_kabupaten\"\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n              subHeader\r\n              subHeaderComponent={subHeaderComponentMemo}\r\n              selectableRows\r\n              persistTableHead\r\n              dense\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLaporanSensusPerKab.propTypes={\r\n  className: PropTypes.string,\r\n  filteredItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LaporanSensusPerKab;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\n//import '../../assets/vendor/dist/css/datatable1.css';\r\n//import { ImportScript } from '../components';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport moment from 'moment';\r\nimport { LaporanKbPerkabTable, LaporanKbSearch} from './components';\r\nimport { ModalComponent } from 'components';\r\n//import mockData from './dataPropinsi';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { urlRealisasiPerkab, urlShowLaporanSensusPerKab,urlRealisasiKBPerKab } from '../../kumpulanUrl'\r\nimport '../../assets/vendor/dist/css/datatable.css';\r\nimport '../../assets/vendor/dist/css/datatable1.css';\r\nimport axios from 'axios';\r\n\r\n//import Modal from \"@material-ui/core/Modal\";\r\n//import Backdrop from \"@material-ui/core/Backdrop\";\r\n//import Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles=makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#fff',\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  yogi: {\r\n    marginTop: theme.spacing(300)\r\n  }\r\n}));\r\n\r\nconst LaporanKbPerKab=props => {\r\n\r\n  async function showLaporanSensusPerKab(rowsensusIDSelect) {\r\n    // const userId=localStorage.getItem('Periode Sensus');\r\n    /* */\r\n    const requestOptions={\r\n      method: 'POST',\r\n      mode: \"cors\",\r\n        body: JSON.stringify({\r\n          \"Periode_Sensus\": rowsensusIDSelect.Periode_Sensus,\r\n          \"id_kabupaten\": rowsensusIDSelect.id_kabupaten,\r\n          // \"id_sensusID\": rowsensusIDSelect.id_sensusID,\r\n        }),\r\n      \r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    let url=urlRealisasiKBPerKab\r\n    // eslint-disable-next-line no-useless-concat\r\n    // alert()\r\n    const response=await fetch(url, requestOptions)\r\n      .then(res => {\r\n\r\n        return res.json();\r\n        \r\n      })\r\n\r\n      .then(resJson => {\r\n        const data=resJson;\r\n        setSensus(data.data);\r\n        //return false;\r\n      })\r\n      .catch(e => {\r\n        //console.log(e);\r\n        setSensus([]);\r\n        //this.setState({ ...this.state, isFetching: false });\r\n      });\r\n  }\r\n\r\n\r\n  const csvData=() => {\r\n    const tempCsv=[];\r\n    const tempCsvItem=[];\r\n\r\n    //];\r\n\r\n    SettingProvinsi[0].HeaderData.map(headCell => {\r\n      tempCsvItem.push(\r\n        headCell.label\r\n      )\r\n    });\r\n    tempCsv.push(tempCsvItem)\r\n\r\n\r\n\r\n    return tempCsv\r\n  }\r\n\r\n\r\n  const deletesensus=(e) => {\r\n    const selectedsensus_string=selectedsensus.join(\"<batas></batas>\");\r\n    let sensus3=sensus.filter(function (entry) {\r\n      return entry&&entry.id&&selectedsensus_string.toUpperCase().indexOf(entry.id.toUpperCase())===-1;\r\n    });\r\n    setFilteredItems(sensus3)\r\n    setSensus(sensus3)\r\n    setSensusfind('')\r\n    //console.log(\"groups3\",groups3);\r\n    //findData(groupfind)\r\n  }\r\n  \r\n  const classes=useStyles();\r\n  const printPdf=(e) => {\r\n    //alert(\"dsdsd\")\r\n    setSensusExport(flteredItems);\r\n    const doc=new jsPDF()\r\n\r\n    const timer=setTimeout(() => {\r\n      doc.setProperties({ title: SettingProvinsi[0].TitleModule });\r\n      doc.viewerPreferences({ 'DisplayDocTitle': true });\r\n      doc.autoTable({ html: '#sensusExport' })\r\n      var posis_x=(doc.previousAutoTable.width-(SettingProvinsi[0].TitleModule).length)/2\r\n      doc.text(SettingProvinsi[0].TitleModule, posis_x, 6);\r\n\r\n      doc.save('provinsi.pdf')\r\n    }, 2000);\r\n    return () => clearTimeout(timer);\r\n\r\n\r\n  }\r\n  const getStatus=(status_prm) => {\r\n    let status=\"\";\r\n    if (status_prm==='A')\r\n      status='Active'\r\n    else\r\n      status='Inactive'\r\n    return status;\r\n  }\r\n  const comboBox=(e) =>{\r\n    if (e.targer.value.length>=3) {\r\n      \r\n    }\r\n  }\r\n  const onChangefind=(e) => {\r\n    // return;\r\n    if (e.target.value.length>=3) {\r\n      setSensusfind(e.target.value)\r\n      let sensus4=sensus.filter(function (entry) {\r\n        return entry&&entry.Nama_Kecamatan&&\r\n          ((entry.Nama_Kecamatan!==null? entry.Nama_Kecamatan:'').toUpperCase().indexOf(e.target.value.toUpperCase())!==-1);\r\n      });\r\n      setFilteredItems(Array.isArray(sensus4)? sensus4:[sensus4]);\r\n\r\n    } if (e.target.value.length==0) {\r\n      setFilteredItems(sensus);\r\n    }\r\n    setSensusfind(e.target.value)\r\n\r\n    //console.log(\"user1\", users1);\r\n  }\r\n  const Export=({ onExport }) => (\r\n    <Button onClick={e => onExport(e.target)}>Export</Button>\r\n  );\r\n\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter=',';\r\n    const lineDelimiter='\\n';\r\n    const keys=Object.keys(array[0]);\r\n    result='';\r\n    result+=keys.join(columnDelimiter);\r\n    result+=lineDelimiter;\r\n\r\n    array.forEach(item => {\r\n      let ctr=0;\r\n      keys.forEach(key => {\r\n        if (ctr>0) result+=columnDelimiter;\r\n\r\n        result+=item[key];\r\n\r\n        ctr++;\r\n      });\r\n      result+=lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV(e) {\r\n    const link=document.createElement('a');\r\n    let csv=convertArrayOfObjectsToCSV(filteredItems);\r\n    if (csv==null) return;\r\n\r\n    const filename='export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv=`data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n\r\n\r\n  const [sensus, setSensus]=useState([]);\r\n  const [kab, setKab]=useState([]);\r\n  // const [provinsiId, setProvinsiId]=useState(getKab());\r\n  const [filteredItems, setFilteredItems]=useState([]);\r\n  const [rowsensusSelect, setRowsensusSelect]=useState({});\r\n  const [open, setOpen]=React.useState(false);\r\n  const [title, setTitle]=React.useState(false);\r\n  const [selectedsensus, setSelectedsensus]=useState([]);\r\n  const [sensusExport, setSensusExport]=useState([]);\r\n  const [sensusfind, setSensusfind]=useState([]);\r\n  const [add,setAdd]=React.useState([])\r\n  const [order, setOrder]=React.useState('asc');\r\n  const [orderBy, setOrderBy]=React.useState('keyId');\r\n  const [compPopup, setCompPopup]=useState(null);\r\n\r\n  useEffect(() => {\r\n    // getKab();\r\n    // console.log('prov',provinsiId)\r\n    //   alert(setOpen)\r\n  }, [order, orderBy]);\r\n  // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\r\n\r\n\r\n  const handleChange=event => {\r\n    //setData(event.target.name, event.target.value);\r\n\r\n\r\n    setSelectedsensus({\r\n      ...setSelectedsensus,\r\n      [event.target.name]: event.target.value[0]\r\n    });\r\n\r\n  };\r\n\r\n\r\n  const setData=(field1, value1, field2, value2, nmProvinsi, kdProvinsi, status, keyId) => {\r\n    setRowsensusSelect({\r\n      ...selectedsensus,\r\n      [field1]: value1,\r\n\r\n      [field2]: value2,\r\n      ['kdProvinsi']: kdProvinsi,\r\n      ['nmProvinsi']: nmProvinsi,\r\n      ['status']: status,\r\n      ['keyId']: keyId,\r\n    });\r\n\r\n    /**/\r\n    //alert(field1+\" \"+value);\r\n    //alert()\r\n\r\n  };\r\n\r\n  // async function showKab(id_provinsi) {\r\n  //   /* */\r\n  //   const requestOptions={\r\n  //     method: 'POST',\r\n  //     //mode: \"cors\",\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       \"id_provinsi\": id_provinsi,\r\n  //     })\r\n  //   };\r\n\r\n  //   let urlShow=urlShowKab\r\n  //   // eslint-disable-next-line no-useless-concat\r\n  //   const response=await fetch(urlShow, requestOptions)\r\n  //     .then(res => {\r\n  //       return res.json();\r\n  //     })\r\n\r\n  //     .then(resJson => {\r\n  //       const data=resJson;\r\n  //       console.log('sensus =',data.data)\r\n  //       setSensus(data.data);\r\n  //       //return false;\r\n  //     })\r\n  //     .catch(e => {\r\n  //       //console.log(e);\r\n  //       alert(\"Nextwork Error\");\r\n  //       setSensus([]);\r\n  //       //this.setState({ ...this.state, isFetching: false });\r\n  //     });\r\n  // } \r\n\r\n\r\n  const handleOpen=(e, rowsensus, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    setRowsensusSelect(rowsensus);\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /* */\r\n  const handleOpenViewMap=(e, MessageButton) => {\r\n    setOpen(true);\r\n    setTitle(MessageButton);\r\n    //    alert(title)\r\n    //setRowsensusSelect(rowsensus);\r\n\r\n    //setCompPopup(\"Map\")\r\n    //setCompPopup(\"NonMap\")\r\n    //console.log(\"rowgroup\", rowgroup)\r\n\r\n\r\n  };\r\n\r\n  /**/\r\n  //openPopup\r\n  const handleClose=() => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h5 style={{ color: 'black' }} className=\"font-poppins\"></h5>\r\n      {/*}\r\n      <sensusToolbar\r\n        handleOpenViewMap={handleOpenViewMap}\r\n        deleteProvinsi={deleteProvinsi}\r\n        csvData={csvData} printPdf={printPdf} onChange={onChangefind}\r\n        handleOpen={handleOpen}\r\n        sensus={sensus}\r\n\r\n      />\r\n  {*/}<LaporanKbSearch\r\n        getDataBackend={showLaporanSensusPerKab}\r\n        setSensus={setSensus}\r\n        handleChange={handleChange} setData={setData}\r\n        open={open} setRowSelect={setRowsensusSelect} \r\n        rowSelect={rowsensusSelect}\r\n        title={title} datas={filteredItems}\r\n      />\r\n      <div className={classes.content}>\r\n        <LaporanKbPerkabTable\r\n          handleOpenViewMap={handleOpenViewMap}\r\n          rowSelect={rowsensusSelect}\r\n          sensus={sensus}\r\n          getDataBackend={showLaporanSensusPerKab}\r\n        // textfind={sensusfind} \r\n          onChange={onChangefind}\r\n          // showKab={showKab}\r\n          sensusExport={sensusExport}\r\n          sensusfind={sensusfind}\r\n          filteredItems={filteredItems}\r\n          setRowSelect={setRowsensusSelect} rowSelect={rowsensusSelect}\r\n          selectedsensus={selectedsensus} \r\n          sensusfind={sensusfind}\r\n          handleOpen={handleOpen}\r\n          setSelectedsensus={setSelectedsensus}\r\n          Export={Export}\r\n          convertArrayOfObjectsToCSV={convertArrayOfObjectsToCSV}\r\n          downloadCSV={downloadCSV}\r\n\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default LaporanKbPerKab;\r\n","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport {\r\n  Main as MainLayout,\r\n  Minimal as MinimalLayout,\r\n  MinimalUser as MinimalUserLayout,\r\n} from './layouts';\r\n\r\nimport {\r\n  Team as TeamView,\r\n  ContactUs as ContactUsView,\r\n  Portfolio as PortfolioView,\r\n  Services as ServicesView,\r\n  AboutUs as AboutUsView,\r\n  Dashboard as DashboardView,\r\n  KabKotaList as KabKotaListView,\r\n  ProductList as ProductListView,\r\n  GroupList as GroupListView,\r\n  Typography as TypographyView,\r\n  Icons as IconsView,\r\n  VisitorUser as VisitorUsers,\r\n  Settings as SettingsView,\r\n  SignUp as SignUpView,\r\n  SignIn as SignInView,\r\n  Signout as SignoutView,\r\n  NotFound as NotFoundView,\r\n  KelurahanList as KelurahanListView,\r\n  KabupatenList as KabupatenListView,\r\n  LaporanKabupaten as LaporanKabupatenView,\r\n  KecamatanList as KecamatanListView,\r\n  ProvinsiList as ProvinsiListView,\r\n  RtList as RtListView,\r\n  RwList as RwListView,\r\n  VuserList as VuserListView,\r\n  LaporanKecamatan as LaporanKecamatanView,\r\n  LaporanPerKabupaten as LaporanPerKabupatenView,\r\n  LaporanPerKecamatan as LaporanPerKecamatanView,\r\n  LaporanProvID as LaporanProvIDView,\r\n  LaporanPerProv as LaporanPerProvView,\r\n  LaporanKelurahan as LaporanKelurahanView,\r\n  LaporanPerKelurahan as LaporanPerKelurahanView,\r\n  LaporanSensusPerKelurahan as LaporanSensusPerKelurahanView,\r\n  LaporanSensusPerKecamatan as LaporanSensusPerKecamatanView,\r\n  SettingList as SettingListView,\r\n  KelompokDataList as KelompokDataListView,\r\n  LaporanSensusIDList as LaporanSensusIDView,\r\n  TargetKkList as TargetKkListView,\r\n  LaporanSensusPerKab as LaporanSensusPerKabVIew,\r\n  LaporanSensusPerProv as LaporanSensusPerProvView,\r\n  Profile as ProfileView,\r\n  UserAccessSurveyList as UserAccessSurveyListView,\r\n  LaporanTargetRealisasiID as LaporanTargetRealisasiIDView,\r\n  LaporanTargetRealisasiPerprov as LaporanTargetRealisasiPerprovView,\r\n  LaporanTargetRealisasiPerkab as LaporanTargetRealisasiPerkabView,\r\n  LaporanKbId as LaporanKbIdView,\r\n  LaporanKbPerProv as LaporanKbProvView,\r\n  LaporanKbPerkab as LaporanKbKabView,\r\n\r\n\r\n\r\n} from './views';\r\n\r\nconst Routes = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/beranda\"\r\n      /> */}\r\n\r\n      {localStorage.getItem(\"Username\") ? <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/beranda\"\r\n      /> : <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/login\"\r\n      />}\r\n\r\n\r\n      <RouteWithLayout\r\n        component={SettingListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/setting\"\r\n      />\r\n      <RouteWithLayout\r\n        component={ProfileView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/profile\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/login\"\r\n      />\r\n      <RouteWithLayout\r\n        component={KelompokDataListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kelompok-data\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={DashboardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/beranda\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SettingListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/setting\"\r\n      />\r\n      <RouteWithLayout\r\n        component={KelompokDataListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kelompok-data\"\r\n      />\r\n      <RouteWithLayout\r\n        component={TargetKkListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-kk\"\r\n      />\r\n\r\n\r\n      {/* Beginning Of Input Data */}\r\n      <RouteWithLayout\r\n        component={VuserListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/vusertable\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={ProvinsiListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/provinsi\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={KabupatenListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kabupaten\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={KecamatanListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kecamatan\"\r\n      />\r\n\r\n\r\n      <RouteWithLayout\r\n        component={KelurahanListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/kelurahan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={RtListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/rt\"\r\n      />\r\n      <RouteWithLayout\r\n        component={RwListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/rw\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserAccessSurveyListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/user-access-survey\"\r\n      />\r\n\r\n      {/*End Of Input Data  */}\r\n\r\n\r\n      {/* Beginning of Laporan */}\r\n\r\n      <RouteWithLayout\r\n        component={LaporanProvIDView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan/provinsiID\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={LaporanPerProvView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan/perProvTable\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKabupatenView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-kabupaten\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanPerKabupatenView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-per-kabupaten\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanPerKecamatanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-per-kecamatan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKecamatanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-kecamatan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKelurahanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-kelurahan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanPerKelurahanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-perkelurahan\"\r\n      />\r\n\r\n      {/* Ending */}\r\n\r\n      {/* Beginning Laporan Sensus */}\r\n      <RouteWithLayout\r\n        component={LaporanSensusIDView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-indonesia\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerKabVIew}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perkab\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerProvView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perprov\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerKelurahanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perkelurahan\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanSensusPerKecamatanView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-sensus-perkecamatan\"\r\n      />\r\n      {/* Ending */}\r\n\r\n      {/* Beginning Target Realisasi */}\r\n      <RouteWithLayout\r\n        component={LaporanTargetRealisasiIDView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-realisasi-id\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanTargetRealisasiPerprovView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-realisasi-perprov\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanTargetRealisasiPerkabView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/target-realisasi-perkab\"\r\n      />\r\n\r\n      <RouteWithLayout\r\n        component={LaporanKbIdView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-alatKb-id\"\r\n      />\r\n      <RouteWithLayout\r\n        component={LaporanKbProvView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-alatKb-prov\"\r\n      />\r\n        <RouteWithLayout\r\n        component={LaporanKbKabView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/laporan-alatKb-kab\"\r\n      />\r\n\r\n      {/* Ending */}\r\n\r\n      {/* <RouteWithLayout\r\n        component={SignInView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/login\"\r\n      />\r\n      <RouteWithLayout\r\n        component={UserSignInView}\r\n        exact\r\n        layout={MinimalUserLayout}\r\n        path=\"/login-user\"\r\n      /> */}\r\n      <RouteWithLayout\r\n        component={SignoutView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/logout\"\r\n      />\r\n      <RouteWithLayout\r\n        component={NotFoundView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/not-found\"\r\n      />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nconst browserHistory=createBrowserHistory();\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators={\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={browserHistory}>\r\n          <Routes />\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}